(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1511534,      27082]
NotebookOptionsPosition[   1505822,      26973]
NotebookOutlinePosition[   1506254,      26990]
CellTagsIndexPosition[   1506211,      26987]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Example of Text Analysis", "Title",ExpressionUUID->"c8e2aa31-185a-442d-837a-f909475acdac"],

Cell["", "Subtitle",ExpressionUUID->"edfcb7a1-6f85-47f0-a57a-29c4e1dab6a4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"webpage", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<https://writings.stephenwolfram.com/2017/11/what-is-a-computational-\
essay/\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.910486163987076*^9, 3.9104861658391905`*^9}, {
  3.9106801936968822`*^9, 3.910680197025117*^9}},
 CellLabel->
  "In[288]:=",ExpressionUUID->"43d4ef48-5e30-4476-891c-d2982427656e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"DeleteStopwords", "[", "webpage", "]"}], "]"}]], "Input",
 CellLabel->
  "In[289]:=",ExpressionUUID->"50f1df36-f208-4c8d-9e68-a63729686596"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Computational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15794550277308897`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Typeset\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12590857418443627`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-11.5, 29.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Language\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08767094973991527],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {5.5, -27.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"DPClash.MilitaryConflictE.English\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-0.5, 47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Essays\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0856040511212925],
     FontColor->RGBColor[1, 0.75, 0]], {-0.5, -49.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Wolfram\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08973784835853801],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, 61.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Essay\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09077129766784939],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-20.5, -67.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"$\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.24475524475524477`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-65.5, -47.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"input\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07526955802817872],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {74.5, 27.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"computer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054600571841951155`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {9.5, 80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Dynamic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058734369079196665`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {66.5, -50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"allassumptions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-0.5, -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"assumptions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04426607874883737],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {45.5, -68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"English\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058734369079196665`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {82.5, -25.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"EnglishCivilWar\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-11.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MilitaryConflict\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-0.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"immediately\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {77.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"notebooks\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0525336732233284],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-80.5, 57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"querystate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-93.5, 22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Technology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {70.5, 68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"knowledge\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {1.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"languages\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-61.5, 76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"things\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.048399875986082884`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-92.5, 36.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mathematica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {57.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"open\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054600571841951155`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-94.5, -21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"possible\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {61.5, -81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"understand\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-0.5, 107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"word\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0618347170071308],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-98.5, -36.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Example\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {91.5, 41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sometimes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-0.5, -108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"November\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-67.5, -87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"notebook\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04219918013021461],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-97.5, -54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Assuming\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03496503496503497],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-67.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Students\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {51.5, 100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"actually\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {52.5, -95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ordinary\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-48.5, 99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"name\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054600571841951155`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-55.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Express\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {107.5, -38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"planets\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {44.5, -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"writing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {98.5, -63.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"just\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05046677460470564],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {111.5, 19.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"History\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-88.5, -76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Civil\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.060801267697819426`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-42.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"output\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-0.5, 117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"query\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-0.5, -117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"War\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06286816631644218],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-41.5, 111.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"code\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.053567122532639774`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {43.5, 113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CloseCurlyQuote]s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10317268937958593`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {93.5, -82.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"People\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-102.5, 68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"RowBox\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-101.5, -65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Science\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {34.5, -120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Entity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {95.5, 75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Way\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04426607874883737],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {121.5, -23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"write\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04943332529539426],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {115.5, -50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"years\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {119.5, 29.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"boxes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-21.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"desc\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0525336732233284],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {10.5, 127.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"true\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054600571841951155`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-82.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-125.5, -22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"point\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-30.5, -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"like\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057700919769885284`],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {85.5, -98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"human\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {9.5, -129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"instead\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-106.5, 77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"easy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-70.5, 108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Gogh\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-124.5, 32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Makes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-76.5, -107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"story\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-121.5, 45.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"New\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04633297736746013],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {125.5, 37.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"course\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {58.5, 78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"make\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {40.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Want\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {101.5, 84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cloud\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {122.5, 48.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"book\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {90.5, 96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"world\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-51.5, 123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"don\[CloseCurlyQuote]t\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {73.5, 110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Good\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {75.5, -112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Form\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-92.5, -96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"use\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04943332529539426],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-54.5, -123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"say\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-129.5, -32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Work\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-17.5, 133.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2023\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {18.5, 135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04219918013021461],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {123.5, 59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Let\[CloseCurlyQuote]s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-103.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"start\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-20.5, -135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cells\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {65.5, -40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2017\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {40.5, -131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"read\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {115.5, -74.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"text\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04219918013021461],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-126.5, 54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\:2715\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.060801267697819426`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-112.5, -78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pm\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-41.5, -41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"idea\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-129.5, -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CloseCurlyQuote]re\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {62.5, -121.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CloseCurlyQuote]ve\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {64.5, 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"run\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-82.5, 44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CloseCurlyQuote]m\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-134.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"6\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-121.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {115.5, 69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"4\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-69.5, 116.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"1\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {129.5, -37.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"n\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-37.5, -50.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-143., 143.}, {-143., 139.}}]], "Output",
 CellChangeTimes->{3.910486176254631*^9, 3.91068032049168*^9, 
  3.9106805131874003`*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"a5d57228-26c3-4bc6-853b-303bee3d335c"]
}, Open  ]],

Cell["\<\
This word cloud makes me think that this conversation is not very \
interesting. There seems to be no real discussion other than an assortment of \
people and topics\
\>", "Text",ExpressionUUID->"76fe2f39-6bbb-4d99-8c07-c246abc3290a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"contents", "=", 
   RowBox[{"TextContents", "[", 
    RowBox[{"webpage", ",", 
     RowBox[{"VerifyInterpretation", "->", "True"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[290]:=",ExpressionUUID->"e25964a0-26b2-44a5-8cc1-4c0a13cb3b3f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"counts", "=", 
  RowBox[{"ReverseSort", "@", 
   RowBox[{"CountsBy", "[", 
    RowBox[{"contents", ",", 
     RowBox[{"#Type", "&"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9106802146939993`*^9, 3.910680217366579*^9}, 
   3.910680301504183*^9},
 CellLabel->
  "In[291]:=",ExpressionUUID->"366cd052-0544-4e22-9ef8-b3834a034c1d"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> <|
      "Year" -> 46, "Date" -> 44, "MilitaryConflict" -> 39, 
       "TopologicalSpaceType" -> 39, "Organization" -> 33, "Language" -> 31, 
       "GovernmentAgency" -> 31, "Occupation" -> 29, "Quantity" -> 25, 
       "Person" -> 19, "ProgrammingLanguage" -> 16, "Time" -> 15, "GivenName" -> 
       15, "PhysicalConstant" -> 14, "Surname" -> 14, "Unit" -> 13, 
       "OrdinalNumber" -> 13, "MusicWork" -> 7, "Company" -> 7, "MusicAlbum" -> 
       6, "Color" -> 5, "HistoricalEvent" -> 5, "NonperiodicTiling" -> 4, 
       "Book" -> 3, "Country" -> 3, "AstronomicalObjectType" -> 2, 
       "FoodManufacturer" -> 2, "Nationality" -> 2, "Periodical" -> 1, 
       "TropicalStorm" -> 1, "FamousMathProblem" -> 1, "PersonTitle" -> 1, 
       "Star" -> 1, "AstronomicalObject" -> 1, "USState" -> 1, "City" -> 1, 
       "Financial" -> 1, "FileFormat" -> 1, "NetworkService" -> 1|>, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "InitialType" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 39], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`ColumnShape[
        TypeSystem`PackageScope`KeyValueShape[
         TypeSystem`PackageScope`AtomShape[246.40000000000003`], 
         TypeSystem`PackageScope`AtomShape[34]]], 20, 
       DirectedInfinity[1], {}], "Type" -> TypeSystem`Assoc[
       TypeSystem`Atom[String], 
       TypeSystem`Atom[Integer], 39], "Path" -> {}, "DisplayedRowCount" -> 20,
      "DisplayedColumnCount" -> 1, "DataRowCount" -> 39, "DataColumnCount" -> 
     1, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Year", 
                  Style[
                  "Year", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Year"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["46"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Year"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Date", 
                  Style[
                  "Date", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Date"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["44"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Date"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MilitaryConflict", 
                  Style[
                  "MilitaryConflict", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MilitaryConflict"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MilitaryConflict"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MilitaryConflict"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["TopologicalSpaceType", 
                  Style[
                  "TopologicalSpaceType", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["TopologicalSpaceType"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TopologicalSpaceType"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["39"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["TopologicalSpaceType"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Organization", 
                  Style[
                  "Organization", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Organization"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Organization"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["33"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Organization"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Language", 
                  Style[
                  "Language", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Language"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Language"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Language"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GovernmentAgency", 
                  Style[
                  "GovernmentAgency", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["GovernmentAgency"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["GovernmentAgency"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["31"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["GovernmentAgency"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Occupation", 
                  Style[
                  "Occupation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Occupation"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Occupation"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Occupation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Quantity", 
                  Style[
                  "Quantity", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Quantity"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quantity"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["25"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Quantity"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Person", 
                  Style[
                  "Person", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Person"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Person"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["19"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Person"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["ProgrammingLanguage", 
                  Style[
                  "ProgrammingLanguage", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["ProgrammingLanguage"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ProgrammingLanguage"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["16"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["ProgrammingLanguage"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Time", 
                  Style[
                  "Time", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Time"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Time"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["GivenName", 
                  Style[
                  "GivenName", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["GivenName"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["GivenName"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["15"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["GivenName"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["PhysicalConstant", 
                  Style[
                  "PhysicalConstant", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["PhysicalConstant"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PhysicalConstant"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["PhysicalConstant"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Surname", 
                  Style[
                  "Surname", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Surname"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Surname"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["14"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Surname"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Unit", 
                  Style[
                  "Unit", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Unit"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Unit"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Unit"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["OrdinalNumber", 
                  Style[
                  "OrdinalNumber", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["OrdinalNumber"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OrdinalNumber"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["13"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["OrdinalNumber"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MusicWork", 
                  Style[
                  "MusicWork", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MusicWork"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MusicWork"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MusicWork"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Company", 
                  Style[
                  "Company", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["Company"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Company"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["7"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["Company"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["MusicAlbum", 
                  Style[
                  "MusicAlbum", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    Key["MusicAlbum"]}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MusicAlbum"]}, "RowHeader", False], "Mouse"], 
              ImageSize -> {{246.40000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["6"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                 Key["MusicAlbum"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 39, 1], {1, 39 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[39, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[39, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 39, 1], {1, 39 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       318.90000000000003`, {327.39743637626515`, 333.70256362373465`}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      318.90000000000003`, {327.39743637626515`, 333.70256362373465`}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.910486266846388*^9, 3.910680500434373*^9, 
  3.9106805656091566`*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"46d9f1aa-d20b-482d-962d-c8f53560f212"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["contents"], "Input",
 CellChangeTimes->{{3.9104884749846706`*^9, 3.910488476907979*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"8cc4ae2f-537c-4bef-aef0-0744fd6f5c31"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "String" -> "Stephen", "Type" -> "GivenName", "Position" -> {7, 13}, 
        "Probability" -> 0.9918606877326965, "Interpretation" -> 
        Entity["GivenName", {"Stephen", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{"\[Congruent]     ", 
           Highlighted["Stephen"], 
           " Wolfram                                        Writings          \
                 "}]|>, <|
       "String" -> "Stephen Wolfram", "Type" -> "Person", 
        "Position" -> {7, 21}, "Probability" -> 0.9616961479187012, 
        "Interpretation" -> Entity["Person", "StephenWolfram::j276d"], 
        "HighlightedSnippet" -> Row[{"\[Congruent]     ", 
           Highlighted["Stephen Wolfram"], 
           "                                        Writings                  \
         "}]|>, <|
       "String" -> "Wolfram", "Type" -> "GovernmentAgency", 
        "Position" -> {15, 21}, "Probability" -> 0.8372672200202942, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"\[Congruent]     Stephen ", 
           Highlighted["Wolfram"], 
           "                                        Writings                  \
         "}]|>, <|
       "String" -> "Wolfram", "Type" -> "Surname", "Position" -> {15, 21}, 
        "Probability" -> 0.9053299427032471, "Interpretation" -> 
        Entity["Surname", "Wolfram"], "HighlightedSnippet" -> 
        Row[{"\[Congruent]     Stephen ", 
           Highlighted["Wolfram"], 
           "                                        Writings                  \
         "}]|>, <|
       "String" -> "ABOUT WRITINGS", "Type" -> "GovernmentAgency", 
        "Position" -> {100, 113}, "Probability" -> 0.8440150022506714, 
        "Interpretation" -> "ABOUT WRITINGS", "HighlightedSnippet" -> Row[{
           Highlighted["ABOUT WRITINGS"], 
           " PUBLICATIONS MEDIA SCRAPBOOK CONTACT    "}]|>, <|
       "String" -> "Artificial Intelligence Big Picture Companies", "Type" -> 
        "TopologicalSpaceType", "Position" -> {203, 247}, "Probability" -> 
        0.8957156300544739, "Interpretation" -> 
        "Artificial Intelligence Big Picture Companies", "HighlightedSnippet" -> 
        Row[{
           Highlighted["Artificial Intelligence Big Picture Companies"], 
           " & Business Computational Science Computational Thinking Data \
Science Education Future Perspectives"}]|>, <|
       "String" -> 
        "Business Computational Science Computational Thinking Data Science \
Education Future Perspectives Historical Perspectives Language", "Type" -> 
        "TopologicalSpaceType", "Position" -> {251, 379}, "Probability" -> 
        0.782343327999115, "Interpretation" -> 
        "Business Computational Science Computational Thinking Data Science \
Education Future Perspectives Historical Perspectives Language", 
        "HighlightedSnippet" -> 
        Row[{"Artificial Intelligence Big Picture Companies & ", 
           Highlighted[
           "Business Computational Science Computational Thinking Data \
Science Education Future Perspectives Historical Perspectives Language"], 
           " & Communication Life & Times Life Science"}]|>, <|
       "String" -> "Analytics", "Type" -> "GovernmentAgency", 
        "Position" -> {491, 499}, "Probability" -> 0.7855651378631592, 
        "Interpretation" -> "Analytics", "HighlightedSnippet" -> 
        Row[{"New Kind of Science New Technology Personal ", 
           Highlighted["Analytics"], 
           " Philosophy Physics Ruliology Software Design"}]|>, <|
       "String" -> "November 14, 2017", "Type" -> "Date", 
        "Position" -> {974, 990}, "Probability" -> 0.9645039588212967, 
        "Interpretation" -> DateObject[{2017, 11, 14}, "Day"], 
        "HighlightedSnippet" -> Row[{"What Is a Computational Essay?   ", 
           Highlighted["November 14, 2017"], "  "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {987, 990}, 
        "Probability" -> 0.9927171468734741, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> 
        Row[{"What Is a Computational Essay?   November 14, ", 
           Highlighted["2017"], "  "}]|>, <|
       "String" -> "2017  \n  A", "Type" -> "Quantity", 
        "Position" -> {987, 996}, "Probability" -> 0.8, "Interpretation" -> 
        Quantity[2017, "Amperes"], "HighlightedSnippet" -> 
        Row[{"What Is a Computational Essay?   November 14, ", 
           Highlighted["2017  \n  A"], 
           " Powerful Way to Express Ideas  "}]|>, <|
       "String" -> "Educators", "Type" -> "Occupation", 
        "Position" -> {1595, 1603}, "Probability" -> 0.644619882106781, 
        "Interpretation" -> "Educators", "HighlightedSnippet" -> Row[{
           Highlighted["Educators"], 
           " will routinely explain concepts using"}]|>, <|
       "String" -> "Educators", "Type" -> "Organization", 
        "Position" -> {1595, 1603}, "Probability" -> 0.5183599591255188, 
        "Interpretation" -> "Educators", "HighlightedSnippet" -> Row[{
           Highlighted["Educators"], 
           " will routinely explain concepts using"}]|>, <|
       "String" -> "Students", "Type" -> "Occupation", 
        "Position" -> {1665, 1672}, "Probability" -> 0.6364219784736633, 
        "Interpretation" -> "Students", "HighlightedSnippet" -> Row[{
           Highlighted["Students"], 
           " will routinely produce computational essays as"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {1891, 1897}, "Probability" -> 0.9457842707633972, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"First, ordinary text (here in ", 
           Highlighted["English"], 
           "). Second, computer input. And third, computer"}]|>, <|
       "String" -> "third", "Type" -> "OrdinalNumber", 
        "Position" -> {1929, 1933}, "Probability" -> 0.9795377850532532, 
        "Interpretation" -> 3, "HighlightedSnippet" -> 
        Row[{"Second, computer input. And ", 
           Highlighted["third"], 
           ", computer output. And the crucial point is that"}]|>, <|
       "String" -> "author", "Type" -> "Occupation", 
        "Position" -> {2353, 2358}, "Probability" -> 0.8744930624961853, 
        "Interpretation" -> "author", "HighlightedSnippet" -> 
        Row[{"computational thinking on the part of the human ", 
           Highlighted["author"], 
           " with computational knowledge and computational"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {2478, 2484}, "Probability" -> 0.8390234112739563, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"But what really makes this work is the ", 
           Highlighted["Wolfram"], 
           " Language \[LongDash]and the succinct representation of \
high-level"}]|>, <|
       "String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {2740, 2755}, "Probability" -> 0.8389559090137482, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"In a typical computational essay, each piece of ", 
           Highlighted["Wolfram Language"], 
           " input will usually be quite short (often not more"}]|>, <|
       "String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {3047, 3062}, "Probability" -> 0.8427011072635651, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"It\[CloseCurlyQuote]s essential to all this that the ", 
           Highlighted["Wolfram Language"], 
           " has so much built-in knowledge\[LongDash]both about the world \
and about"}]|>, <|
       "String" -> "Language", "Type" -> "GovernmentAgency", 
        "Position" -> {3055, 3062}, "Probability" -> 0.7905543446540833, 
        "Interpretation" -> "Language", "HighlightedSnippet" -> 
        Row[{"It\[CloseCurlyQuote]s essential to all this that the Wolfram ", 
           Highlighted["Language"], 
           " has so much built-in knowledge\[LongDash]both about the \
world"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {3586, 3592}, "Probability" -> 0.974741518497467, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"about the structure of a human language, like ", 
           Highlighted["English"], 
           ". English is basically made up of words. \
Let\[CloseCurlyQuote]s"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {3595, 3601}, "Probability" -> 0.9701015949249268, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["English"], 
           " is basically made up of words. Let\[CloseCurlyQuote]s get a \
list"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {3709, 3715}, "Probability" -> 0.9580725431442261, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{" Generate a list of common words in ", 
           Highlighted["English"], ":   "}]|>, <|
       "String" -> "How", "Type" -> "Language", "Position" -> {3753, 3755}, 
        "Probability" -> 0.6174337267875671, "Interpretation" -> 
        Entity["Language", "Honi::b5tqy"], "HighlightedSnippet" -> Row[{
           Highlighted["How"], 
           " long is a typical word? Well, we can take the list of common \
words, and make a histogram that"}]|>, <|
       "String" -> "French", "Type" -> "Language", "Position" -> {4002, 4007},
         "Probability" -> 0.940568208694458, "Interpretation" -> 
        Entity["Language", "French::367gk"], "HighlightedSnippet" -> 
        Row[{" Do the same for ", 
           Highlighted["French"], ":   "}]|>, <|
       "String" -> "French", "Type" -> "Language", "Position" -> {4073, 4078},
         "Probability" -> 0.9550185799598694, "Interpretation" -> 
        Entity["Language", "French::367gk"], "HighlightedSnippet" -> 
        Row[{"  \:2715   Histogram[StringLength[WordList[Language -> \"", 
           Highlighted["French"], "\"]]]      "}]|>, <|
       "String" -> "French", "Type" -> "Language", "Position" -> {4140, 4145},
         "Probability" -> 0.9506371021270752, "Interpretation" -> 
        Entity["Language", "French::367gk"], "HighlightedSnippet" -> 
        Row[{"that the word lengths tend to be longer in ", 
           Highlighted["French"], 
           ". We could investigate whether this is why"}]|>, <|
       "String" -> "French", "Type" -> "Language", "Position" -> {4220, 4225},
         "Probability" -> 0.9475831985473633, "Interpretation" -> 
        Entity["Language", "French::367gk"], "HighlightedSnippet" -> 
        Row[{"this is why documents tend to be longer in ", 
           Highlighted["French"], 
           " than in English, or how this relates to"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {4235, 4241}, "Probability" -> 0.9619299173355103, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"documents tend to be longer in French than in ", 
           Highlighted["English"], 
           ", or how this relates to quantities like entropy"}]|>, <|
       "String" -> "Russian", "Type" -> "GovernmentAgency", 
        "Position" -> {4422, 4428}, "Probability" -> 0.9048374891281128, 
        "Interpretation" -> "Russian", "HighlightedSnippet" -> 
        Row[{"the reader can rerun the computations in it themselves, say by \
trying ", 
           Highlighted["Russian"], " instead of French.)  "}]|>, <|
       "String" -> "Russian", "Type" -> "Language", 
        "Position" -> {4422, 4428}, "Probability" -> 0.8928566575050354, 
        "Interpretation" -> Entity["Language", "Russian::36x4m"], 
        "HighlightedSnippet" -> 
        Row[{"the reader can rerun the computations in it themselves, say by \
trying ", 
           Highlighted["Russian"], " instead of French.)  "}]|>, <|
       "String" -> "French", "Type" -> "Language", "Position" -> {4441, 4446},
         "Probability" -> 0.9450555443763733, "Interpretation" -> 
        Entity["Language", "French::367gk"], "HighlightedSnippet" -> 
        Row[{"the reader can rerun the computations in it themselves, say by \
trying Russian instead of ", 
           Highlighted["French"], ".)  "}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {4717, 4721}, "Probability" -> 0.7938555479049683, 
        "Interpretation" -> 1, "HighlightedSnippet" -> Row[{" Find the ", 
           Highlighted["first"], " translation in each case:   "}]|>, <|
       "String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {5515, 5530}, "Probability" -> 0.9038858115673065, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"Even just by looking at the names of the ", 
           Highlighted["Wolfram Language"], 
           " functions in it, one can get a pretty good idea"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {5647, 5653}, "Probability" -> 0.9576354622840881, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"And while the function names are based on ", 
           Highlighted["English"], 
           ", one can use \[OpenCurlyDoubleQuote] code captions \
\[CloseCurlyDoubleQuote] to understand it"}]|>, <|
       "String" -> "one can", "Type" -> "Quantity", 
        "Position" -> {5656, 5662}, "Probability" -> 0.9, "Interpretation" -> 
        Quantity[1, "Cans"], "HighlightedSnippet" -> 
        Row[{"while the function names are based on English, ", 
           Highlighted["one can"], 
           " use \[OpenCurlyDoubleQuote] code captions \
\[CloseCurlyDoubleQuote] to understand it in"}]|>, <|
       "String" -> "Japanese", "Type" -> "Country", 
        "Position" -> {5728, 5735}, "Probability" -> 0.7828185558319092, 
        "Interpretation" -> Entity["Country", "Japan"], "HighlightedSnippet" -> 
        Row[{"are based on English, one can use \[OpenCurlyDoubleQuote] code \
captions \[CloseCurlyDoubleQuote] to understand it in another language, say ", 
           Highlighted["Japanese"], ":  "}]|>, <|
       "String" -> "Japanese", "Type" -> "GovernmentAgency", 
        "Position" -> {5728, 5735}, "Probability" -> 0.9344255328178406, 
        "Interpretation" -> "Japanese", "HighlightedSnippet" -> 
        Row[{"are based on English, one can use \[OpenCurlyDoubleQuote] code \
captions \[CloseCurlyDoubleQuote] to understand it in another language, say ", 
           Highlighted["Japanese"], ":  "}]|>, <|
       "String" -> "Japanese", "Type" -> "Language", 
        "Position" -> {5728, 5735}, "Probability" -> 0.9326795935630798, 
        "Interpretation" -> Entity["Language", "Japanese::y9r37"], 
        "HighlightedSnippet" -> 
        Row[{"are based on English, one can use \[OpenCurlyDoubleQuote] code \
captions \[CloseCurlyDoubleQuote] to understand it in another language, say ", 
           Highlighted["Japanese"], ":  "}]|>, <|
       "String" -> "Japanese", "Type" -> "Nationality", 
        "Position" -> {5728, 5735}, "Probability" -> 0.9305486083030701, 
        "Interpretation" -> "Japanese", "HighlightedSnippet" -> 
        Row[{"are based on English, one can use \[OpenCurlyDoubleQuote] code \
captions \[CloseCurlyDoubleQuote] to understand it in another language, say ", 
           Highlighted["Japanese"], ":  "}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {5934, 5940}, "Probability" -> 0.9611143469810486, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"What is it? If it was just a word or phrase in ", 
           Highlighted["English"], 
           ", we might be able to look in a dictionary, but"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {6047, 6053}, "Probability" -> 0.7155066728591919, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"But a function in the ", 
           Highlighted["Wolfram"], 
           " Language is always precisely defined. And to"}]|>, <|
       "String" -> "author", "Type" -> "Occupation", 
        "Position" -> {6445, 6450}, "Probability" -> 0.6081731915473938, 
        "Interpretation" -> "author", "HighlightedSnippet" -> 
        Row[{"then in the end you really just have to ask the ", 
           Highlighted["author"], 
           " to find out what they meant. In a computational"}]|>, <|
       "String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {6523, 6538}, "Probability" -> 0.8426514863967896, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"In a computational essay, though, there\[CloseCurlyQuote]s ", 
           Highlighted["Wolfram Language"], 
           " input that precisely and unambiguously specifies"}]|>, <|
       "String" -> "author", "Type" -> "Occupation", 
        "Position" -> {6780, 6785}, "Probability" -> 0.7721463441848755, 
        "Interpretation" -> "author", "HighlightedSnippet" -> 
        Row[{
          "automatically and without recourse to anything like a discussion \
with the ", 
           Highlighted["author"], ".     Practicalities  "}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {6981, 6985}, "Probability" -> 0.9806164503097534, 
        "Interpretation" -> 1, "HighlightedSnippet" -> 
        Row[{"concept of notebooks that we introduced with the ", 
           Highlighted["first"], 
           " version of Mathematica all the way back in 1988."}]|>, <|
       "String" -> "Mathematica", "Type" -> "Book", 
        "Position" -> {6998, 7008}, "Probability" -> 0.7112306356430054, 
        "Interpretation" -> Entity["Book", "Mathematica1988"], 
        "HighlightedSnippet" -> 
        Row[{"that we introduced with the first version of ", 
           Highlighted["Mathematica"], 
           " all the way back in 1988. A notebook is a"}]|>, <|
       "String" -> "Mathematica", "Type" -> "ProgrammingLanguage", 
        "Position" -> {6998, 7008}, "Probability" -> 0.7356133460998535, 
        "Interpretation" -> Entity["ProgrammingLanguage", "WolframLanguage"], 
        "HighlightedSnippet" -> 
        Row[{"that we introduced with the first version of ", 
           Highlighted["Mathematica"], 
           " all the way back in 1988. A notebook is a"}]|>, <|
       "String" -> "1988", "Type" -> "Date", "Position" -> {7030, 7033}, 
        "Probability" -> 0.8971289396286011, "Interpretation" -> 
        DateObject[{1988}, "Year"], "HighlightedSnippet" -> 
        Row[{"first version of Mathematica all the way back in ", 
           Highlighted["1988"], 
           ". A notebook is a structured document that mixes"}]|>, <|
       "String" -> "1988", "Type" -> "Year", "Position" -> {7030, 7033}, 
        "Probability" -> 0.954512357711792, "Interpretation" -> "1988", 
        "HighlightedSnippet" -> 
        Row[{"first version of Mathematica all the way back in ", 
           Highlighted["1988"], 
           ". A notebook is a structured document that mixes"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Company", "Position" -> {7120, 7126},
         "Probability" -> 0.7610418200492859, "Interpretation" -> 
        Entity["Company", "WolframResearch::ygv45"], "HighlightedSnippet" -> 
        Row[{"that mixes cells of text together with cells of ", 
           Highlighted["Wolfram"], 
           " Language input and output, including graphics,"}]|>, <|
       "String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {7120, 7135}, "Probability" -> 0.8889391720294952, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"that mixes cells of text together with cells of ", 
           Highlighted["Wolfram Language"], 
           " input and output, including graphics, images,"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Company", "Position" -> {7294, 7300},
         "Probability" -> 0.9228228330612183, "Interpretation" -> 
        Entity["Company", "WolframResearch::ygv45"], "HighlightedSnippet" -> 
        Row[{") thing is that full ", 
           Highlighted["Wolfram"], 
           " Notebooks run seamlessly across desktop, cloud"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Company", "Position" -> {7401, 7407},
         "Probability" -> 0.9540975689888, "Interpretation" -> 
        Entity["Company", "WolframResearch::ygv45"], "HighlightedSnippet" -> 
        Row[{"You can author a notebook in the native ", 
           Highlighted["Wolfram"], 
           " Desktop application (Mac, Windows, Linux)\[LongDash]or on"}]|>, <|
       "String" -> "Wolfram", "Type" -> "FoodManufacturer", 
        "Position" -> {7401, 7407}, "Probability" -> 0.7815303802490234, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"You can author a notebook in the native ", 
           Highlighted["Wolfram"], 
           " Desktop application (Mac, Windows, Linux)\[LongDash]or on"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Company", "Position" -> {7515, 7521},
         "Probability" -> 0.6567853093147278, "Interpretation" -> 
        Entity["Company", "WolframResearch::ygv45"], "HighlightedSnippet" -> 
        Row[{"any web browser, or on mobile through the ", 
           Highlighted["Wolfram"], 
           " Cloud app . Then you can share or publish it"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Person", "Position" -> {7580, 7586}, 
        "Probability" -> 0.8359034657478333, "Interpretation" -> 
        Entity["Person", "StephenWolfram::j276d"], "HighlightedSnippet" -> 
        Row[{"Then you can share or publish it through the ", 
           Highlighted["Wolfram"], 
           " Cloud , and get access to it on the web or on"}]|>, <|
       "String" -> "New", "Type" -> "Organization", 
        "Position" -> {8098, 8100}, "Probability" -> 0.6739950776100159, 
        "Interpretation" -> "New", "HighlightedSnippet" -> Row[{"A ", 
           Highlighted["New"], " Form of Student Work  "}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {8160, 8167}, "Probability" -> 0.5307407975196838, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"Computational essays are great for ", 
           Highlighted["students"], 
           " to read, but they\[CloseCurlyQuote]re also great for students to \
write. Most of"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {8205, 8212}, "Probability" -> 0.6796220541000366, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"for students to read, but they\[CloseCurlyQuote]re also great \
for ", 
           Highlighted["students"], 
           " to write. Most of the current modalities for"}]|>, <|
       "String" -> "student", "Type" -> "Occupation", 
        "Position" -> {8259, 8265}, "Probability" -> 0.854338526725769, 
        "Interpretation" -> "student", "HighlightedSnippet" -> 
        Row[{"Most of the current modalities for ", 
           Highlighted["student"], 
           " work are remarkably old. Write an essay. Give a"}]|>, <|
       "String" -> "human author", "Type" -> "Occupation", 
        "Position" -> {8605, 8616}, "Probability" -> 0.7396072149276733, 
        "Interpretation" -> "human author", "HighlightedSnippet" -> 
        Row[{"story told through a collaboration between a ", 
           Highlighted["human author"], 
           " and a computer. The computer acts like a kind of"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {8924, 8931}, "Probability" -> 0.6023852229118347, 
        "Interpretation" -> "students", "HighlightedSnippet" -> Row[{"When ", 
           Highlighted["students"], 
           " write ordinary essays, they\[CloseCurlyQuote]re typically \
writing about content that in some sense \[OpenCurlyDoubleQuote]already"}]|>, \
<|"String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {9138, 9153}, "Probability" -> 0.8039763867855072, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"But in doing computation (at least with the ", 
           Highlighted["Wolfram Language"], 
           ") it\[CloseCurlyQuote]s so easy to discover new things that"}]|>, \
<|"String" -> "Language", "Type" -> "GovernmentAgency", 
        "Position" -> {9146, 9153}, "Probability" -> 0.7758596539497375, 
        "Interpretation" -> "Language", "HighlightedSnippet" -> 
        Row[{"in doing computation (at least with the Wolfram ", 
           Highlighted["Language"], 
           ") it\[CloseCurlyQuote]s so easy to discover new things that"}]|>, \
<|"String" -> "Students", "Type" -> "Occupation", "Position" -> {9318, 9325}, 
        "Probability" -> 0.5067970156669617, "Interpretation" -> "Students", 
        "HighlightedSnippet" -> Row[{
           Highlighted["Students"], 
           " will be exploring and discovering as well as"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {9875, 9882}, "Probability" -> 0.7843714356422424, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"What should the actual procedure be for ", 
           Highlighted["students"], 
           " producing computational essays? At this year\[CloseCurlyQuote]s \
Wolfram"}]|>, <|
       "String" -> "Wolfram", "Type" -> "GivenName", 
        "Position" -> {9931, 9937}, "Probability" -> 0.6563215255737305, 
        "Interpretation" -> 
        Entity["GivenName", {"Wolfram", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{"At this year\[CloseCurlyQuote]s ", 
           Highlighted["Wolfram"], 
           " Summer School we did the experiment of asking"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Person", "Position" -> {9931, 9937}, 
        "Probability" -> 0.6774930953979492, "Interpretation" -> 
        Entity["Person", "StephenWolfram::j276d"], "HighlightedSnippet" -> 
        Row[{"At this year\[CloseCurlyQuote]s ", 
           Highlighted["Wolfram"], 
           " Summer School we did the experiment of asking"}]|>, <|
       "String" -> "Summer", "Type" -> "Surname", "Position" -> {9939, 9944}, 
        "Probability" -> 0.5233402252197266, "Interpretation" -> 
        Entity["Surname", "Summer"], "HighlightedSnippet" -> 
        Row[{"At this year\[CloseCurlyQuote]s Wolfram ", 
           Highlighted["Summer"], 
           " School we did the experiment of asking all our"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {10289, 10295}, "Probability" -> 0.9499961733818054, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"something like \[OpenCurlyDoubleQuote]What is the typical \
length of a word in ", 
           Highlighted["English"], 
           "\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]Explore word \
lengths in English\[CloseCurlyDoubleQuote].  "}]|>, <|
       "String" -> "English", "Type" -> "Nationality", 
        "Position" -> {10289, 10295}, "Probability" -> 0.7856613993644714, 
        "Interpretation" -> "English", "HighlightedSnippet" -> 
        Row[{"something like \[OpenCurlyDoubleQuote]What is the typical \
length of a word in ", 
           Highlighted["English"], 
           "\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]Explore word \
lengths in English\[CloseCurlyDoubleQuote].  "}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {10326, 10332}, "Probability" -> 0.9466589093208313, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"something like \[OpenCurlyDoubleQuote]What is the typical \
length of a word in English\[CloseCurlyDoubleQuote] or \
\[OpenCurlyDoubleQuote]Explore word lengths in ", 
           Highlighted["English"], "\[CloseCurlyDoubleQuote].  "}]|>, <|
       "String" -> "student", "Type" -> "Occupation", 
        "Position" -> {10499, 10505}, "Probability" -> 0.6361913681030273, 
        "Interpretation" -> "student", "HighlightedSnippet" -> 
        Row[{"Create or discover something, with each ", 
           Highlighted["student"], 
           " following along by doing their own computations."}]|>, <|
       "String" -> "student", "Type" -> "Occupation", 
        "Position" -> {10586, 10592}, "Probability" -> 0.5128277540206909, 
        "Interpretation" -> "student", "HighlightedSnippet" -> 
        Row[{"At the end of the class, each ", 
           Highlighted["student"], 
           " will have a notebook they made. Then have their"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {10846, 10853}, "Probability" -> 0.6449257135391235, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"really tests and cements the understanding ", 
           Highlighted["students"], 
           " have. But there\[CloseCurlyQuote]s also something else: \
when"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {10899, 10906}, "Probability" -> 0.7765040993690491, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"But there\[CloseCurlyQuote]s also something else: when ", 
           Highlighted["students"], 
           " have created a computational essay, they have"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {11082, 11089}, "Probability" -> 0.7672610878944397, 
        "Interpretation" -> "students", "HighlightedSnippet" -> Row[{"When ", 
           Highlighted["students"], 
           " write them, they\[CloseCurlyQuote]re in effect creating a \
custom"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {11285, 11292}, "Probability" -> 0.7196382284164429, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"It\[CloseCurlyQuote]s far too common for ", 
           Highlighted["students"], 
           " to write notes in a class, then never refer to"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {12538, 12545}, "Probability" -> 0.8072422742843628, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"structure for the narrative\[LongDash]making it easier for ", 
           Highlighted["students"], 
           " (and others) to write essays that are easy to"}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {12715, 12731}, "Probability" -> 0.9488929112752279, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"you\[CloseCurlyQuote]re studying history\[LongDash]say the \
history of the ", 
           Highlighted["English Civil War"], 
           ". Well, conveniently, the Wolfram Language has a"}]|>, <|
       "String" -> "Civil War", "Type" -> "HistoricalEvent", 
        "Position" -> {12723, 12731}, "Probability" -> 0.86493980884552, 
        "Interpretation" -> 
        Entity["HistoricalEvent", "AmericanCivilWarBegins"], 
        "HighlightedSnippet" -> 
        Row[{"studying history\[LongDash]say the history of the English ", 
           Highlighted["Civil War"], 
           ". Well, conveniently, the Wolfram Language has a"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {12758, 12764}, "Probability" -> 0.9111417531967163, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"Well, conveniently, the ", 
           Highlighted["Wolfram"], 
           " Language has a lot of knowledge about history"}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {12877, 12893}, "Probability" -> 0.9510570963223776, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"So you can present the ", 
           Highlighted["English Civil War"], 
           " through a kind of dialog with it. For example,"}]|>, <|
       "String" -> "NamespaceBox", "Type" -> "GovernmentAgency", 
        "Position" -> {13023, 13034}, "Probability" -> 0.5326036214828491, 
        "Interpretation" -> "NamespaceBox", "HighlightedSnippet" -> 
        Row[{"  \:2715   GeoListPlot[\\!\\(\\* ", 
           Highlighted["NamespaceBox"], 
           "[\"LinguisticAssistant\", DynamicModuleBox[{Typeset`query$$ = \
\"English Civil"}]|>, <|
       "String" -> "LinguisticAssistant", "Type" -> "GovernmentAgency", 
        "Position" -> {13037, 13055}, "Probability" -> 0.8320513963699341, 
        "Interpretation" -> "LinguisticAssistant", "HighlightedSnippet" -> 
        Row[{"  \:2715   GeoListPlot[\\!\\(\\* NamespaceBox[\"", 
           Highlighted["LinguisticAssistant"], 
           "\", DynamicModuleBox[{Typeset`query$$ = \"English Civil \
War\","}]|>, <|
       "String" -> "English Civil War", "Type" -> "HistoricalEvent", 
        "Position" -> {13096, 13112}, "Probability" -> 0.8932745655377706, 
        "Interpretation" -> 
        Entity["HistoricalEvent", "EnglishCivilWarBegins"], 
        "HighlightedSnippet" -> Row[{"DynamicModuleBox[{Typeset`query$$ = \"", 
           Highlighted["English Civil War"], 
           "\", Typeset`boxes$$ = TemplateBox[{\"\\\"English"}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {13096, 13112}, "Probability" -> 0.861361583073934, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"DynamicModuleBox[{Typeset`query$$ = \"", 
           Highlighted["English Civil War"], 
           "\", Typeset`boxes$$ = TemplateBox[{\"\\\"English"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {13150, 13156}, "Probability" -> 0.5249175429344177, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"Civil War\", Typeset`boxes$$ = TemplateBox[{\"\\\"", 
           Highlighted["English"], 
           " Civil War\\\"\", RowBox[{\"Entity\", \"[\","}]|>, <|
       "String" -> "English Civil War", "Type" -> "HistoricalEvent", 
        "Position" -> {13150, 13166}, "Probability" -> 0.7320660750071207, 
        "Interpretation" -> 
        Entity["HistoricalEvent", "EnglishCivilWarBegins"], 
        "HighlightedSnippet" -> 
        Row[{"Civil War\", Typeset`boxes$$ = TemplateBox[{\"\\\"", 
           Highlighted["English Civil War"], 
           "\\\"\", RowBox[{\"Entity\", \"[\","}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {13150, 13166}, "Probability" -> 0.8211378455162048, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"Civil War\", Typeset`boxes$$ = TemplateBox[{\"\\\"", 
           Highlighted["English Civil War"], 
           "\\\"\", RowBox[{\"Entity\", \"[\","}]|>, <|
       "String" -> "Civil", "Type" -> "TopologicalSpaceType", 
        "Position" -> {13158, 13162}, "Probability" -> 0.7603365778923035, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"War\", Typeset`boxes$$ = TemplateBox[{\"\\\"English ", 
           Highlighted["Civil"], 
           " War\\\"\", RowBox[{\"Entity\", \"[\","}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {13428, 13444}, "Probability" -> 0.8377311627070109, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"= {{ \"type\" -> \"Clash\", \"word\" -> \"", 
           Highlighted["English Civil War"], 
           "\", \"template\" -> \"Assuming \\\"${word}\\\" is"}]|>, <|
       "String" -> "$", "Type" -> "Unit", "Position" -> {13487, 13487}, 
        "Probability" -> 0.6001367568969727, "Interpretation" -> "$", 
        "HighlightedSnippet" -> 
        Row[{"War\", \"template\" -> \"Assuming \\\"${word}\\\" is ", 
           Highlighted["$"], 
           "{desc1}. Use as \\ ${desc2} instead\", \"count\" ->"}]|>, <|
       "String" -> "3\"", "Type" -> "Quantity", "Position" -> {13537, 13538}, 
        "Probability" -> 0.7776387333869934, "Interpretation" -> 
        Quantity[3, "Inches"], "HighlightedSnippet" -> 
        Row[{"Use as \\ ${desc2} instead\", \"count\" -> \"", 
           Highlighted["3\""], 
           ", \"Values\" -> {{ \"name\" -> \"MilitaryConflict\","}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {13642, 13646}, "Probability" -> 0.5134955644607544, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> Row[{"English+", 
           Highlighted["Civil"], 
           "+War-_*MilitaryConflict-\"}, { \"name\" -> \"Word\","}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {13648, 13650}, "Probability" -> 0.5339902639389038, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"English+Civil+", 
           Highlighted["War"], 
           "-_*MilitaryConflict-\"}, { \"name\" -> \"Word\","}]|>, <|
       "String" -> "name", "Type" -> "MusicWork", 
        "Position" -> {13678, 13681}, "Probability" -> 0.5377859473228455, 
        "Interpretation" -> Entity["MusicWork", "Name::2cp48"], 
        "HighlightedSnippet" -> 
        Row[{"English+Civil+War-_*MilitaryConflict-\"}, { \"", 
           Highlighted["name"], 
           "\" -> \"Word\", \"desc\" -> \"a word\", \"input\" ->"}]|>, <|
       "String" -> "Word", "Type" -> "MusicWork", 
        "Position" -> {13688, 13691}, "Probability" -> 0.8198733329772949, 
        "Interpretation" -> 
        Entity["MusicWorkRendition", "TheWordBettyeLaVette::trzq2"], 
        "HighlightedSnippet" -> Row[{"{ \"name\" -> \"", 
           Highlighted["Word"], 
           "\", \"desc\" -> \"a word\", \"input\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {13744, 13746}, "Probability" -> 0.5069370269775391, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"English+Civil+", 
           Highlighted["War"], 
           "-_*Word-\"}, { \"name\" -> \"HistoricalEvent\", \"desc\""}]|>, <|
       "String" -> "name", "Type" -> "MusicWork", 
        "Position" -> {13762, 13765}, "Probability" -> 0.6694441437721252, 
        "Interpretation" -> Entity["MusicWork", "Name::2cp48"], 
        "HighlightedSnippet" -> Row[{"English+Civil+War-_*Word-\"}, { \"", 
           Highlighted["name"], 
           "\" -> \"HistoricalEvent\", \"desc\" -> \"a historical"}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {13845, 13849}, "Probability" -> 0.7024469971656799, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> Row[{"English+", 
           Highlighted["Civil"], 
           "+War-_*HistoricalEvent-\"}}}, { \"type\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {13851, 13853}, "Probability" -> 0.6400353312492371, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"English+Civil+", 
           Highlighted["War"], 
           "-_*HistoricalEvent-\"}}}, { \"type\" ->"}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {13917, 13933}, "Probability" -> 0.7753987312316895, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"{ \"type\" -> \"SubCategory\", \"word\" -> \"", 
           Highlighted["English Civil War"], 
           "\", \"template\" -> \"Assuming ${desc1}. Use ${desc2}"}]|>, <|
       "String" -> "4", "Type" -> "Time", "Position" -> {14006, 14006}, 
        "Probability" -> 0.8325539827346802, "Interpretation" -> 
        TimeObject[{16}, "Hour"], "HighlightedSnippet" -> 
        Row[{"Use ${desc2} instead\", \"count\" -> \"", 
           Highlighted["4"], 
           "\", \"Values\" -> {{ \"name\" -> \"EnglishCivilWar\","}]|>, <|
       "String" -> "4\"", "Type" -> "Quantity", "Position" -> {14006, 14007}, 
        "Probability" -> 0.7937517762184143, "Interpretation" -> 
        Quantity[4, "Inches"], "HighlightedSnippet" -> 
        Row[{"Use ${desc2} instead\", \"count\" -> \"", 
           Highlighted["4\""], 
           ", \"Values\" -> {{ \"name\" -> \"EnglishCivilWar\","}]|>, <|
       "String" -> "name", "Type" -> "MusicWork", 
        "Position" -> {14026, 14029}, "Probability" -> 0.7571805119514465, 
        "Interpretation" -> Entity["MusicWork", "Name::2cp48"], 
        "HighlightedSnippet" -> 
        Row[{"instead\", \"count\" -> \"4\", \"Values\" -> {{ \"", 
           Highlighted["name"], 
           "\" -> \"EnglishCivilWar\", \"desc\" -> \"English Civil"}]|>, <|
       "String" -> "EnglishCivilWar", "Type" -> "MusicWork", 
        "Position" -> {14036, 14050}, "Probability" -> 0.7233392000198364, 
        "Interpretation" -> Entity["MusicWork", "EnglishCivilWar::z6283"], 
        "HighlightedSnippet" -> 
        Row[{"\"count\" -> \"4\", \"Values\" -> {{ \"name\" -> \"", 
           Highlighted["EnglishCivilWar"], 
           "\", \"desc\" -> \"English Civil War (1642 - 1651)\","}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {14065, 14081}, "Probability" -> 0.8642126123110453, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"-> {{ \"name\" -> \"EnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["English Civil War"], 
           " (1642 - 1651)\", \"input\" ->"}]|>, <|
       "String" -> "(", "Type" -> "NonperiodicTiling", 
        "Position" -> {14083, 14083}, "Probability" -> 0.6829936504364014, 
        "Interpretation" -> "(", "HighlightedSnippet" -> 
        Row[{"\"EnglishCivilWar\", \"desc\" -> \"English Civil War ", 
           Highlighted["("], "1642 - 1651)\", \"input\" ->"}]|>, <|
       "String" -> "1642", "Type" -> "Year", "Position" -> {14084, 14087}, 
        "Probability" -> 0.9148038029670715, "Interpretation" -> "1642", 
        "HighlightedSnippet" -> 
        Row[{"\"EnglishCivilWar\", \"desc\" -> \"English Civil War (", 
           Highlighted["1642"], " - 1651)\", \"input\" ->"}]|>, <|
       "String" -> "1651", "Type" -> "Year", "Position" -> {14091, 14094}, 
        "Probability" -> 0.9758687615394592, "Interpretation" -> "1651", 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"English Civil War (1642 - ", 
           Highlighted["1651"], ")\", \"input\" ->"}]|>, <|
       "String" -> ")", "Type" -> "NonperiodicTiling", 
        "Position" -> {14095, 14095}, "Probability" -> 0.5419581532478333, 
        "Interpretation" -> ")", "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"English Civil War (1642 - 1651", 
           Highlighted[")"], "\", \"input\" ->"}]|>, <|
       "String" -> "DPClash", "Type" -> "MusicAlbum", 
        "Position" -> {14112, 14118}, "Probability" -> 0.5706728100776672, 
        "Interpretation" -> Entity["MusicAlbum", "Splash::m96z2"], 
        "HighlightedSnippet" -> 
        Row[{"\"English Civil War (1642 - 1651)\", \"input\" -> \"*", 
           Highlighted["DPClash"], 
           ".MilitaryConflictE.English+Civil+War-_*\\"}]|>, <|
       "String" -> "MilitaryConflictE", "Type" -> "GovernmentAgency", 
        "Position" -> {14120, 14136}, "Probability" -> 0.7161340713500977, 
        "Interpretation" -> "MilitaryConflictE", "HighlightedSnippet" -> 
        Row[{"Civil War (1642 - 1651)\", \"input\" -> \"*DPClash.", 
           Highlighted["MilitaryConflictE"], 
           ".English+Civil+War-_*\\ EnglishCivilWar-\"}, {"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {14138, 14144}, "Probability" -> 0.6087491512298584, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"MilitaryConflictE.", 
           Highlighted["English"], 
           "+Civil+War-_*\\ EnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {14146, 14150}, "Probability" -> 0.7532601356506348, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+", 
           Highlighted["Civil"], 
           "+War-_*\\ EnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {14152, 14154}, "Probability" -> 0.8596451282501221, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+", 
           Highlighted["War"], 
           "-_*\\ EnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {14155, 14155}, "Probability" -> 0.7822888493537903, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War", 
           Highlighted["-"], "_*\\ EnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "EnglishCivilWar", "Type" -> "Organization", 
        "Position" -> {14160, 14174}, "Probability" -> 0.5108683705329895, 
        "Interpretation" -> "EnglishCivilWar", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War-_*\\ ", 
           Highlighted["EnglishCivilWar"], 
           "-\"}, { \"name\" -> \"FirstEnglishCivilWar\", \"desc\""}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {14227, 14243}, "Probability" -> 0.9305617213249207, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"{ \"name\" -> \"FirstEnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["English Civil War"], 
           " (1642 - 1646)\", \"input\" ->"}]|>, <|
       "String" -> "Civil", "Type" -> "TopologicalSpaceType", 
        "Position" -> {14235, 14239}, "Probability" -> 0.8969599604606628, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"-> \"FirstEnglishCivilWar\", \"desc\" -> \"English ", 
           Highlighted["Civil"], " War (1642 - 1646)\", \"input\" ->"}]|>, <|
       "String" -> "1642", "Type" -> "Year", "Position" -> {14246, 14249}, 
        "Probability" -> 0.9346426129341125, "Interpretation" -> "1642", 
        "HighlightedSnippet" -> Row[{"\"desc\" -> \"English Civil War (", 
           Highlighted["1642"], " - 1646)\", \"input\" ->"}]|>, <|
       "String" -> "1646", "Type" -> "Year", "Position" -> {14253, 14256}, 
        "Probability" -> 0.9489582777023315, "Interpretation" -> "1646", 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"English Civil War (1642 - ", 
           Highlighted["1646"], ")\", \"input\" ->"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {14300, 14306}, "Probability" -> 0.6110143065452576, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"MilitaryConflictE.", 
           Highlighted["English"], 
           "+Civil+War-_*\\ FirstEnglishCivilWar-\"}, { \"name\""}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {14308, 14312}, "Probability" -> 0.5773520469665527, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+", 
           Highlighted["Civil"], 
           "+War-_*\\ FirstEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {14314, 14316}, "Probability" -> 0.8429743647575378, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+", 
           Highlighted["War"], 
           "-_*\\ FirstEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "Second English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {14395, 14418}, "Probability" -> 0.9193729758262634, 
        "Interpretation" -> "Second English Civil War", "HighlightedSnippet" -> 
        Row[{"{ \"name\" -> \"SecondEnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["Second English Civil War"], "\", \"input\" ->"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {14461, 14467}, "Probability" -> 0.5291820168495178, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"MilitaryConflictE.", 
           Highlighted["English"], 
           "+Civil+War-_*\\ SecondEnglishCivilWar-\"}, { \"name\""}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {14469, 14473}, "Probability" -> 0.5876566171646118, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+", 
           Highlighted["Civil"], 
           "+War-_*\\ SecondEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {14475, 14477}, "Probability" -> 0.8257243633270264, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+", 
           Highlighted["War"], 
           "-_*\\ SecondEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {14478, 14478}, "Probability" -> 0.701696515083313, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War", 
           Highlighted["-"], 
           "_*\\ SecondEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "SecondEnglishCivilWar", "Type" -> "Organization", 
        "Position" -> {14483, 14503}, "Probability" -> 0.5903072953224182, 
        "Interpretation" -> "SecondEnglishCivilWar", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War-_*\\ ", 
           Highlighted["SecondEnglishCivilWar"], 
           "-\"}, { \"name\" -> \"ThirdEnglishCivilWar\", \"desc\""}]|>, <|
       "String" -> "Third English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {14556, 14578}, "Probability" -> 0.907014474272728, 
        "Interpretation" -> "Third English Civil War", "HighlightedSnippet" -> 
        Row[{"{ \"name\" -> \"ThirdEnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["Third English Civil War"], "\", \"input\" ->"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {14621, 14627}, "Probability" -> 0.7127417325973511, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"MilitaryConflictE.", 
           Highlighted["English"], 
           "+Civil+War-_*\\ ThirdEnglishCivilWar-\"}}}},"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {14638, 14638}, "Probability" -> 0.7418174147605896, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War", 
           Highlighted["-"], "_*\\ ThirdEnglishCivilWar-\"}}}},"}]|>, <|
       "String" -> "Typeset", "Type" -> "TopologicalSpaceType", 
        "Position" -> {14671, 14677}, "Probability" -> 0.5318819284439087, 
        "Interpretation" -> "Typeset", "HighlightedSnippet" -> 
        Row[{"ThirdEnglishCivilWar-\"}}}}, ", 
           Highlighted["Typeset"], 
           "`assumptions$$ = {}, Typeset`open$$ = {1, 2},"}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {15557, 15561}, "Probability" -> 0.9727317690849304, 
        "Interpretation" -> 1, "HighlightedSnippet" -> 
        Row[{"the beginning of the war (you don\[CloseCurlyQuote]t need to \
say \[OpenCurlyDoubleQuote]", 
           Highlighted["first"], 
           " 15 battles\[CloseCurlyDoubleQuote], because if one cares, one \
can just"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Organization", 
        "Position" -> {15630, 15636}, "Probability" -> 0.5754057168960571, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"say \[OpenCurlyDoubleQuote]first 15 battles\
\[CloseCurlyDoubleQuote], because if one cares, one can just read that from \
the ", 
           Highlighted["Wolfram"], " Language code):  "}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {15630, 15636}, "Probability" -> 0.6192313432693481, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"say \[OpenCurlyDoubleQuote]first 15 battles\
\[CloseCurlyDoubleQuote], because if one cares, one can just read that from \
the ", 
           Highlighted["Wolfram"], " Language code):  "}]|>, <|
       "String" -> "LinguisticAssistant", "Type" -> "GovernmentAgency", 
        "Position" -> {15710, 15728}, "Probability" -> 0.61274254322052, 
        "Interpretation" -> "LinguisticAssistant", "HighlightedSnippet" -> 
        Row[{"  \:2715   TimelinePlot[Take[\\!\\(\\* NamespaceBox[\"", 
           Highlighted["LinguisticAssistant"], 
           "\", DynamicModuleBox[{Typeset`query$$ = \"English Civil"}]|>, <|
       "String" -> "LinguisticAssistant", "Type" -> "Organization", 
        "Position" -> {15710, 15728}, "Probability" -> 0.6831780672073364, 
        "Interpretation" -> "LinguisticAssistant", "HighlightedSnippet" -> 
        Row[{"  \:2715   TimelinePlot[Take[\\!\\(\\* NamespaceBox[\"", 
           Highlighted["LinguisticAssistant"], 
           "\", DynamicModuleBox[{Typeset`query$$ = \"English Civil"}]|>, <|
       "String" -> "English Civil War", "Type" -> "HistoricalEvent", 
        "Position" -> {15769, 15785}, "Probability" -> 0.8538361589113871, 
        "Interpretation" -> 
        Entity["HistoricalEvent", "EnglishCivilWarBegins"], 
        "HighlightedSnippet" -> Row[{"DynamicModuleBox[{Typeset`query$$ = \"", 
           Highlighted["English Civil War"], 
           "\", Typeset`boxes$$ = TemplateBox[{\"\\\"English"}]|>, <|
       "String" -> "Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {15777, 15785}, "Probability" -> 0.9086467027664185, 
        "Interpretation" -> "Civil War", "HighlightedSnippet" -> 
        Row[{"DynamicModuleBox[{Typeset`query$$ = \"English ", 
           Highlighted["Civil War"], 
           "\", Typeset`boxes$$ = TemplateBox[{\"\\\"English"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {15823, 15829}, "Probability" -> 0.5064601302146912, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"Civil War\", Typeset`boxes$$ = TemplateBox[{\"\\\"", 
           Highlighted["English"], 
           " Civil War\\\"\", RowBox[{\"Entity\", \"[\","}]|>, <|
       "String" -> "English Civil War", "Type" -> "HistoricalEvent", 
        "Position" -> {15823, 15839}, "Probability" -> 0.7124961813290914, 
        "Interpretation" -> 
        Entity["HistoricalEvent", "EnglishCivilWarBegins"], 
        "HighlightedSnippet" -> 
        Row[{"Civil War\", Typeset`boxes$$ = TemplateBox[{\"\\\"", 
           Highlighted["English Civil War"], 
           "\\\"\", RowBox[{\"Entity\", \"[\","}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {15823, 15839}, "Probability" -> 0.7864134311676025, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"Civil War\", Typeset`boxes$$ = TemplateBox[{\"\\\"", 
           Highlighted["English Civil War"], 
           "\\\"\", RowBox[{\"Entity\", \"[\","}]|>, <|
       "String" -> "MilitaryConflict", "Type" -> "GovernmentAgency", 
        "Position" -> {15879, 15894}, "Probability" -> 0.7156490087509155, 
        "Interpretation" -> "MilitaryConflict", "HighlightedSnippet" -> 
        Row[{"Civil War\\\"\", RowBox[{\"Entity\", \"[\", RowBox[{\"\\\"", 
           Highlighted["MilitaryConflict"], 
           "\\\"\", \",\", \"\\\"EnglishCivilWar\\\"\"}], \"]\"}],"}]|>, <|
       "String" -> "MilitaryConflict", "Type" -> "GovernmentAgency", 
        "Position" -> {15951, 15966}, "Probability" -> 0.878186047077179, 
        "Interpretation" -> "MilitaryConflict", "HighlightedSnippet" -> 
        Row[{"\"\\\"EnglishCivilWar\\\"\"}], \"]\"}], \"\\\"Entity[\\\\\\\"", 
           Highlighted["MilitaryConflict"], 
           "\\\\\\\", \\\\\\\"EnglishCivilWar\\\\\\\"]\\ \\\"\", \
\"\\\"military"}]|>, <|
       "String" -> "EnglishCivilWar", "Type" -> "GovernmentAgency", 
        "Position" -> {15977, 15991}, "Probability" -> 0.5292936563491821, 
        "Interpretation" -> "EnglishCivilWar", "HighlightedSnippet" -> 
        Row[{"\"]\"}], \"\\\"Entity[\\\\\\\"MilitaryConflict\\\\\\\", \
\\\\\\\"", 
           Highlighted["EnglishCivilWar"], 
           "\\\\\\\"]\\ \\\"\", \"\\\"military conflict\\\"\"}, \
\"Entity\"],"}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {16101, 16117}, "Probability" -> 0.7879585226376852, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"= {{ \"type\" -> \"Clash\", \"word\" -> \"", 
           Highlighted["English Civil War"], 
           "\", \"template\" -> \"Assuming \\\"${word}\\\" is"}]|>, <|
       "String" -> "3\"", "Type" -> "Quantity", "Position" -> {16210, 16211}, 
        "Probability" -> 0.7605914771556854, "Interpretation" -> 
        Quantity[3, "Inches"], "HighlightedSnippet" -> 
        Row[{"Use as \\ ${desc2} instead\", \"count\" -> \"", 
           Highlighted["3\""], 
           ", \"Values\" -> {{ \"name\" -> \"MilitaryConflict\","}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {16305, 16305}, "Probability" -> 0.6914397478103638, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"a military conflict\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".English+Civil+War-_*MilitaryConflict-\"}, {"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {16307, 16313}, "Probability" -> 0.570442259311676, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"a military conflict\", \"input\" -> \"*C.", 
           Highlighted["English"], 
           "+Civil+War-_*MilitaryConflict-\"}, { \"name\" ->"}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {16315, 16319}, "Probability" -> 0.5017018914222717, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> Row[{"English+", 
           Highlighted["Civil"], 
           "+War-_*MilitaryConflict-\"}, { \"name\" -> \"Word\","}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {16321, 16323}, "Probability" -> 0.6390394568443298, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"English+Civil+", 
           Highlighted["War"], 
           "-_*MilitaryConflict-\"}, { \"name\" -> \"Word\","}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {16401, 16401}, "Probability" -> 0.7134113311767578, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"-> \"Word\", \"desc\" -> \"a word\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".English+Civil+War-_*Word-\"}, { \"name\" ->"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {16403, 16409}, "Probability" -> 0.60565185546875, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"-> \"Word\", \"desc\" -> \"a word\", \"input\" -> \"*C.", 
           Highlighted["English"], 
           "+Civil+War-_*Word-\"}, { \"name\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {16417, 16419}, "Probability" -> 0.6541236639022827, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"English+Civil+", 
           Highlighted["War"], 
           "-_*Word-\"}, { \"name\" -> \"HistoricalEvent\", \"desc\""}]|>, <|
       "String" -> "HistoricalEvent", "Type" -> "Organization", 
        "Position" -> {16445, 16459}, "Probability" -> 0.6517528295516968, 
        "Interpretation" -> "HistoricalEvent", "HighlightedSnippet" -> 
        Row[{"English+Civil+War-_*Word-\"}, { \"name\" -> \"", 
           Highlighted["HistoricalEvent"], 
           "\", \"desc\" -> \"a historical event\", \"input\" ->"}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {16508, 16508}, "Probability" -> 0.7625669240951538, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"a historical event\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".English+Civil+War-_*HistoricalEvent-\"}}}, {"}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {16518, 16522}, "Probability" -> 0.6957991719245911, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> Row[{"English+", 
           Highlighted["Civil"], 
           "+War-_*HistoricalEvent-\"}}}, { \"type\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {16524, 16526}, "Probability" -> 0.742928147315979, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"English+Civil+", 
           Highlighted["War"], 
           "-_*HistoricalEvent-\"}}}, { \"type\" ->"}]|>, <|
       "String" -> "HistoricalEvent", "Type" -> "Organization", 
        "Position" -> {16530, 16544}, "Probability" -> 0.730812132358551, 
        "Interpretation" -> "HistoricalEvent", "HighlightedSnippet" -> 
        Row[{"English+Civil+War-_*", 
           Highlighted["HistoricalEvent"], 
           "-\"}}}, { \"type\" -> \"SubCategory\", \"word\" ->"}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {16590, 16606}, "Probability" -> 0.8625723918279012, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"{ \"type\" -> \"SubCategory\", \"word\" -> \"", 
           Highlighted["English Civil War"], 
           "\", \"template\" -> \"Assuming ${desc1}. Use ${desc2}"}]|>, <|
       "String" -> "4\"", "Type" -> "Quantity", "Position" -> {16679, 16680}, 
        "Probability" -> 0.8104216158390045, "Interpretation" -> 
        Quantity[4, "Inches"], "HighlightedSnippet" -> 
        Row[{"Use ${desc2} instead\", \"count\" -> \"", 
           Highlighted["4\""], 
           ", \"Values\" -> {{ \"name\" -> \"EnglishCivilWar\","}]|>, <|
       "String" -> "EnglishCivilWar", "Type" -> "MusicWork", 
        "Position" -> {16709, 16723}, "Probability" -> 0.5316794514656067, 
        "Interpretation" -> Entity["MusicWork", "EnglishCivilWar::z6283"], 
        "HighlightedSnippet" -> 
        Row[{"\"count\" -> \"4\", \"Values\" -> {{ \"name\" -> \"", 
           Highlighted["EnglishCivilWar"], 
           "\", \"desc\" -> \"English Civil War (1642 - 1651)\","}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {16738, 16754}, "Probability" -> 0.8977327148119608, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"-> {{ \"name\" -> \"EnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["English Civil War"], 
           " (1642 - 1651)\", \"input\" ->"}]|>, <|
       "String" -> "Civil", "Type" -> "TopologicalSpaceType", 
        "Position" -> {16746, 16750}, "Probability" -> 0.8172886371612549, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"\"name\" -> \"EnglishCivilWar\", \"desc\" -> \"English ", 
           Highlighted["Civil"], " War (1642 - 1651)\", \"input\" ->"}]|>, <|
       "String" -> "(", "Type" -> "NonperiodicTiling", 
        "Position" -> {16756, 16756}, "Probability" -> 0.5639774799346924, 
        "Interpretation" -> "(", "HighlightedSnippet" -> 
        Row[{"\"EnglishCivilWar\", \"desc\" -> \"English Civil War ", 
           Highlighted["("], "1642 - 1651)\", \"input\" ->"}]|>, <|
       "String" -> "1642", "Type" -> "Year", "Position" -> {16757, 16760}, 
        "Probability" -> 0.883489191532135, "Interpretation" -> "1642", 
        "HighlightedSnippet" -> 
        Row[{"\"EnglishCivilWar\", \"desc\" -> \"English Civil War (", 
           Highlighted["1642"], " - 1651)\", \"input\" ->"}]|>, <|
       "String" -> "1651", "Type" -> "Year", "Position" -> {16764, 16767}, 
        "Probability" -> 0.9308017492294312, "Interpretation" -> "1651", 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"English Civil War (1642 - ", 
           Highlighted["1651"], ")\", \"input\" ->"}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {16819, 16823}, "Probability" -> 0.6852499842643738, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+", 
           Highlighted["Civil"], 
           "+War-_\\ *EnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {16825, 16827}, "Probability" -> 0.7957988381385803, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+", 
           Highlighted["War"], 
           "-_\\ *EnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {16828, 16828}, "Probability" -> 0.5899695754051208, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War", 
           Highlighted["-"], "_\\ *EnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "English", "Type" -> "GovernmentAgency", 
        "Position" -> {16900, 16906}, "Probability" -> 0.7763901948928833, 
        "Interpretation" -> "English", "HighlightedSnippet" -> 
        Row[{"{ \"name\" -> \"FirstEnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["English"], 
           " Civil War (1642 - 1646)\", \"input\" ->"}]|>, <|
       "String" -> "English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {16900, 16916}, "Probability" -> 0.9316615064938863, 
        "Interpretation" -> "English Civil War", "HighlightedSnippet" -> 
        Row[{"{ \"name\" -> \"FirstEnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["English Civil War"], 
           " (1642 - 1646)\", \"input\" ->"}]|>, <|
       "String" -> "Civil", "Type" -> "TopologicalSpaceType", 
        "Position" -> {16908, 16912}, "Probability" -> 0.8105892539024353, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"-> \"FirstEnglishCivilWar\", \"desc\" -> \"English ", 
           Highlighted["Civil"], " War (1642 - 1646)\", \"input\" ->"}]|>, <|
       "String" -> "1642", "Type" -> "Year", "Position" -> {16919, 16922}, 
        "Probability" -> 0.9377440214157104, "Interpretation" -> "1642", 
        "HighlightedSnippet" -> Row[{"\"desc\" -> \"English Civil War (", 
           Highlighted["1642"], " - 1646)\", \"input\" ->"}]|>, <|
       "String" -> "1646", "Type" -> "Year", "Position" -> {16926, 16929}, 
        "Probability" -> 0.9714418053627014, "Interpretation" -> "1646", 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"English Civil War (1642 - ", 
           Highlighted["1646"], ")\", \"input\" ->"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {16973, 16979}, "Probability" -> 0.5010398626327515, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"MilitaryConflictE.", 
           Highlighted["English"], 
           "+Civil+War-_\\ *FirstEnglishCivilWar-\"}, { \"name\""}]|>, <|
       "String" -> "Civil", "Type" -> "MilitaryConflict", 
        "Position" -> {16981, 16985}, "Probability" -> 0.6567218899726868, 
        "Interpretation" -> "Civil", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+", 
           Highlighted["Civil"], 
           "+War-_\\ *FirstEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {16987, 16989}, "Probability" -> 0.850074052810669, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+", 
           Highlighted["War"], 
           "-_\\ *FirstEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {16990, 16990}, "Probability" -> 0.7938446998596191, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War", 
           Highlighted["-"], 
           "_\\ *FirstEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "FirstEnglishCivilWar", "Type" -> "Organization", 
        "Position" -> {16995, 17014}, "Probability" -> 0.5801838636398315, 
        "Interpretation" -> "FirstEnglishCivilWar", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War-_\\ *", 
           Highlighted["FirstEnglishCivilWar"], 
           "-\"}, { \"name\" -> \"SecondEnglishCivilWar\", \"desc\""}]|>, <|
       "String" -> "Second English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {17068, 17091}, "Probability" -> 0.9221187829971313, 
        "Interpretation" -> "Second English Civil War", "HighlightedSnippet" -> 
        Row[{"{ \"name\" -> \"SecondEnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["Second English Civil War"], "\", \"input\" ->"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {17134, 17140}, "Probability" -> 0.6418694853782654, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"MilitaryConflictE.", 
           Highlighted["English"], 
           "+Civil+War-_\\ *SecondEnglishCivilWar-\"}, { \"name\""}]|>, <|
       "String" -> "War", "Type" -> "MilitaryConflict", 
        "Position" -> {17148, 17150}, "Probability" -> 0.6939501762390137, 
        "Interpretation" -> "War", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+", 
           Highlighted["War"], 
           "-_\\ *SecondEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {17151, 17151}, "Probability" -> 0.8002813458442688, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War", 
           Highlighted["-"], 
           "_\\ *SecondEnglishCivilWar-\"}, { \"name\" ->"}]|>, <|
       "String" -> "Third English Civil War", "Type" -> "MilitaryConflict", 
        "Position" -> {17229, 17251}, "Probability" -> 0.8134927898645401, 
        "Interpretation" -> "Third English Civil War", "HighlightedSnippet" -> 
        Row[{"{ \"name\" -> \"ThirdEnglishCivilWar\", \"desc\" -> \"", 
           Highlighted["Third English Civil War"], "\", \"input\" ->"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {17294, 17300}, "Probability" -> 0.6847937703132629, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"MilitaryConflictE.", 
           Highlighted["English"], 
           "+Civil+War-_\\ *ThirdEnglishCivilWar-\"}}}},"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {17311, 17311}, "Probability" -> 0.570343554019928, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"MilitaryConflictE.English+Civil+War", 
           Highlighted["-"], "_\\ *ThirdEnglishCivilWar-\"}}}},"}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {18247, 18251}, "Probability" -> 0.9685044288635254, 
        "Interpretation" -> 1, "HighlightedSnippet" -> Row[{"At ", 
           Highlighted["first"], 
           ", you can write a computational essay in which"}]|>, <|
       "String" -> "van Gogh", "Type" -> "Person", 
        "Position" -> {18742, 18749}, "Probability" -> 0.71224644780159, 
        "Interpretation" -> Entity["Person", "VincentVanGogh::9vq62"], 
        "HighlightedSnippet" -> 
        Row[{"Absolutely. Maybe about art history. Pick 10 random paintings \
by ", 
           Highlighted["van Gogh"], ":  "}]|>, <|
       "String" -> "gogh", "Type" -> "Person", "Position" -> {18882, 18885}, 
        "Probability" -> 0.6564990878105164, "Interpretation" -> 
        Entity["Person", "VincentVanGogh::9vq62"], "HighlightedSnippet" -> 
        Row[{"DynamicModuleBox[{Typeset`query$$ = \"van ", 
           Highlighted["gogh"], 
           "\", Typeset`boxes$$ = TemplateBox[{\"\\\"Vincent van"}]|>, <|
       "String" -> "Vincent", "Type" -> "GivenName", 
        "Position" -> {18923, 18929}, "Probability" -> 0.9109408259391785, 
        "Interpretation" -> 
        Entity["GivenName", {"Vincent", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> 
        Row[{"= \"van gogh\", Typeset`boxes$$ = TemplateBox[{\"\\\"", 
           Highlighted["Vincent"], 
           " van Gogh\\\"\", RowBox[{\"Entity\", \"[\","}]|>, <|
       "String" -> "Vincent van Gogh", "Type" -> "Person", 
        "Position" -> {18923, 18938}, "Probability" -> 0.8756272395451864, 
        "Interpretation" -> Entity["Person", "VincentVanGogh::9vq62"], 
        "HighlightedSnippet" -> 
        Row[{"= \"van gogh\", Typeset`boxes$$ = TemplateBox[{\"\\\"", 
           Highlighted["Vincent van Gogh"], 
           "\\\"\", RowBox[{\"Entity\", \"[\", \
RowBox[{\"\\\"Person\\\"\","}]|>, <|
       "String" -> "gogh", "Type" -> "Person", "Position" -> {19183, 19186}, 
        "Probability" -> 0.59128737449646, "Interpretation" -> 
        Entity["Person", "VincentVanGogh::9vq62"], "HighlightedSnippet" -> 
        Row[{"= {{ \"type\" -> \"Clash\", \"word\" -> \"van ", 
           Highlighted["gogh"], 
           "\", \"template\" -> \"Assuming \\\"${word}\\\" is"}]|>, <|
       "String" -> "$", "Type" -> "Unit", "Position" -> {19248, 19248}, 
        "Probability" -> 0.588018000125885, "Interpretation" -> "$", 
        "HighlightedSnippet" -> Row[{"Use as \\ ", 
           Highlighted["$"], 
           "{desc2} instead\", \"count\" -> \"4\", \"Values\" -> {{"}]|>, <|
       "String" -> "Person", "Type" -> "PhysicalConstant", 
        "Position" -> {19309, 19314}, "Probability" -> 0.642367959022522, 
        "Interpretation" -> "Person", "HighlightedSnippet" -> 
        Row[{"\"count\" -> \"4\", \"Values\" -> {{ \"name\" -> \"", 
           Highlighted["Person"], 
           "\", \"desc\" -> \"a person\", \"input\" ->"}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {19353, 19353}, "Probability" -> 0.6378522515296936, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"-> \"Person\", \"desc\" -> \"a person\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".van+gogh-_*Person-\"}, { \"name\" -> \"Movie\","}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {19432, 19432}, "Probability" -> 0.7277697920799255, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"-> \"Movie\", \"desc\" -> \"a movie\", \"input\" -> \"*", 
           Highlighted["C"], ".van+gogh-_*Movie-\"}, { \"name\" ->"}]|>, <|
       "String" -> "gogh", "Type" -> "Person", "Position" -> {19438, 19441}, 
        "Probability" -> 0.576263964176178, "Interpretation" -> 
        Entity["Person", "VincentVanGogh::9vq62"], "HighlightedSnippet" -> 
        Row[{"van+", 
           Highlighted["gogh"], 
           "-_*Movie-\"}, { \"name\" -> \"SolarSystemFeature\","}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {19538, 19538}, "Probability" -> 0.8383450508117676, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \"a solar system feature\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".van+gogh-_*SolarSystemFeature-\"}, { \"name\" ->"}]|>, <|
       "String" -> "Word", "Type" -> "MusicWork", 
        "Position" -> {19587, 19590}, "Probability" -> 0.6680135726928711, 
        "Interpretation" -> 
        Entity["MusicWorkRendition", "TheWordBettyeLaVette::trzq2"], 
        "HighlightedSnippet" -> 
        Row[{"van+gogh-_*SolarSystemFeature-\"}, { \"name\" -> \"", 
           Highlighted["Word"], 
           "\", \"desc\" -> \"a word\", \"input\" ->"}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {19627, 19627}, "Probability" -> 0.8570842742919922, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"-> \"Word\", \"desc\" -> \"a word\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".van+gogh-_*Word-\"}}}}, Typeset`assumptions$$ ="}]|>, <|
       "String" -> "True", "Type" -> "MusicAlbum", 
        "Position" -> {19742, 19745}, "Probability" -> 0.7104012966156006, 
        "Interpretation" -> Entity["MusicAlbum", "True::3k3k8"], 
        "HighlightedSnippet" -> 
        Row[{"= {1, 2}, Typeset`querystate$$ = { \"Online\" -> ", 
           Highlighted["True"], 
           ", \"Allowed\" -> True, \"mparse.jsp\" ->"}]|>, <|
       "String" -> "True", "Type" -> "MusicAlbum", 
        "Position" -> {19761, 19764}, "Probability" -> 0.6909734606742859, 
        "Interpretation" -> Entity["MusicAlbum", "True::3k3k8"], 
        "HighlightedSnippet" -> 
        Row[{"= { \"Online\" -> True, \"Allowed\" -> ", 
           Highlighted["True"], 
           ", \"mparse.jsp\" -> 0.472412`6.125865914333281,"}]|>, <|
       "String" -> "StandardForm", "Type" -> "Organization", 
        "Position" -> {20087, 20098}, "Probability" -> 0.5326761603355408, 
        "Interpretation" -> "StandardForm", "HighlightedSnippet" -> 
        Row[{"Dynamic[Typeset`querystate$$]], ", 
           Highlighted["StandardForm"], 
           "], ImageSizeCache->{227., {7., 17.}},"}]|>, <|
       "String" -> "BaseStyle", "Type" -> "Organization", 
        "Position" -> {20344, 20352}, "Probability" -> 0.8477403521537781, 
        "Interpretation" -> "BaseStyle", "HighlightedSnippet" -> 
        Row[{"UndoTrackedVariables:>{Typeset`open$$}], ", 
           Highlighted["BaseStyle"], 
           "->{\"Deploy\"}, DeleteWithContents->True,"}]|>, <|
       "String" -> "SelectWithContents", "Type" -> "Organization", 
        "Position" -> {20410, 20427}, "Probability" -> 0.6890856623649597, 
        "Interpretation" -> "SelectWithContents", "HighlightedSnippet" -> 
        Row[{"DeleteWithContents->True, Editable->False, ", 
           Highlighted["SelectWithContents"], 
           "->True]\\)[\"NotableArtworks\"], 10], \"Image\"]      "}]|>, <|
       "String" -> "NotableArtworks", "Type" -> "Organization", 
        "Position" -> {20439, 20453}, "Probability" -> 0.9660651087760925, 
        "Interpretation" -> "NotableArtworks", "HighlightedSnippet" -> 
        Row[{"DeleteWithContents->True, Editable->False, \
SelectWithContents->True]\\)[\"", 
           Highlighted["NotableArtworks"], "\"], 10], \"Image\"]      "}]|>, <|
       "String" -> "10", "Type" -> "Time", "Position" -> {20458, 20459}, 
        "Probability" -> 0.8701178431510925, "Interpretation" -> 
        TimeObject[{22}, "Hour"], "HighlightedSnippet" -> 
        Row[{"Editable->False, SelectWithContents->True]\\)[\"NotableArtworks\
\"], ", 
           Highlighted["10"], "], \"Image\"]      "}]|>, <|
       "String" -> "Image", "Type" -> "Organization", 
        "Position" -> {20464, 20468}, "Probability" -> 0.6783289313316345, 
        "Interpretation" -> "Image", "HighlightedSnippet" -> 
        Row[{"Editable->False, SelectWithContents->True]\\)[\"NotableArtworks\
\"], 10], \"", 
           Highlighted["Image"], "\"]      "}]|>, <|
       "String" -> "ChromaticityPlot", "Type" -> "Organization", 
        "Position" -> {20564, 20579}, "Probability" -> 0.6327155232429504, 
        "Interpretation" -> "ChromaticityPlot", "HighlightedSnippet" -> 
        Row[{"  \:2715   ", 
           Highlighted["ChromaticityPlot"], "[%]      "}]|>, <|
       "String" -> "4\"", "Type" -> "Quantity", "Position" -> {21225, 21226}, 
        "Probability" -> 0.6583475470542908, "Interpretation" -> 
        Quantity[4, "Inches"], "HighlightedSnippet" -> 
        Row[{"Use as \\ ${desc2} instead\", \"count\" -> \"", 
           Highlighted["4\""], 
           ", \"Values\" -> {{ \"name\" -> \"PlanetClass\", \"desc\""}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {21317, 21317}, "Probability" -> 0.9357352256774902, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"\"desc\" -> \" referring to planets\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".planets-_*PlanetClass-\"}, { \"name\" ->"}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {21426, 21426}, "Probability" -> 0.941752016544342, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"-> \" referring to exoplanets\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".planets-_*ExoplanetClass-\"}, { \"name\" ->"}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {21543, 21543}, "Probability" -> 0.9594850540161133, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"-> \" referring to minor planets\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".planets-_*MinorPlanetClass-\"}, { \"name\" ->"}]|>, <|
       "String" -> "C", "Type" -> "ProgrammingLanguage", 
        "Position" -> {21629, 21629}, "Probability" -> 0.9673727750778198, 
        "Interpretation" -> Entity["ProgrammingLanguage", "C::p5vhv"], 
        "HighlightedSnippet" -> 
        Row[{"-> \"Word\", \"desc\" -> \"a word\", \"input\" -> \"*", 
           Highlighted["C"], 
           ".planets-_*Word-\"}}}}, Typeset`assumptions$$ ="}]|>, <|
       "String" -> "AlphaIntegration", "Type" -> "GovernmentAgency", 
        "Position" -> {21852, 21867}, "Probability" -> 0.6336035132408142, 
        "Interpretation" -> "AlphaIntegration", "HighlightedSnippet" -> 
        Row[{"\"Messages\" -> {}}}, DynamicBox[ToBoxes[ ", 
           Highlighted["AlphaIntegration"], 
           "`LinguisticAssistantBoxes[\"\", 4, Automatic,"}]|>, <|
       "String" -> "LinguisticAssistantBoxes", "Type" -> "GovernmentAgency", 
        "Position" -> {21869, 21892}, "Probability" -> 0.600271463394165, 
        "Interpretation" -> "LinguisticAssistantBoxes", "HighlightedSnippet" -> 
        Row[{"-> {}}}, DynamicBox[ToBoxes[ AlphaIntegration`", 
           Highlighted["LinguisticAssistantBoxes"], 
           "[\"\", 4, Automatic, Dynamic[Typeset`query$$],"}]|>, <|
       "String" -> "Maybe", "Type" -> "TopologicalSpaceType", 
        "Position" -> {22520, 22524}, "Probability" -> 0.544033944606781, 
        "Interpretation" -> "Maybe", "HighlightedSnippet" -> Row[{
           Highlighted["Maybe"], 
           " you could go on and check it for exoplanets. Or you could start \
solving the equations of motion"}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {22675, 22679}, "Probability" -> 0.9202387928962708, 
        "Interpretation" -> 1, "HighlightedSnippet" -> 
        Row[{"You could look at biology. Here\[CloseCurlyQuote]s the ", 
           Highlighted["first"], 
           " beginning of the reference sequence for the human"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Company", 
        "Position" -> {23020, 23026}, "Probability" -> 0.6450310349464417, 
        "Interpretation" -> Entity["Company", "WolframResearch::ygv45"], 
        "HighlightedSnippet" -> Row[{"But there\[CloseCurlyQuote]s also the ", 
           Highlighted["Wolfram"], 
           " Data Repository , which contains all sorts of"}]|>, <|
       "String" -> "US", "Type" -> "Country", "Position" -> {23139, 23140}, 
        "Probability" -> 0.9587002396583557, "Interpretation" -> 
        Entity["Country", "UnitedStates"], "HighlightedSnippet" -> 
        Row[{"Like here\[CloseCurlyQuote]s a map of state fairgrounds in the \
", 
           Highlighted["US"], ":  "}]|>, <|
       "String" -> "ResourceData", "Type" -> "GovernmentAgency", 
        "Position" -> {23173, 23184}, "Probability" -> 0.6303629279136658, 
        "Interpretation" -> "ResourceData", "HighlightedSnippet" -> 
        Row[{"  \:2715   GeoListPlot[ ", 
           Highlighted["ResourceData"], 
           "[\"U.S. State Fairgrounds\"][All, \"GeoPosition\"]]      "}]|>, <|
       "String" -> "State Fairgrounds", "Type" -> "Organization", 
        "Position" -> {23192, 23208}, "Probability" -> 0.6849389374256134, 
        "Interpretation" -> "State Fairgrounds", "HighlightedSnippet" -> 
        Row[{"  \:2715   GeoListPlot[ ResourceData[\"U.S. ", 
           Highlighted["State Fairgrounds"], 
           "\"][All, \"GeoPosition\"]]      "}]|>, <|
       "String" -> "2010", "Type" -> "Date", "Position" -> {23326, 23329}, 
        "Probability" -> 0.8681003451347351, "Interpretation" -> 
        DateObject[{2010}, "Year"], "HighlightedSnippet" -> 
        Row[{"And here\[CloseCurlyQuote]s a word cloud of the constitutions \
of countries that have been enacted since ", 
           Highlighted["2010"], ":  "}]|>, <|
       "String" -> "2010", "Type" -> "Year", "Position" -> {23326, 23329}, 
        "Probability" -> 0.9870900511741638, "Interpretation" -> "2010", 
        "HighlightedSnippet" -> 
        Row[{"And here\[CloseCurlyQuote]s a word cloud of the constitutions \
of countries that have been enacted since ", 
           Highlighted["2010"], ":  "}]|>, <|
       "String" -> "2010", "Type" -> "Date", "Position" -> {23523, 23526}, 
        "Probability" -> 0.8922180533409119, "Interpretation" -> 
        DateObject[{2010}, "Year"], "HighlightedSnippet" -> 
        Row[{"DynamicModuleBox[{Typeset`query$$ = \"year ", 
           Highlighted["2010"], 
           "\", Typeset`boxes$$ = RowBox[{\"DateObject\", \"[\","}]|>, <|
       "String" -> "2010", "Type" -> "Year", "Position" -> {23523, 23526}, 
        "Probability" -> 0.9771398901939392, "Interpretation" -> "2010", 
        "HighlightedSnippet" -> 
        Row[{"DynamicModuleBox[{Typeset`query$$ = \"year ", 
           Highlighted["2010"], 
           "\", Typeset`boxes$$ = RowBox[{\"DateObject\", \"[\","}]|>, <|
       "String" -> "2010\"", "Type" -> "Quantity", 
        "Position" -> {23523, 23527}, "Probability" -> 0.7992340326309204, 
        "Interpretation" -> Quantity[2010, "Inches"], "HighlightedSnippet" -> 
        Row[{"DynamicModuleBox[{Typeset`query$$ = \"year ", 
           Highlighted["2010\""], 
           ", Typeset`boxes$$ = RowBox[{\"DateObject\", \"[\","}]|>, <|
       "String" -> "2010", "Type" -> "Date", "Position" -> {23589, 23592}, 
        "Probability" -> 0.9077552556991577, "Interpretation" -> 
        DateObject[{2010}, "Year"], "HighlightedSnippet" -> 
        Row[{"= RowBox[{\"DateObject\", \"[\", RowBox[{\"{\", \"", 
           Highlighted["2010"], 
           "\", \"}\"}], \"]\"}], Typeset`allassumptions$$ = {{"}]|>, <|
       "String" -> "2010", "Type" -> "Year", "Position" -> {23589, 23592}, 
        "Probability" -> 0.9667813181877136, "Interpretation" -> "2010", 
        "HighlightedSnippet" -> 
        Row[{"= RowBox[{\"DateObject\", \"[\", RowBox[{\"{\", \"", 
           Highlighted["2010"], 
           "\", \"}\"}], \"]\"}], Typeset`allassumptions$$ = {{"}]|>, <|
       "String" -> "2010\"", "Type" -> "Quantity", 
        "Position" -> {23589, 23593}, "Probability" -> 0.7070698142051697, 
        "Interpretation" -> Quantity[2010, "Inches"], "HighlightedSnippet" -> 
        Row[{"= RowBox[{\"DateObject\", \"[\", RowBox[{\"{\", \"", 
           Highlighted["2010\""], 
           ", \"}\"}], \"]\"}], Typeset`allassumptions$$ = {{"}]|>, <|
       "String" -> "2\"", "Type" -> "Quantity", "Position" -> {23783, 23784}, 
        "Probability" -> 0.7029983103275299, "Interpretation" -> 
        Quantity[2, "Inches"], "HighlightedSnippet" -> 
        Row[{"Use \\\"${word2}\\\" as ${desc2}.\", \"count\" -> \"", 
           Highlighted["2\""], 
           ", \"Values\" -> {{ \"name\" -> \"PseudoTokenYear\","}]|>, <|
       "String" -> "2010", "Type" -> "Date", "Position" -> {23847, 23850}, 
        "Probability" -> 0.8863335251808167, "Interpretation" -> 
        DateObject[{2010}, "Year"], "HighlightedSnippet" -> 
        Row[{"{{ \"name\" -> \"PseudoTokenYear\", \"word\" -> \"year ", 
           Highlighted["2010"], 
           "\", \"desc\" -> \"a year\", \"input\" ->"}]|>, <|
       "String" -> "2010", "Type" -> "Year", "Position" -> {23847, 23850}, 
        "Probability" -> 0.9864657521247864, "Interpretation" -> "2010", 
        "HighlightedSnippet" -> 
        Row[{"{{ \"name\" -> \"PseudoTokenYear\", \"word\" -> \"year ", 
           Highlighted["2010"], 
           "\", \"desc\" -> \"a year\", \"input\" ->"}]|>, <|
       "String" -> "2010\"", "Type" -> "Quantity", 
        "Position" -> {23847, 23851}, "Probability" -> 0.7169479727745056, 
        "Interpretation" -> Quantity[2010, "Inches"], "HighlightedSnippet" -> 
        Row[{"{{ \"name\" -> \"PseudoTokenYear\", \"word\" -> \"year ", 
           Highlighted["2010\""], 
           ", \"desc\" -> \"a year\", \"input\" ->"}]|>, <|
       "String" -> "2010", "Type" -> "Date", "Position" -> {23895, 23898}, 
        "Probability" -> 0.7840366959571838, "Interpretation" -> 
        DateObject[{2010}, "Year"], "HighlightedSnippet" -> Row[{"year+", 
           Highlighted["2010"], 
           "-_*PseudoTokenYear-\"}, { \"name\" -> \"Unit\", \"word\""}]|>, <|
       "String" -> "2010", "Type" -> "Year", "Position" -> {23895, 23898}, 
        "Probability" -> 0.9705811738967896, "Interpretation" -> "2010", 
        "HighlightedSnippet" -> Row[{"year+", 
           Highlighted["2010"], 
           "-_*PseudoTokenYear-\"}, { \"name\" -> \"Unit\", \"word\""}]|>, <|
       "String" -> "Unit", "Type" -> "GovernmentAgency", 
        "Position" -> {23935, 23938}, "Probability" -> 0.8291565179824829, 
        "Interpretation" -> "Unit", "HighlightedSnippet" -> 
        Row[{"year+2010-_*PseudoTokenYear-\"}, { \"name\" -> \"", 
           Highlighted["Unit"], 
           "\", \"word\" -> \"year\", \"desc\" -> \"a unit\", \"input\""}]|>, \
<|"String" -> "MC", "Type" -> "GovernmentAgency", 
        "Position" -> {23993, 23994}, "Probability" -> 0.6314287781715393, 
        "Interpretation" -> "MC", "HighlightedSnippet" -> 
        Row[{"-> \"year\", \"desc\" -> \"a unit\", \"input\" -> \"*", 
           Highlighted["MC"], 
           ".year+2010-_*Unit-\"}}}}, Typeset`assumptions$$ ="}]|>, <|
       "String" -> "2010", "Type" -> "Date", "Position" -> {24001, 24004}, 
        "Probability" -> 0.7826597094535828, "Interpretation" -> 
        DateObject[{2010}, "Year"], "HighlightedSnippet" -> Row[{"year+", 
           Highlighted["2010"], 
           "-_*Unit-\"}}}}, Typeset`assumptions$$ = {},"}]|>, <|
       "String" -> "2010", "Type" -> "Year", "Position" -> {24001, 24004}, 
        "Probability" -> 0.9741953611373901, "Interpretation" -> "2010", 
        "HighlightedSnippet" -> Row[{"year+", 
           Highlighted["2010"], 
           "-_*Unit-\"}}}}, Typeset`assumptions$$ = {},"}]|>, <|
       "String" -> "True", "Type" -> "MusicAlbum", 
        "Position" -> {24107, 24110}, "Probability" -> 0.594214677810669, 
        "Interpretation" -> Entity["MusicAlbum", "True::3k3k8"], 
        "HighlightedSnippet" -> 
        Row[{"= {1}, Typeset`querystate$$ = { \"Online\" -> ", 
           Highlighted["True"], 
           ", \"Allowed\" -> True, \"mparse.jsp\" ->"}]|>, <|
       "String" -> "True", "Type" -> "MusicAlbum", 
        "Position" -> {24126, 24129}, "Probability" -> 0.5995036959648132, 
        "Interpretation" -> Entity["MusicAlbum", "True::3k3k8"], 
        "HighlightedSnippet" -> 
        Row[{"= { \"Online\" -> True, \"Allowed\" -> ", 
           Highlighted["True"], 
           ", \"mparse.jsp\" -> 0.542662`6.186074404594303,"}]|>, <|
       "String" -> "SelectWithContents", "Type" -> "Organization", 
        "Position" -> {24774, 24791}, "Probability" -> 0.6295035481452942, 
        "Interpretation" -> "SelectWithContents", "HighlightedSnippet" -> 
        Row[{"BaseStyle->{\"Deploy\"}, DeleteWithContents->True, \
Editable->False, ", 
           Highlighted["SelectWithContents"], 
           "->True]\\) &], \"Text\"]]]]      "}]|>, <|
       "String" -> "Wolfram", "Type" -> "PhysicalConstant", 
        "Position" -> {24956, 24962}, "Probability" -> 0.9018625020980835, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"One convenient source of this is the ", 
           Highlighted["Wolfram"], 
           " Data Drop . In an educational setting,"}]|>, <|
       "String" -> "today", "Type" -> "Date", "Position" -> {25234, 25238}, 
        "Probability" -> 0.966198742389679, "Interpretation" -> 
        DateObject[{2023, 12, 4}, "Day"], "HighlightedSnippet" -> 
        Row[{"Here it is for ", 
           Highlighted["today"], ":  "}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {25758, 25762}, "Probability" -> 0.932296872138977, 
        "Interpretation" -> 1, "HighlightedSnippet" -> 
        Row[{"As a very simple example, let\[CloseCurlyQuote]s look at \
primes. Here are the ", 
           Highlighted["first"], " 50:  "}]|>, <|
       "String" -> "6", "Type" -> "Time", "Position" -> {26071, 26071}, 
        "Probability" -> 0.8452536463737488, "Interpretation" -> 
        TimeObject[{18}, "Hour"], "HighlightedSnippet" -> 
        Row[{"We can see this by computation. Any number can be written as ", 
           Highlighted["6"], " n + k for some n and k :  "}]|>, <|
       "String" -> "6", "Type" -> "Time", "Position" -> {26121, 26121}, 
        "Probability" -> 0.7450506687164307, "Interpretation" -> 
        TimeObject[{18}, "Hour"], "HighlightedSnippet" -> 
        Row[{"  \:2715   Table[", 
           Highlighted["6"], " n + k, {k, 0, 5}]      "}]|>, <|
       "String" -> "Euclid", "Type" -> "TopologicalSpaceType", 
        "Position" -> {26409, 26414}, "Probability" -> 0.9242275357246399, 
        "Interpretation" -> "Euclid", "HighlightedSnippet" -> 
        Row[{"write a computational essay about implementing ", 
           Highlighted["Euclid"], 
           "\[CloseCurlyQuote]s algorithm, studying its running time, and \
so"}]|>, <|
       "String" -> "Euclid", "Type" -> "TopologicalSpaceType", 
        "Position" -> {26508, 26513}, "Probability" -> 0.7631801962852478, 
        "Interpretation" -> "Euclid", "HighlightedSnippet" -> 
        Row[{"Define a function to give all steps in ", 
           Highlighted["Euclid"], "\[CloseCurlyQuote]s algorithm:  "}]|>, <|
       "String" -> "MNIST", "Type" -> "Organization", 
        "Position" -> {26930, 26934}, "Probability" -> 0.9719420075416565, 
        "Interpretation" -> "MNIST", "HighlightedSnippet" -> 
        Row[{"starting, say, by making a feature space plot of part of the ", 
           Highlighted["MNIST"], " handwritten digits dataset:  "}]|>, <|
       "String" -> "MNIST", "Type" -> "Organization", 
        "Position" -> {27030, 27034}, "Probability" -> 0.841330885887146, 
        "Interpretation" -> "MNIST", "HighlightedSnippet" -> 
        Row[{"  \:2715   FeatureSpacePlot[RandomSample[Keys[ResourceData[\"", 
           Highlighted["MNIST"], "\"]], 50]]      "}]|>, <|
       "String" -> "HTTP", "Type" -> "NetworkService", 
        "Position" -> {27154, 27157}, "Probability" -> 0.9760229587554932, 
        "Interpretation" -> Entity["NetworkService", "HTTP::7ww75"], 
        "HighlightedSnippet" -> 
        Row[{"you could write a computational essay about the ", 
           Highlighted["HTTP"], 
           " protocol. This gets an HTTP response from a"}]|>, <|
       "String" -> "URLRead", "Type" -> "Organization", 
        "Position" -> {27226, 27232}, "Probability" -> 0.9432101249694824, 
        "Interpretation" -> "URLRead", "HighlightedSnippet" -> 
        Row[{"  \:2715   ", 
           Highlighted["URLRead"], 
           "[\"https://www.wolfram.com\"]      "}]|>, <|
       "String" -> "HTML", "Type" -> "FileFormat", 
        "Position" -> {27411, 27414}, "Probability" -> 0.6312552690505981, 
        "Interpretation" -> Entity["FileFormat", "HTML-1"], 
        "HighlightedSnippet" -> Row[{"wolframalpha.com\", {\"", 
           Highlighted["HTML"], 
           "\", \"XMLObject\"}], VertexLabeling -> False,"}]|>, <|
       "String" -> "Entity", "Type" -> "GovernmentAgency", 
        "Position" -> {27584, 27589}, "Probability" -> 0.6049375534057617, 
        "Interpretation" -> "Entity", "HighlightedSnippet" -> 
        Row[{"  \:2715   AnatomyPlot3D[", 
           Highlighted["Entity"], 
           "[\"AnatomicalStructure\", \"LeftFoot\"]]       What Makes a Good \
Computational"}]|>, <|
       "String" -> "AnatomicalStructure", "Type" -> "GovernmentAgency", 
        "Position" -> {27592, 27610}, "Probability" -> 0.8371543288230896, 
        "Interpretation" -> "AnatomicalStructure", "HighlightedSnippet" -> 
        Row[{"  \:2715   AnatomyPlot3D[Entity[\"", 
           Highlighted["AnatomicalStructure"], 
           "\", \"LeftFoot\"]]       What Makes a Good Computational Essay?  \
"}]|>, <|"String" -> "AnatomicalStructure", "Type" -> "Organization", 
        "Position" -> {27592, 27610}, "Probability" -> 0.9592720866203308, 
        "Interpretation" -> "AnatomicalStructure", "HighlightedSnippet" -> 
        Row[{"  \:2715   AnatomyPlot3D[Entity[\"", 
           Highlighted["AnatomicalStructure"], 
           "\", \"LeftFoot\"]]       What Makes a Good Computational Essay?  \
"}]|>, <|"String" -> "one can", "Type" -> "Quantity", 
        "Position" -> {28527, 28533}, "Probability" -> 0.9, "Interpretation" -> 
        Quantity[1, "Cans"], "HighlightedSnippet" -> 
        Row[{"doesn\[CloseCurlyQuote]t make much sense but still sounds good, \
", 
           Highlighted["one can"], 
           "\[CloseCurlyQuote]t ultimately do something like that in a"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {28712, 28718}, "Probability" -> 0.9242615699768066, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"So what can go wrong? Well, like ", 
           Highlighted["English"], 
           " prose, Wolfram Language code can be unnecessarily \
complicated,"}]|>, <|
       "String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {28727, 28742}, "Probability" -> 0.897082507610321, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"So what can go wrong? Well, like English prose, ", 
           Highlighted["Wolfram Language"], 
           " code can be unnecessarily complicated, and hard to"}]|>, <|
       "String" -> "two lines", "Type" -> "Quantity", 
        "Position" -> {29020, 29028}, "Probability" -> 0.9, "Interpretation" -> 
        Quantity[2, 
          IndependentUnit["lines of code"]], "HighlightedSnippet" -> 
        Row[{"piece of input should be at most one or perhaps ", 
           Highlighted["two lines"], 
           " long\[LongDash]and that the caption for the input should"}]|>, <|
       "String" -> "one line", "Type" -> "Quantity", 
        "Position" -> {29092, 29099}, "Probability" -> 0.9, "Interpretation" -> 
        Quantity[1, 
          IndependentUnit["lines of code"]], "HighlightedSnippet" -> 
        Row[{"the caption for the input should always be just ", 
           Highlighted["one line"], 
           " long. If I\[CloseCurlyQuote]m trying to do something where \
the"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Person", 
        "Position" -> {30274, 30280}, "Probability" -> 0.8301485776901245, 
        "Interpretation" -> Entity["Person", "StephenWolfram::j276d"], 
        "HighlightedSnippet" -> Row[{"The technology of ", 
           Highlighted["Wolfram"], 
           " Notebooks makes it straightforward to put in interactive \
elements, like"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Surname", 
        "Position" -> {30274, 30280}, "Probability" -> 0.6754027605056763, 
        "Interpretation" -> Entity["Surname", "Wolfram"], 
        "HighlightedSnippet" -> Row[{"The technology of ", 
           Highlighted["Wolfram"], 
           " Notebooks makes it straightforward to put in interactive \
elements, like"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {30274, 30280}, "Probability" -> 0.7268972396850586, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"The technology of ", 
           Highlighted["Wolfram"], 
           " Notebooks makes it straightforward to put in interactive \
elements, like"}]|>, <|
       "String" -> "Cloud", "Type" -> "Surname", "Position" -> {30811, 30815},
         "Probability" -> 0.8268282413482666, "Interpretation" -> 
        Entity["Surname", "Cloud"], "HighlightedSnippet" -> 
        Row[{"Just deploy the data (or code) to the Wolfram ", 
           Highlighted["Cloud"], 
           ", and set appropriate permissions so it can"}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {31483, 31487}, "Probability" -> 0.9798907041549683, 
        "Interpretation" -> 1, "HighlightedSnippet" -> Row[{"A ", 
           Highlighted["first"], 
           ", straightforward question is: does the code run?"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {32139, 32145}, "Probability" -> 0.8168209195137024, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"2. Keep the core of each piece of ", 
           Highlighted["Wolfram"], " Language input to a line or two  "}]|>, <|
       "String" -> "4", "Type" -> "Time", "Position" -> {32267, 32267}, 
        "Probability" -> 0.6825991272926331, "Interpretation" -> 
        TimeObject[{16}, "Hour"], "HighlightedSnippet" -> Row[{
           Highlighted["4"], 
           ". Try to make each input+caption independently understandable  \
"}]|>, <|"String" -> "5", "Type" -> "Time", "Position" -> {32332, 32332}, 
        "Probability" -> 0.5659037232398987, "Interpretation" -> 
        TimeObject[{17}, "Hour"], "HighlightedSnippet" -> Row[{
           Highlighted["5"], 
           ". Break different topics or directions into different subsections \
  Learning the Language  "}]|>, <|
       "String" -> "languages", "Type" -> "GovernmentAgency", 
        "Position" -> {32602, 32610}, "Probability" -> 0.5043686032295227, 
        "Interpretation" -> "languages", "HighlightedSnippet" -> 
        Row[{"Now, unlike human ", 
           Highlighted["languages"], 
           ", the Wolfram Language is explicitly designed"}]|>, <|
       "String" -> "Language", "Type" -> "GovernmentAgency", 
        "Position" -> {32625, 32632}, "Probability" -> 0.8014716506004333, 
        "Interpretation" -> "Language", "HighlightedSnippet" -> 
        Row[{"Now, unlike human languages, the Wolfram ", 
           Highlighted["Language"], 
           " is explicitly designed (and, yes, that\[CloseCurlyQuote]s \
what"}]|>, <|
       "String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {32850, 32865}, "Probability" -> 0.8075568079948425, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"One feature of the ", 
           Highlighted["Wolfram Language"], 
           " is that\[LongDash]like with human languages\[LongDash]it\
\[CloseCurlyQuote]s typically easier to read than to write."}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {33065, 33069}, "Probability" -> 0.9385338425636292, 
        "Interpretation" -> 1, "HighlightedSnippet" -> 
        Row[{"able to write computational essays is for them ", 
           Highlighted["first"], 
           " to read a bunch of essays. Perhaps then they can"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {33303, 33309}, "Probability" -> 0.6800734996795654, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"As people get more fluent in writing the ", 
           Highlighted["Wolfram"], 
           " Language, something interesting happens: they start"}]|>, <|
       "String" -> "Wolfram Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {33421, 33436}, "Probability" -> 0.8107134103775024, 
        "Interpretation" -> "Wolfram Language", "HighlightedSnippet" -> 
        Row[{"expressing themselves in the language, and using ", 
           Highlighted["Wolfram Language"], 
           " input to carry significant parts of the"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {33775, 33781}, "Probability" -> 0.9249420166015625, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> 
        Row[{"easy to explain computational exercises in ", 
           Highlighted["English"], 
           " (\[OpenCurlyDoubleQuote]Make a table of the first 10 squares\
\[CloseCurlyDoubleQuote]). But a"}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {33805, 33809}, "Probability" -> 0.9765854477882385, 
        "Interpretation" -> 1, "HighlightedSnippet" -> 
        Row[{"exercises in English (\[OpenCurlyDoubleQuote]Make a table of \
the ", 
           Highlighted["first"], 
           " 10 squares\[CloseCurlyDoubleQuote]). But a little later in the \
book, it"}]|>, <|
       "String" -> "10 squares", "Type" -> "Quantity", 
        "Position" -> {33811, 33820}, "Probability" -> 0.8, "Interpretation" -> 
        Quantity[10, 
          IndependentUnit["squares"]], "HighlightedSnippet" -> 
        Row[{"exercises in English (\[OpenCurlyDoubleQuote]Make a table of \
the first ", 
           Highlighted["10 squares"], 
           "\[CloseCurlyDoubleQuote]). But a little later in the book, it \
became a"}]|>, <|
       "String" -> "squares", "Type" -> "Unit", "Position" -> {33814, 33820}, 
        "Probability" -> 0.9462233781814575, "Interpretation" -> "squares", 
        "HighlightedSnippet" -> 
        Row[{"in English (\[OpenCurlyDoubleQuote]Make a table of the first 10 \
", 
           Highlighted["squares"], 
           "\[CloseCurlyDoubleQuote]). But a little later in the book, it \
became a"}]|>, <|
       "String" -> "English", "Type" -> "Language", 
        "Position" -> {33975, 33981}, "Probability" -> 0.962810218334198, 
        "Interpretation" -> Entity["Language", "English::385w8"], 
        "HighlightedSnippet" -> Row[{"But to express it in ", 
           Highlighted["English"], 
           " was long and awkward (and had a tendency of"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {34092, 34098}, "Probability" -> 0.8226410150527954, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"And that\[CloseCurlyQuote]s the whole point of using the ", 
           Highlighted["Wolfram"], 
           " Language, and the reason I\[CloseCurlyQuote]ve spent 30+ \
years"}]|>, <|
       "String" -> "Language", "Type" -> "GovernmentAgency", 
        "Position" -> {34100, 34107}, "Probability" -> 0.8380868434906006, 
        "Interpretation" -> "Language", "HighlightedSnippet" -> 
        Row[{"And that\[CloseCurlyQuote]s the whole point of using the \
Wolfram ", 
           Highlighted["Language"], 
           ", and the reason I\[CloseCurlyQuote]ve spent 30+ years \
building"}]|>, <|
       "String" -> "Language", "Type" -> "GovernmentAgency", 
        "Position" -> {34483, 34490}, "Probability" -> 0.8244167566299438, 
        "Interpretation" -> "Language", "HighlightedSnippet" -> 
        Row[{"of the most powerful things about the Wolfram ", 
           Highlighted["Language"], 
           " is that it helps one formulate clear"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {34683, 34689}, "Probability" -> 0.8462592959403992, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"The point of the ", 
           Highlighted["Wolfram"], 
           " Language is to provide something much higher"}]|>, <|
       "String" -> "Long Path", "Type" -> "PhysicalConstant", 
        "Position" -> {34970, 34978}, "Probability" -> 0.844330757856369, 
        "Interpretation" -> "Long Path", "HighlightedSnippet" -> Row[{"The ", 
           Highlighted["Long Path"], " to Computational Essays  "}]|>, <|
       "String" -> "40 years", "Type" -> "Quantity", 
        "Position" -> {35112, 35119}, "Probability" -> 0.8, "Interpretation" -> 
        Quantity[40, "Years"], "HighlightedSnippet" -> 
        Row[{"I\[CloseCurlyQuote]ve been on a path towards them for nearly ", 
           Highlighted["40 years"], 
           " . At first I was taking interactive computer"}]|>, <|
       "String" -> "years", "Type" -> "Unit", "Position" -> {35115, 35119}, 
        "Probability" -> 0.9278455376625061, "Interpretation" -> "years", 
        "HighlightedSnippet" -> 
        Row[{"I\[CloseCurlyQuote]ve been on a path towards them for nearly 40 \
", 
           Highlighted["years"], 
           " . At first I was taking interactive computer"}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {35126, 35130}, "Probability" -> 0.98857182264328, 
        "Interpretation" -> 1, "HighlightedSnippet" -> Row[{"At ", 
           Highlighted["first"], 
           " I was taking interactive computer output and"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {35183, 35183}, "Probability" -> 0.7340083122253418, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"At first I was taking interactive computer output and Scotch", 
           Highlighted["-"], "taping descriptions into it:  "}]|>, <|
       "String" -> "1981", "Type" -> "Date", "Position" -> {35221, 35224}, 
        "Probability" -> 0.8398969769477844, "Interpretation" -> 
        DateObject[{1981}, "Year"], "HighlightedSnippet" -> Row[{"By ", 
           Highlighted["1981"], 
           ", when I built SMP , I was routinely writing documents that \
interspersed code and explanations:"}]|>, <|
       "String" -> "1981", "Type" -> "Year", "Position" -> {35221, 35224}, 
        "Probability" -> 0.9592003226280212, "Interpretation" -> "1981", 
        "HighlightedSnippet" -> Row[{"By ", 
           Highlighted["1981"], 
           ", when I built SMP , I was routinely writing documents that \
interspersed code and explanations:"}]|>, <|
       "String" -> "SMP", "Type" -> "Organization", 
        "Position" -> {35240, 35242}, "Probability" -> 0.7778537273406982, 
        "Interpretation" -> "SMP", "HighlightedSnippet" -> 
        Row[{"By 1981, when I built ", 
           Highlighted["SMP"], 
           " , I was routinely writing documents that interspersed code and \
explanations:"}]|>, <|
       "String" -> "1986", "Type" -> "Date", "Position" -> {35345, 35348}, 
        "Probability" -> 0.8814120292663574, "Interpretation" -> 
        DateObject[{1986}, "Year"], "HighlightedSnippet" -> 
        Row[{"But it was only in ", 
           Highlighted["1986"], 
           ", when I started documenting what became Mathematica and the \
Wolfram Language,"}]|>, <|
       "String" -> "1986", "Type" -> "Year", "Position" -> {35345, 35348}, 
        "Probability" -> 0.9478729367256165, "Interpretation" -> "1986", 
        "HighlightedSnippet" -> Row[{"But it was only in ", 
           Highlighted["1986"], 
           ", when I started documenting what became Mathematica and the \
Wolfram Language,"}]|>, <|
       "String" -> "Mathematica", "Type" -> "Organization", 
        "Position" -> {35390, 35400}, "Probability" -> 0.5722034573554993, 
        "Interpretation" -> "Mathematica", "HighlightedSnippet" -> 
        Row[{"in 1986, when I started documenting what became ", 
           Highlighted["Mathematica"], 
           " and the Wolfram Language, that I started"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {35410, 35416}, "Probability" -> 0.563904345035553, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"documenting what became Mathematica and the ", 
           Highlighted["Wolfram"], 
           " Language, that I started seriously developing a"}]|>, <|
       "String" -> "1.0 in", "Type" -> "Quantity", 
        "Position" -> {35565, 35570}, "Probability" -> 0.8208475112915039, 
        "Interpretation" -> Quantity[1., "Inches"], "HighlightedSnippet" -> 
        Row[{"And with the release of Mathematica ", 
           Highlighted["1.0 in"], 
           " 1988 came another critical element: the invention of \
Wolfram"}]|>, <|
       "String" -> "1988", "Type" -> "Date", "Position" -> {35572, 35575}, 
        "Probability" -> 0.9091503024101257, "Interpretation" -> 
        DateObject[{1988}, "Year"], "HighlightedSnippet" -> 
        Row[{"And with the release of Mathematica 1.0 in ", 
           Highlighted["1988"], 
           " came another critical element: the invention of Wolfram"}]|>, <|
       "String" -> "1988", "Type" -> "Year", "Position" -> {35572, 35575}, 
        "Probability" -> 0.9668152332305908, "Interpretation" -> "1988", 
        "HighlightedSnippet" -> 
        Row[{"And with the release of Mathematica 1.0 in ", 
           Highlighted["1988"], 
           " came another critical element: the invention of Wolfram"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Person", 
        "Position" -> {35625, 35631}, "Probability" -> 0.8545849919319153, 
        "Interpretation" -> Entity["Person", "StephenWolfram::j276d"], 
        "HighlightedSnippet" -> 
        Row[{"came another critical element: the invention of ", 
           Highlighted["Wolfram"], 
           " Notebooks. Notebooks arrived in a form at least"}]|>, <|
       "String" -> "today", "Type" -> "Date", "Position" -> {35728, 35732}, 
        "Probability" -> 0.9401981830596924, "Interpretation" -> 
        DateObject[{2023, 12, 4}, "Day"], "HighlightedSnippet" -> 
        Row[{"superficially very similar to the way they are ", 
           Highlighted["today"], 
           " (and already in many ways more sophisticated"}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {35956, 35960}, "Probability" -> 0.9839158654212952, 
        "Interpretation" -> 1, "HighlightedSnippet" -> Row[{"At ", 
           Highlighted["first"], 
           " notebooks were only possible on Mac and NeXT computers. A few \
years later they were extended to"}]|>, <|
       "String" -> "Microsoft", "Type" -> "Company", 
        "Position" -> {36058, 36066}, "Probability" -> 0.9782226085662842, 
        "Interpretation" -> Entity["Company", "MicrosoftCorporation::j3gxm"], 
        "HighlightedSnippet" -> 
        Row[{"A few years later they were extended to ", 
           Highlighted["Microsoft"], 
           " Windows and X Windows (and later, Linux). But"}]|>, <|
       "String" -> "Microsoft", "Type" -> "Financial", 
        "Position" -> {36058, 36066}, "Probability" -> 0.9628420472145081, 
        "Interpretation" -> Entity["Financial", "NASDAQ:MSFT"], 
        "HighlightedSnippet" -> 
        Row[{"A few years later they were extended to ", 
           Highlighted["Microsoft"], 
           " Windows and X Windows (and later, Linux). But"}]|>, <|
       "String" -> "Microsoft", "Type" -> "FoodManufacturer", 
        "Position" -> {36058, 36066}, "Probability" -> 0.8382643461227417, 
        "Interpretation" -> "Microsoft", "HighlightedSnippet" -> 
        Row[{"A few years later they were extended to ", 
           Highlighted["Microsoft"], 
           " Windows and X Windows (and later, Linux). But"}]|>, <|
       "String" -> "CD", "Type" -> "Organization", 
        "Position" -> {36403, 36404}, "Probability" -> 0.6652823686599731, 
        "Interpretation" -> "CD", "HighlightedSnippet" -> 
        Row[{"and books printed from notebooks, with interactive versions \
available on ", 
           Highlighted["CD"], "-ROM at the back:  "}]|>, <|
       "String" -> "ROM", "Type" -> "Organization", 
        "Position" -> {36406, 36408}, "Probability" -> 0.6063439846038818, 
        "Interpretation" -> "ROM", "HighlightedSnippet" -> 
        Row[{"and books printed from notebooks, with interactive versions \
available on CD-", 
           Highlighted["ROM"], " at the back:  "}]|>, <|
       "String" -> "1990s", "Type" -> "Quantity", 
        "Position" -> {36524, 36528}, "Probability" -> 0.9896330833435059, 
        "Interpretation" -> Quantity[1990, "Seconds"], "HighlightedSnippet" -> 
        Row[{"essays already existed by the beginning of the ", 
           Highlighted["1990s"], 
           ". But to really make computational essays come"}]|>, <|
       "String" -> "1990", "Type" -> "Date", "Position" -> {36735, 36738}, 
        "Probability" -> 0.9003391265869141, "Interpretation" -> 
        DateObject[{1990}, "Year"], "HighlightedSnippet" -> Row[{"By ", 
           Highlighted["1990"], 
           " it was perfectly possible to create a notebook with a narrative, \
and people did it,"}]|>, <|
       "String" -> "1990", "Type" -> "Year", "Position" -> {36735, 36738}, 
        "Probability" -> 0.9872558116912842, "Interpretation" -> "1990", 
        "HighlightedSnippet" -> Row[{"By ", 
           Highlighted["1990"], 
           " it was perfectly possible to create a notebook with a narrative, \
and people did it,"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Person", 
        "Position" -> {37206, 37212}, "Probability" -> 0.8852304816246033, 
        "Interpretation" -> Entity["Person", "StephenWolfram::j276d"], 
        "HighlightedSnippet" -> 
        Row[{"years, particularly with the development of the ", 
           Highlighted["Wolfram"], 
           " Cloud , things have gotten much more"}]|>, <|
       "String" -> "Cloud", "Type" -> "Surname", "Position" -> {37214, 37218},
         "Probability" -> 0.775801420211792, "Interpretation" -> 
        Entity["Surname", "Cloud"], "HighlightedSnippet" -> 
        Row[{"particularly with the development of the Wolfram ", 
           Highlighted["Cloud"], 
           " , things have gotten much more streamlined."}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {37560, 37566}, "Probability" -> 0.7092481851577759, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"input), it\[CloseCurlyQuote]s become even easier to write in \
the ", 
           Highlighted["Wolfram"], 
           " Language\[LongDash]and there\[CloseCurlyQuote]s ever more that \
can be"}]|>, <|
       "String" -> "student", "Type" -> "Occupation", 
        "Position" -> {37879, 37885}, "Probability" -> 0.7681256532669067, 
        "Interpretation" -> "student", "HighlightedSnippet" -> 
        Row[{"professionally in writing reports, or as a ", 
           Highlighted["student"], 
           " doing homework.   Ancient Educational History  "}]|>, <|
       "String" -> "Educational History", "Type" -> "Organization", 
        "Position" -> {37913, 37931}, "Probability" -> 0.8844243288040161, 
        "Interpretation" -> "Educational History", "HighlightedSnippet" -> 
        Row[{"Ancient ", 
           Highlighted["Educational History"], "  "}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {37947, 37954}, "Probability" -> 0.8186969757080078, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"The idea of ", 
           Highlighted["students"], 
           " producing computational essays is something new for modern \
times, made possible by a"}]|>, <|
       "String" -> "US", "Type" -> "Country", "Position" -> {38199, 38200}, 
        "Probability" -> 0.8889874219894409, "Interpretation" -> 
        Entity["Country", "UnitedStates"], "HighlightedSnippet" -> 
        Row[{"see, if you\[CloseCurlyQuote]d learned a subject like math in \
the ", 
           Highlighted["US"], 
           " a couple of hundred years ago, a big thing \
you\[CloseCurlyQuote]d"}]|>, <|
       "String" -> "hundred years", "Type" -> "Quantity", 
        "Position" -> {38214, 38226}, "Probability" -> 0.9, "Interpretation" -> 
        Quantity[100, "Years"], "HighlightedSnippet" -> 
        Row[{"a subject like math in the US a couple of ", 
           Highlighted["hundred years"], 
           " ago, a big thing you\[CloseCurlyQuote]d have done is to create \
a"}]|>, <|"String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {39056, 39062}, "Probability" -> 0.7140838503837585, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"just edit your computational essay notebook and immediately \
rerun the ", 
           Highlighted["Wolfram"], " Language inputs in it.  "}]|>, <|
       "String" -> "20 years", "Type" -> "Quantity", 
        "Position" -> {39161, 39168}, "Probability" -> 0.8008012473583221, 
        "Interpretation" -> Quantity[20, "Years"], "HighlightedSnippet" -> 
        Row[{"For about ", 
           Highlighted["20 years"], 
           " I\[CloseCurlyQuote]d had essentially as an artwork a \
curious"}]|>, <|
       "String" -> "1818", "Type" -> "Date", "Position" -> {39247, 39250}, 
        "Probability" -> 0.841725766658783, "Interpretation" -> 
        DateObject[{1818}, "Year"], "HighlightedSnippet" -> 
        Row[{"a curious handwritten notebook (created in ", 
           Highlighted["1818"], 
           ", it says, by a certain George Lehman, apparently"}]|>, <|
       "String" -> "1818", "Type" -> "Year", "Position" -> {39247, 39250}, 
        "Probability" -> 0.8973466157913208, "Interpretation" -> "1818", 
        "HighlightedSnippet" -> 
        Row[{"a curious handwritten notebook (created in ", 
           Highlighted["1818"], 
           ", it says, by a certain George Lehman, apparently"}]|>, <|
       "String" -> "George", "Type" -> "GivenName", 
        "Position" -> {39275, 39280}, "Probability" -> 0.9708250761032104, 
        "Interpretation" -> 
        Entity["GivenName", {"George", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> 
        Row[{"notebook (created in 1818, it says, by a certain ", 
           Highlighted["George"], 
           " Lehman, apparently of Orwigsburg, Pennsylvania"}]|>, <|
       "String" -> "Lehman", "Type" -> "Surname", 
        "Position" -> {39282, 39287}, "Probability" -> 0.8791864514350891, 
        "Interpretation" -> Entity["Surname", "Lehman"], "HighlightedSnippet" -> 
        Row[{"(created in 1818, it says, by a certain George ", 
           Highlighted["Lehman"], 
           ", apparently of Orwigsburg, Pennsylvania ), with"}]|>, <|
       "String" -> "Orwigsburg, Pennsylvania", "Type" -> "City", 
        "Position" -> {39304, 39327}, "Probability" -> 0.9179978768030802, 
        "Interpretation" -> 
        Entity["City", {"Orwigsburg", "Pennsylvania", "UnitedStates"}], 
        "HighlightedSnippet" -> 
        Row[{"(created in 1818, it says, by a certain George Lehman, \
apparently of ", 
           Highlighted["Orwigsburg, Pennsylvania"], 
           " ), with pages like this:  "}]|>, <|
       "String" -> "Pennsylvania", "Type" -> "USState", 
        "Position" -> {39316, 39327}, "Probability" -> 0.9875471591949463, 
        "Interpretation" -> 
        Entity["AdministrativeDivision", {"Pennsylvania", "UnitedStates"}], 
        "HighlightedSnippet" -> 
        Row[{"1818, it says, by a certain George Lehman, apparently of \
Orwigsburg, ", 
           Highlighted["Pennsylvania"], " ), with pages like this:  "}]|>, <|
       "String" -> "shadow", "Type" -> "Color", "Position" -> {39502, 39507}, 
        "Probability" -> 0.9572380185127258, "Interpretation" -> 
        RGBColor[0.541176, 0.47451, 0.364706], "HighlightedSnippet" -> 
        Row[{"object\[Ellipsis] by having the length of the ", 
           Highlighted["shadow"], 
           " given\[CloseCurlyDoubleQuote]. And of course I can\
\[CloseCurlyQuote]t resist a modern"}]|>, <|
       "String" -> "Sun", "Type" -> "AstronomicalObject", 
        "Position" -> {39673, 39675}, "Probability" -> 0.8933072686195374, 
        "Interpretation" -> Entity["Star", "Sun"], "HighlightedSnippet" -> 
        Row[{"Find the current position of the ", 
           Highlighted["Sun"], " as azimuth, altitude:  "}]|>, <|
       "String" -> "Sun", "Type" -> "Star", "Position" -> {39673, 39675}, 
        "Probability" -> 0.8405532836914062, "Interpretation" -> 
        Entity["Star", "Sun"], "HighlightedSnippet" -> 
        Row[{"Find the current position of the ", 
           Highlighted["Sun"], " as azimuth, altitude:  "}]|>, <|
       "String" -> "shadow", "Type" -> "Color", "Position" -> {39757, 39762}, 
        "Probability" -> 0.9771397709846497, "Interpretation" -> 
        RGBColor[0.541176, 0.47451, 0.364706], "HighlightedSnippet" -> 
        Row[{"Find the length of a ", 
           Highlighted["shadow"], " for an object of unit height:  "}]|>, <|
       "String" -> "Tan", "Type" -> "Color", "Position" -> {39813, 39815}, 
        "Probability" -> 0.8, "Interpretation" -> 
        RGBColor[0.8235294117647058, 0.7058823529411764, 0.5490196078431373], 
        "HighlightedSnippet" -> Row[{"  \:2715   1/", 
           Highlighted["Tan"], "[SunPosition[][[2]]]      "}]|>, <|
       "String" -> "10-ft", "Type" -> "Quantity", 
        "Position" -> {39851, 39855}, "Probability" -> 0.7813331484794617, 
        "Interpretation" -> Quantity[10, "Feet"], "HighlightedSnippet" -> 
        Row[{"Given a ", 
           Highlighted["10-ft"], 
           " shadow, find the height of the object that made it:  "}]|>, <|
       "String" -> "shadow", "Type" -> "Color", "Position" -> {39857, 39862}, 
        "Probability" -> 0.9316016435623169, "Interpretation" -> 
        RGBColor[0.541176, 0.47451, 0.364706], "HighlightedSnippet" -> 
        Row[{"Given a 10-ft ", 
           Highlighted["shadow"], 
           ", find the height of the object that made it:  "}]|>, <|
       "String" -> "Tan", "Type" -> "Color", "Position" -> {39926, 39928}, 
        "Probability" -> 0.8, "Interpretation" -> 
        RGBColor[0.8235294117647058, 0.7058823529411764, 0.5490196078431373], 
        "HighlightedSnippet" -> Row[{"  \:2715   ", 
           Highlighted["Tan"], 
           "[SunPosition[][[2]]]10ft       The Path Ahead  "}]|>, <|
       "String" -> "10ft       The", "Type" -> "Quantity", 
        "Position" -> {39949, 39962}, "Probability" -> 0.9, "Interpretation" -> 
        Quantity[10, "Feet"], "HighlightedSnippet" -> 
        Row[{"  \:2715   Tan[SunPosition[][[2]]]", 
           Highlighted["10ft       The"], " Path Ahead  "}]|>, <|
       "String" -> "Path", "Type" -> "Organization", 
        "Position" -> {39964, 39967}, "Probability" -> 0.630263090133667, 
        "Interpretation" -> "Path", "HighlightedSnippet" -> 
        Row[{"  \:2715   Tan[SunPosition[][[2]]]10ft       The ", 
           Highlighted["Path"], " Ahead  "}]|>, <|
       "String" -> "I", "Type" -> "Organization", 
        "Position" -> {39977, 39977}, "Probability" -> 0.5599952340126038, 
        "Interpretation" -> "I", "HighlightedSnippet" -> Row[{
           Highlighted["I"], 
           " like writing textual essays (such as blog posts!). But I like \
writing computational essays more."}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {40283, 40289}, "Probability" -> 0.9301575422286987, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"an idea\[LongDash]or I can just give a little piece of ", 
           Highlighted["Wolfram"], 
           " Language input that expresses the idea very"}]|>, <|
       "String" -> "A New Kind of Science", "Type" -> "Book", 
        "Position" -> {40444, 40464}, "Probability" -> 0.8493592858314514, 
        "Interpretation" -> Entity["Book", "ANewKindOfScience"], 
        "HighlightedSnippet" -> Row[{"When I wrote my big book ", 
           Highlighted["A New Kind of Science"], 
           " (from 1991 to 2002), neither our technology nor the world was \
quite ready"}]|>, <|
       "String" -> "Science", "Type" -> "Organization", 
        "Position" -> {40458, 40464}, "Probability" -> 0.6107453107833862, 
        "Interpretation" -> "Science", "HighlightedSnippet" -> 
        Row[{"When I wrote my big book A New Kind of ", 
           Highlighted["Science"], 
           " (from 1991 to 2002), neither our technology nor the world"}]|>, <|
       "String" -> "1991", "Type" -> "Date", "Position" -> {40472, 40475}, 
        "Probability" -> 0.899376630783081, "Interpretation" -> 
        DateObject[{1991}, "Year"], "HighlightedSnippet" -> 
        Row[{"I wrote my big book A New Kind of Science (from ", 
           Highlighted["1991"], 
           " to 2002), neither our technology nor the world"}]|>, <|
       "String" -> "1991", "Type" -> "Year", "Position" -> {40472, 40475}, 
        "Probability" -> 0.988964319229126, "Interpretation" -> "1991", 
        "HighlightedSnippet" -> 
        Row[{"I wrote my big book A New Kind of Science (from ", 
           Highlighted["1991"], 
           " to 2002), neither our technology nor the world"}]|>, <|
       "String" -> "2002", "Type" -> "Date", "Position" -> {40480, 40483}, 
        "Probability" -> 0.8556554317474365, "Interpretation" -> 
        DateObject[{2002}, "Year"], "HighlightedSnippet" -> 
        Row[{"my big book A New Kind of Science (from 1991 to ", 
           Highlighted["2002"], 
           "), neither our technology nor the world was quite"}]|>, <|
       "String" -> "2002", "Type" -> "Year", "Position" -> {40480, 40483}, 
        "Probability" -> 0.9886731505393982, "Interpretation" -> "2002", 
        "HighlightedSnippet" -> 
        Row[{"my big book A New Kind of Science (from 1991 to ", 
           Highlighted["2002"], 
           "), neither our technology nor the world was quite"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Person", 
        "Position" -> {40653, 40659}, "Probability" -> 0.8977167010307312, 
        "Interpretation" -> Entity["Person", "StephenWolfram::j276d"], 
        "HighlightedSnippet" -> 
        Row[{"My research for the book filled thousands of ", 
           Highlighted["Wolfram"], 
           " Notebooks. But when it actually came to putting"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Surname", 
        "Position" -> {40653, 40659}, "Probability" -> 0.8256818652153015, 
        "Interpretation" -> Entity["Surname", "Wolfram"], 
        "HighlightedSnippet" -> 
        Row[{"My research for the book filled thousands of ", 
           Highlighted["Wolfram"], 
           " Notebooks. But when it actually came to putting"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {41482, 41488}, "Probability" -> 0.5626216530799866, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"Demonstrations Project (that now has 11,000+ ", 
           Highlighted["Wolfram"], 
           " Language\[Dash]powered Demonstrations). Here\[CloseCurlyQuote]s \
a"}]|>, <|"String" -> "Computational", "Type" -> "Organization", 
        "Position" -> {41563, 41575}, "Probability" -> 0.6168273091316223, 
        "Interpretation" -> "Computational", "HighlightedSnippet" -> Row[{
           Highlighted["Computational"], 
           " essays open up all sorts of new types of communication. Research \
papers that directly present"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {41870, 41877}, "Probability" -> 0.6817812323570251, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"of course, computational essays define a way for ", 
           Highlighted["students"], 
           " (and others) to very directly and usefully"}]|>, <|
       "String" -> "Language", "Type" -> "GovernmentAgency", 
        "Position" -> {42206, 42213}, "Probability" -> 0.8383467197418213, 
        "Interpretation" -> "Language", "HighlightedSnippet" -> 
        Row[{"And for me, having built the Wolfram ", 
           Highlighted["Language"], 
           " to be a computational communication language,"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {42643, 42649}, "Probability" -> 0.8919204473495483, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"and hidden assumptions; there\[CloseCurlyQuote]s just going to \
be ", 
           Highlighted["Wolfram"], 
           " Language input that stands alone, and that I can"}]|>, <|
       "String" -> "Language", "Type" -> "GovernmentAgency", 
        "Position" -> {42651, 42658}, "Probability" -> 0.7159693837165833, 
        "Interpretation" -> "Language", "HighlightedSnippet" -> 
        Row[{"assumptions; there\[CloseCurlyQuote]s just going to be Wolfram \
", 
           Highlighted["Language"], 
           " input that stands alone, and that I can take out"}]|>, <|
       "String" -> "blogs", "Type" -> "Occupation", 
        "Position" -> {42824, 42828}, "Probability" -> 0.634081244468689, 
        "Interpretation" -> "blogs", "HighlightedSnippet" -> 
        Row[{"us a few new formats for communication\[LongDash]like ", 
           Highlighted["blogs"], 
           ", and social media, and things like Wikipedia."}]|>, <|
       "String" -> "Wikipedia", "Type" -> "GovernmentAgency", 
        "Position" -> {42865, 42873}, "Probability" -> 0.8696460723876953, 
        "Interpretation" -> "Wikipedia", "HighlightedSnippet" -> 
        Row[{"blogs, and social media, and things like ", 
           Highlighted["Wikipedia"], 
           ". But all of these still follow the basic concept"}]|>, <|
       "String" -> "Computational Thinking", "Type" -> "Organization", 
        "Position" -> {43148, 43169}, "Probability" -> 0.6522874236106873, 
        "Interpretation" -> "Computational Thinking", "HighlightedSnippet" -> 
        Row[{"Posted in: ", 
           Highlighted["Computational Thinking"], 
           " , Data Science , Education , Language & Communication , New \
Technology , Wolfram"}]|>, <|
       "String" -> "Education", "Type" -> "GovernmentAgency", 
        "Position" -> {43188, 43196}, "Probability" -> 0.9889021515846252, 
        "Interpretation" -> "Education", "HighlightedSnippet" -> 
        Row[{"in: Computational Thinking , Data Science , ", 
           Highlighted["Education"], 
           " , Language & Communication , New Technology ,"}]|>, <|
       "String" -> "5 characters", "Type" -> "Quantity", 
        "Position" -> {43326, 43337}, "Probability" -> 0.8, "Interpretation" -> 
        Quantity[5, 
          IndependentUnit["characters"]], "HighlightedSnippet" -> 
        Row[{"Please enter your comment (at least ", 
           Highlighted["5 characters"], ").    "}]|>, <|
       "String" -> "12 comments", "Type" -> "Quantity", 
        "Position" -> {43516, 43526}, "Probability" -> 0.8, "Interpretation" -> 
        Quantity[12, 
          IndependentUnit["comments"]], "HighlightedSnippet" -> Row[{"      ", 
           Highlighted["12 comments"], "  "}]|>, <|
       "String" -> "PhD", "Type" -> "PersonTitle", 
        "Position" -> {43659, 43661}, "Probability" -> 0.9383719563484192, 
        "Interpretation" -> 
        Entity["PersonTitle", "PhilosophiaeDoctor::d5b5r"], 
        "HighlightedSnippet" -> 
        Row[{"of weeks away from submitting a statistics ", 
           Highlighted["PhD"], 
           " thesis written entirely in the form of"}]|>, <|
       "String" -> "Richard", "Type" -> "GivenName", 
        "Position" -> {43821, 43827}, "Probability" -> 0.9904749989509583, 
        "Interpretation" -> 
        Entity["GivenName", {"Richard", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> 
        Row[{"of presentation, and I quote your preface to ", 
           Highlighted["Richard"], 
           " Crandall\[CloseCurlyQuote]s 1991 book Mathematica for the"}]|>, <|
       "String" -> "Richard Crandall", "Type" -> "Person", 
        "Position" -> {43821, 43836}, "Probability" -> 0.9362225234508514, 
        "Interpretation" -> Entity["Person", "RichardCrandall::426g3"], 
        "HighlightedSnippet" -> 
        Row[{"this form of presentation, and I quote your preface to ", 
           Highlighted["Richard Crandall"], 
           "\[CloseCurlyQuote]s 1991 book Mathematica for the Sciences."}]|>, \
<|"String" -> "Crandall", "Type" -> "Surname", "Position" -> {43829, 43836}, 
        "Probability" -> 0.8665878176689148, "Interpretation" -> 
        Entity["Surname", "Crandall"], "HighlightedSnippet" -> 
        Row[{"of presentation, and I quote your preface to Richard ", 
           Highlighted["Crandall"], 
           "\[CloseCurlyQuote]s 1991 book Mathematica for the Sciences."}]|>, \
<|"String" -> "1991", "Type" -> "Date", "Position" -> {43840, 43843}, 
        "Probability" -> 0.8968955278396606, "Interpretation" -> 
        DateObject[{1991}, "Year"], "HighlightedSnippet" -> 
        Row[{"presentation, and I quote your preface to Richard Crandall\
\[CloseCurlyQuote]s ", 
           Highlighted["1991"], " book Mathematica for the Sciences."}]|>, <|
       "String" -> "1991", "Type" -> "Year", "Position" -> {43840, 43843}, 
        "Probability" -> 0.9924682974815369, "Interpretation" -> "1991", 
        "HighlightedSnippet" -> 
        Row[{"presentation, and I quote your preface to Richard Crandall\
\[CloseCurlyQuote]s ", 
           Highlighted["1991"], " book Mathematica for the Sciences."}]|>, <|
       "String" -> "Today", "Type" -> "Date", "Position" -> {43881, 43885}, 
        "Probability" -> 0.8909301161766052, "Interpretation" -> 
        DateObject[{2023, 12, 4}, "Day"], "HighlightedSnippet" -> Row[{" ", 
           Highlighted["Today"], 
           " I read your Computational Essay blog, and have added a section \
referring to this new term for a"}]|>, <|
       "String" -> "Computational", "Type" -> "Organization", 
        "Position" -> {43899, 43911}, "Probability" -> 0.8248017430305481, 
        "Interpretation" -> "Computational", "HighlightedSnippet" -> 
        Row[{" Today I read your ", 
           Highlighted["Computational"], 
           " Essay blog, and have added a section referring to this new term \
for a older"}]|>, <|
       "String" -> "blog", "Type" -> "Occupation", 
        "Position" -> {43919, 43922}, "Probability" -> 0.5611674785614014, 
        "Interpretation" -> "blog", "HighlightedSnippet" -> 
        Row[{" Today I read your Computational Essay ", 
           Highlighted["blog"], 
           ", and have added a section referring to this new term for a"}]|>, \
<|"String" -> "Barrie", "Type" -> "GivenName", "Position" -> {44335, 44340}, 
        "Probability" -> 0.9647917747497559, "Interpretation" -> 
        Entity["GivenName", {"Barrie", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{" ", 
           Highlighted["Barrie"], "    "}]|>, <|
       "String" -> "Stokes", "Type" -> "Surname", 
        "Position" -> {44353, 44358}, "Probability" -> 0.9535856246948242, 
        "Interpretation" -> Entity["Surname", "Stokes"], "HighlightedSnippet" -> 
        Row[{"Barrie ", 
           Highlighted["Stokes"], "  "}]|>, <|
       "String" -> "November 14, 2017", "Type" -> "Date", 
        "Position" -> {44362, 44378}, "Probability" -> 0.9461182504892349, 
        "Interpretation" -> DateObject[{2017, 11, 14}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 14, 2017"], " at 8:32 pm      "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {44375, 44378}, 
        "Probability" -> 0.9032783508300781, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 14, ", 
           Highlighted["2017"], " at 8:32 pm      "}]|>, <|
       "String" -> "pm", "Type" -> "Unit", "Position" -> {44388, 44389}, 
        "Probability" -> 0.9818341135978699, "Interpretation" -> "pm", 
        "HighlightedSnippet" -> Row[{"November 14, 2017 at 8:32 ", 
           Highlighted["pm"], "      "}]|>, <|
       "String" -> "theorem", "Type" -> "AstronomicalObjectType", 
        "Position" -> {44536, 44542}, "Probability" -> 0.548173725605011, 
        "Interpretation" -> "theorem", "HighlightedSnippet" -> 
        Row[{"with the notebook for the central limit ", 
           Highlighted["theorem"], 
           " and I\[CloseCurlyQuote]m wondering if there\[CloseCurlyQuote]re \
more notebooks"}]|>, <|
       "String" -> "theorem", "Type" -> "PhysicalConstant", 
        "Position" -> {44536, 44542}, "Probability" -> 0.6395033597946167, 
        "Interpretation" -> "theorem", "HighlightedSnippet" -> 
        Row[{"with the notebook for the central limit ", 
           Highlighted["theorem"], 
           " and I\[CloseCurlyQuote]m wondering if there\[CloseCurlyQuote]re \
more notebooks"}]|>, <|
       "String" -> "November 15, 2017", "Type" -> "Date", 
        "Position" -> {44628, 44644}, "Probability" -> 0.919043555855751, 
        "Interpretation" -> DateObject[{2017, 11, 15}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 15, 2017"], " at 9:24 pm    "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {44641, 44644}, 
        "Probability" -> 0.8101602792739868, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 15, ", 
           Highlighted["2017"], " at 9:24 pm    "}]|>, <|
       "String" -> "pm", "Type" -> "Unit", "Position" -> {44654, 44655}, 
        "Probability" -> 0.9903268218040466, "Interpretation" -> "pm", 
        "HighlightedSnippet" -> Row[{"November 15, 2017 at 9:24 ", 
           Highlighted["pm"], "    "}]|>, <|
       "String" -> "November 16, 2017", "Type" -> "Date", 
        "Position" -> {45023, 45039}, "Probability" -> 0.961230531334877, 
        "Interpretation" -> DateObject[{2017, 11, 16}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 16, 2017"], " at 2:11 pm        "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {45036, 45039}, 
        "Probability" -> 0.9234937429428101, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 16, ", 
           Highlighted["2017"], " at 2:11 pm        "}]|>, <|
       "String" -> "2:11 pm", "Type" -> "Time", "Position" -> {45044, 45050}, 
        "Probability" -> 0.9888593852519989, "Interpretation" -> 
        TimeObject[{14, 11}, "Minute"], "HighlightedSnippet" -> 
        Row[{"November 16, 2017 at ", 
           Highlighted["2:11 pm"], "        "}]|>, <|
       "String" -> "pm", "Type" -> "Unit", "Position" -> {45049, 45050}, 
        "Probability" -> 0.9938371777534485, "Interpretation" -> "pm", 
        "HighlightedSnippet" -> Row[{"November 16, 2017 at 2:11 ", 
           Highlighted["pm"], "        "}]|>, <|
       "String" -> "computer scientist", "Type" -> "Occupation", 
        "Position" -> {45141, 45158}, "Probability" -> 0.798773854970932, 
        "Interpretation" -> "computer scientist", "HighlightedSnippet" -> 
        Row[{
          "might be interested in the idea of *literate programming* \
developed by a ", 
           Highlighted["computer scientist"], 
           " called Donald Knuth.    "}]|>, <|
       "String" -> "Donald", "Type" -> "GivenName", 
        "Position" -> {45167, 45172}, "Probability" -> 0.9666950106620789, 
        "Interpretation" -> 
        Entity["GivenName", {"Donald", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> 
        Row[{"in the idea of *literate programming* developed by a computer \
scientist called ", 
           Highlighted["Donald"], " Knuth.    "}]|>, <|
       "String" -> "Donald Knuth", "Type" -> "Person", 
        "Position" -> {45167, 45178}, "Probability" -> 0.9233999252319336, 
        "Interpretation" -> Entity["Person", "DonaldEKnuth::9j434"], 
        "HighlightedSnippet" -> 
        Row[{"be interested in the idea of *literate programming* developed \
by a computer scientist called ", 
           Highlighted["Donald Knuth"], ".    "}]|>, <|
       "String" -> "Jim", "Type" -> "GivenName", "Position" -> {45185, 45187},
         "Probability" -> 0.9343907833099365, "Interpretation" -> 
        Entity["GivenName", {"Jim", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{
           Highlighted["Jim"], " Tyson  "}]|>, <|
       "String" -> "Tyson", "Type" -> "Surname", "Position" -> {45189, 45193},
         "Probability" -> 0.8639059662818909, "Interpretation" -> 
        Entity["Surname", "Tyson"], "HighlightedSnippet" -> Row[{"Jim ", 
           Highlighted["Tyson"], "  "}]|>, <|
       "String" -> "November 16, 2017", "Type" -> "Date", 
        "Position" -> {45197, 45213}, "Probability" -> 0.9402108639478683, 
        "Interpretation" -> DateObject[{2017, 11, 16}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 16, 2017"], " at 5:19 am      "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {45210, 45213}, 
        "Probability" -> 0.7971475124359131, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 16, ", 
           Highlighted["2017"], " at 5:19 am      "}]|>, <|
       "String" -> "5:19 am", "Type" -> "Time", "Position" -> {45218, 45224}, 
        "Probability" -> 0.9793813079595566, "Interpretation" -> 
        TimeObject[{5, 19}, "Minute"], "HighlightedSnippet" -> 
        Row[{"November 16, 2017 at ", 
           Highlighted["5:19 am"], "      "}]|>, <|
       "String" -> "David", "Type" -> "GivenName", 
        "Position" -> {45336, 45340}, "Probability" -> 0.9277887940406799, 
        "Interpretation" -> 
        Entity["GivenName", {"David", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{
           Highlighted["David"], " G. Stork  "}]|>, <|
       "String" -> "November 16, 2017", "Type" -> "Date", 
        "Position" -> {45353, 45369}, "Probability" -> 0.9438938349485397, 
        "Interpretation" -> DateObject[{2017, 11, 16}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 16, 2017"], " at 5:22 pm      "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {45366, 45369}, 
        "Probability" -> 0.9543665647506714, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 16, ", 
           Highlighted["2017"], " at 5:22 pm      "}]|>, <|
       "String" -> "5:22 pm      \n \n \nYou", "Type" -> "Time", 
        "Position" -> {45374, 45394}, "Probability" -> 0.8950208902359009, 
        "Interpretation" -> TimeObject[{17, 22}, "Minute"], 
        "HighlightedSnippet" -> Row[{"November 16, 2017 at ", 
           Highlighted["5:22 pm      \n \n \nYou"], 
           " write, \[OpenCurlyDoubleQuote]what really makes this work is the \
Wolfram Language.\[CloseCurlyDoubleQuote] I\[CloseCurlyQuote]m \
confused."}]|>, <|
       "String" -> "pm", "Type" -> "Unit", "Position" -> {45379, 45380}, 
        "Probability" -> 0.9957482218742371, "Interpretation" -> "pm", 
        "HighlightedSnippet" -> Row[{"November 16, 2017 at 5:22 ", 
           Highlighted["pm"], "      "}]|>, <|
       "String" -> "Andrew", "Type" -> "GivenName", 
        "Position" -> {45578, 45583}, "Probability" -> 0.9238955974578857, 
        "Interpretation" -> 
        Entity["GivenName", {"Andrew", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{
           Highlighted["Andrew"], " gelman  "}]|>, <|
       "String" -> "November 22, 2017", "Type" -> "Date", 
        "Position" -> {45594, 45610}, "Probability" -> 0.9441997706890106, 
        "Interpretation" -> DateObject[{2017, 11, 22}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 22, 2017"], " at 12:57 am    "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {45607, 45610}, 
        "Probability" -> 0.9553597569465637, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 22, ", 
           Highlighted["2017"], " at 12:57 am    "}]|>, <|
       "String" -> "12:57 am", "Type" -> "Time", "Position" -> {45615, 45622},
         "Probability" -> 0.9472465068101883, "Interpretation" -> 
        TimeObject[{0, 57}, "Minute"], "HighlightedSnippet" -> 
        Row[{"November 22, 2017 at ", 
           Highlighted["12:57 am"], "    "}]|>, <|
       "String" -> "interpreters", "Type" -> "Occupation", 
        "Position" -> {46286, 46297}, "Probability" -> 0.647304356098175, 
        "Interpretation" -> "interpreters", "HighlightedSnippet" -> 
        Row[{"there\[CloseCurlyQuote]s no issue with mutually incompatible ", 
           Highlighted["interpreters"], 
           " like with Python, and even when you move to"}]|>, <|
       "String" -> "Python", "Type" -> "ProgrammingLanguage", 
        "Position" -> {46309, 46314}, "Probability" -> 0.996340811252594, 
        "Interpretation" -> Entity["ProgrammingLanguage", "Python::4g426"], 
        "HighlightedSnippet" -> 
        Row[{"mutually incompatible interpreters like with ", 
           Highlighted["Python"], 
           ", and even when you move to Jupyter which can"}]|>, <|
       "String" -> "November 22, 2017", "Type" -> "Date", 
        "Position" -> {46981, 46997}, "Probability" -> 0.9546942263841629, 
        "Interpretation" -> DateObject[{2017, 11, 22}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 22, 2017"], " at 10:49 am        "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {46994, 46997}, 
        "Probability" -> 0.9674862623214722, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 22, ", 
           Highlighted["2017"], " at 10:49 am        "}]|>, <|
       "String" -> "Mathematica", "Type" -> "Organization", 
        "Position" -> {47151, 47161}, "Probability" -> 0.75651615858078, 
        "Interpretation" -> "Mathematica", "HighlightedSnippet" -> 
        Row[{"that they have always been an integral part of ", 
           Highlighted["Mathematica"], 
           "\[Ellipsis]and that the implications of that idea continue"}]|>, <|
       "String" -> "Mathematica", "Type" -> "ProgrammingLanguage", 
        "Position" -> {47151, 47161}, "Probability" -> 0.7048546671867371, 
        "Interpretation" -> Entity["ProgrammingLanguage", "WolframLanguage"], 
        "HighlightedSnippet" -> 
        Row[{"that they have always been an integral part of ", 
           Highlighted["Mathematica"], 
           "\[Ellipsis]and that the implications of that idea continue"}]|>, <|
       "String" -> "mathematicians", "Type" -> "Occupation", 
        "Position" -> {47303, 47316}, "Probability" -> 0.5146703720092773, 
        "Interpretation" -> "mathematicians", "HighlightedSnippet" -> 
        Row[{"it gives a new and better answer to \[OpenCurlyDoubleQuote]what \
do ", 
           Highlighted["mathematicians"], 
           " make\[CloseCurlyDoubleQuote]? A computational essay is not just \
a"}]|>, <|"String" -> "Wiles", "Type" -> "Surname", 
        "Position" -> {47753, 47757}, "Probability" -> 0.5613638162612915, 
        "Interpretation" -> Entity["Surname", "Wiles"], "HighlightedSnippet" -> 
        Row[{"be a complete computational proof of, say, ", 
           Highlighted["Wiles"], 
           "\[CloseCurlyQuote] proof of Fermat\[CloseCurlyQuote]s Last \
Theorem? If not, what\[CloseCurlyQuote]s"}]|>, <|
       "String" -> "Fermat\[CloseCurlyQuote]s Last Theorem", "Type" -> 
        "FamousMathProblem", "Position" -> {47769, 47789}, "Probability" -> 
        0.9080424308776855, "Interpretation" -> 
        Entity["FamousMathProblem", "FermatsLastTheorem"], 
        "HighlightedSnippet" -> 
        Row[{"computational proof of, say, Wiles\[CloseCurlyQuote] proof of ", 
           Highlighted["Fermat\[CloseCurlyQuote]s Last Theorem"], 
           "? If not, what\[CloseCurlyQuote]s missing? Can a \
computational"}]|>, <|
       "String" -> "theorem", "Type" -> "AstronomicalObjectType", 
        "Position" -> {47850, 47856}, "Probability" -> 0.6853728890419006, 
        "Interpretation" -> "theorem", "HighlightedSnippet" -> 
        Row[{"Can a computational essay prove a ", 
           Highlighted["theorem"], 
           " that can be \
\[OpenCurlyDoubleQuote]called\[CloseCurlyDoubleQuote] in another essay, like \
a"}]|>, <|"String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {48466, 48472}, "Probability" -> 0.8512040972709656, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"assembling polyominoes, for instance) as input, which the ", 
           Highlighted["Wolfram"], 
           " Language does not seem to support.    "}]|>, <|
       "String" -> "Scott", "Type" -> "GivenName", 
        "Position" -> {48513, 48517}, "Probability" -> 0.8180599212646484, 
        "Interpretation" -> 
        Entity["GivenName", {"Scott", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{
           Highlighted["Scott"], " Kim  "}]|>, <|
       "String" -> "Kim", "Type" -> "Surname", "Position" -> {48519, 48521}, 
        "Probability" -> 0.8925979733467102, "Interpretation" -> 
        Entity["Surname", "Kim"], "HighlightedSnippet" -> Row[{"Scott ", 
           Highlighted["Kim"], "  "}]|>, <|
       "String" -> "November 25, 2017", "Type" -> "Date", 
        "Position" -> {48525, 48541}, "Probability" -> 0.9170260429382324, 
        "Interpretation" -> DateObject[{2017, 11, 25}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 25, 2017"], " at 2:39 pm    "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {48538, 48541}, 
        "Probability" -> 0.961304783821106, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 25, ", 
           Highlighted["2017"], " at 2:39 pm    "}]|>, <|
       "String" -> "2:39 pm", "Type" -> "Time", "Position" -> {48546, 48552}, 
        "Probability" -> 0.9360619783401489, "Interpretation" -> 
        TimeObject[{14, 39}, "Minute"], "HighlightedSnippet" -> 
        Row[{"November 25, 2017 at ", 
           Highlighted["2:39 pm"], "    "}]|>, <|
       "String" -> "pm", "Type" -> "Unit", "Position" -> {48551, 48552}, 
        "Probability" -> 0.881207287311554, "Interpretation" -> "pm", 
        "HighlightedSnippet" -> Row[{"November 25, 2017 at 2:39 ", 
           Highlighted["pm"], "    "}]|>, <|
       "String" -> "first", "Type" -> "OrdinalNumber", 
        "Position" -> {48617, 48621}, "Probability" -> 0.9830517768859863, 
        "Interpretation" -> 1, "HighlightedSnippet" -> 
        Row[{"upcoming version of Wolfram Language will have a ", 
           Highlighted["first"], 
           " step towards having proofs within the language,"}]|>, <|
       "String" -> "-", "Type" -> "PhysicalConstant", 
        "Position" -> {48829, 48829}, "Probability" -> 0.6486220359802246, 
        "Interpretation" -> "-", "HighlightedSnippet" -> 
        Row[{"g. http://annals.math.princeton.edu/wp", 
           Highlighted["-"], 
           "content/uploads/annals-v162-n3-p01.pdf ) are not"}]|>, <|
       "String" -> "AMS", "Type" -> "GovernmentAgency", 
        "Position" -> {49050, 49052}, "Probability" -> 0.6620673537254333, 
        "Interpretation" -> "AMS", "HighlightedSnippet" -> 
        Row[{"is a nice recent blog on this subject by the ", 
           Highlighted["AMS"], 
           " mentioning s Wolfram Language-LEAN connection at"}]|>, <|
       "String" -> "Wolfram", "Type" -> "TopologicalSpaceType", 
        "Position" -> {49067, 49073}, "Probability" -> 0.5887185335159302, 
        "Interpretation" -> "Wolfram", "HighlightedSnippet" -> 
        Row[{"a nice recent blog on this subject by the AMS mentioning s ", 
           Highlighted["Wolfram"], 
           " Language-LEAN connection at the end.  "}]|>, <|
       "String" -> "Timothy", "Type" -> "GivenName", 
        "Position" -> {49114, 49120}, "Probability" -> 0.9257756471633911, 
        "Interpretation" -> 
        Entity["GivenName", {"Timothy", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{
           Highlighted["Timothy"], 
           
           " Chow ( https://arxiv.org/abs/0712.1320v2 ) wrote: \
\[OpenCurlyDoubleQuote]All mathematicians are familiar with the"}]|>, <|
       "String" -> "Chow", "Type" -> "Surname", "Position" -> {49122, 49125}, 
        "Probability" -> 0.9157789945602417, "Interpretation" -> 
        Entity["Surname", "Chow"], "HighlightedSnippet" -> Row[{"Timothy ", 
           Highlighted["Chow"], 
           " ( https://arxiv.org/abs/0712.1320v2 ) wrote: \
\[OpenCurlyDoubleQuote]All mathematicians are familiar with the"}]|>, <|
       "String" -> "0712.1320v2", "Type" -> "Quantity", 
        "Position" -> {49151, 49161}, "Probability" -> 0.8565367857615153, 
        "Interpretation" -> Quantity[712.132, "Volts"^2], 
        "HighlightedSnippet" -> Row[{"Timothy Chow ( https://arxiv.org/abs/", 
           Highlighted["0712.1320v2"], 
           " ) wrote: \[OpenCurlyDoubleQuote]All mathematicians are familiar \
with the concept of"}]|>, <|
       "String" -> "mathematicians", "Type" -> "Occupation", 
        "Position" -> {49177, 49190}, "Probability" -> 0.6448282599449158, 
        "Interpretation" -> "mathematicians", "HighlightedSnippet" -> 
        Row[{"org/abs/0712.1320v2 ) wrote: \[OpenCurlyDoubleQuote]All ", 
           Highlighted["mathematicians"], 
           " are familiar with the concept of an open"}]|>, <|
       "String" -> "students", "Type" -> "Occupation", 
        "Position" -> {49492, 49499}, "Probability" -> 0.7306797504425049, 
        "Interpretation" -> "students", "HighlightedSnippet" -> 
        Row[{"Every step should be motivated and clear; ideally, ", 
           Highlighted["students"], " should feel that"}]|>, <|
       "String" -> "November 28, 2017", "Type" -> "Date", 
        "Position" -> {49682, 49698}, "Probability" -> 0.9516622126102448, 
        "Interpretation" -> DateObject[{2017, 11, 28}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 28, 2017"], " at 4:16 pm        "}]|>, <|
       "String" -> "2017", "Type" -> "Year", "Position" -> {49695, 49698}, 
        "Probability" -> 0.9472344517707825, "Interpretation" -> "2017", 
        "HighlightedSnippet" -> Row[{"November 28, ", 
           Highlighted["2017"], " at 4:16 pm        "}]|>, <|
       "String" -> "4:16 pm", "Type" -> "Time", "Position" -> {49703, 49709}, 
        "Probability" -> 0.9769826233386993, "Interpretation" -> 
        TimeObject[{16, 16}, "Minute"], "HighlightedSnippet" -> 
        Row[{"November 28, 2017 at ", 
           Highlighted["4:16 pm"], "        "}]|>, <|
       "String" -> "pm", "Type" -> "Unit", "Position" -> {49708, 49709}, 
        "Probability" -> 0.997386634349823, "Interpretation" -> "pm", 
        "HighlightedSnippet" -> Row[{"November 28, 2017 at 4:16 ", 
           Highlighted["pm"], "        "}]|>, <|
       "String" -> "Daniel", "Type" -> "TropicalStorm", 
        "Position" -> {50048, 50053}, "Probability" -> 0.5585114359855652, 
        "Interpretation" -> Entity["TropicalStorm", "20180623N12244::Daniel"],
         "HighlightedSnippet" -> Row[{
           Highlighted["Daniel"], "  "}]|>, <|
       "String" -> "February 6, 2018", "Type" -> "Date", 
        "Position" -> {50057, 50072}, "Probability" -> 0.9298507869243622, 
        "Interpretation" -> DateObject[{2018, 2, 6}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["February 6, 2018"], " at 9:53 am    "}]|>, <|
       "String" -> "2018", "Type" -> "Year", "Position" -> {50069, 50072}, 
        "Probability" -> 0.9271731376647949, "Interpretation" -> "2018", 
        "HighlightedSnippet" -> Row[{"February 6, ", 
           Highlighted["2018"], " at 9:53 am    "}]|>, <|
       "String" -> "9:53 am", "Type" -> "Time", "Position" -> {50077, 50083}, 
        "Probability" -> 0.9144051969051361, "Interpretation" -> 
        TimeObject[{9, 53}, "Minute"], "HighlightedSnippet" -> 
        Row[{"February 6, 2018 at ", 
           Highlighted["9:53 am"], "    "}]|>, <|
       "String" -> "am", "Type" -> "Unit", "Position" -> {50082, 50083}, 
        "Probability" -> 0.643753707408905, "Interpretation" -> "am", 
        "HighlightedSnippet" -> Row[{"February 6, 2018 at 9:53 ", 
           Highlighted["am"], "    "}]|>, <|
       "String" -> "February 6, 2018", "Type" -> "Date", 
        "Position" -> {50313, 50328}, "Probability" -> 0.9522122889757156, 
        "Interpretation" -> DateObject[{2018, 2, 6}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["February 6, 2018"], " at 5:05 pm        "}]|>, <|
       "String" -> "2018", "Type" -> "Year", "Position" -> {50325, 50328}, 
        "Probability" -> 0.9573612809181213, "Interpretation" -> "2018", 
        "HighlightedSnippet" -> Row[{"February 6, ", 
           Highlighted["2018"], " at 5:05 pm        "}]|>, <|
       "String" -> "5:05 pm", "Type" -> "Time", "Position" -> {50333, 50339}, 
        "Probability" -> 0.8983018547296524, "Interpretation" -> 
        TimeObject[{17, 5}, "Minute"], "HighlightedSnippet" -> 
        Row[{"February 6, 2018 at ", 
           Highlighted["5:05 pm"], "        "}]|>, <|
       "String" -> "pm", "Type" -> "Unit", "Position" -> {50338, 50339}, 
        "Probability" -> 0.9628089666366577, "Interpretation" -> "pm", 
        "HighlightedSnippet" -> Row[{"February 6, 2018 at 5:05 ", 
           Highlighted["pm"], "        "}]|>, <|
       "String" -> "wolfram alpha", "Type" -> "PhysicalConstant", 
        "Position" -> {50411, 50423}, "Probability" -> 0.7061372101306915, 
        "Interpretation" -> "wolfram alpha", "HighlightedSnippet" -> 
        Row[{"issue I have with these computational notebooks (", 
           Highlighted["wolfram alpha"], 
           " / jupyter) is that the graphics are mixed with"}]|>, <|
       "String" -> "May 22, 2018", "Type" -> "Date", 
        "Position" -> {50656, 50667}, "Probability" -> 0.898898109793663, 
        "Interpretation" -> DateObject[{2018, 5, 22}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["May 22, 2018"], " at 12:15 pm      "}]|>, <|
       "String" -> "2018", "Type" -> "Year", "Position" -> {50664, 50667}, 
        "Probability" -> 0.8958832025527954, "Interpretation" -> "2018", 
        "HighlightedSnippet" -> Row[{"May 22, ", 
           Highlighted["2018"], " at 12:15 pm      "}]|>, <|
       "String" -> "12:15 pm", "Type" -> "Time", "Position" -> {50672, 50679},
         "Probability" -> 0.9781068116426468, "Interpretation" -> 
        TimeObject[{12, 15}, "Minute"], "HighlightedSnippet" -> 
        Row[{"May 22, 2018 at ", 
           Highlighted["12:15 pm"], "      "}]|>, <|
       "String" -> "pm", "Type" -> "Unit", "Position" -> {50678, 50679}, 
        "Probability" -> 0.9716030359268188, "Interpretation" -> "pm", 
        "HighlightedSnippet" -> Row[{"May 22, 2018 at 12:15 ", 
           Highlighted["pm"], "      "}]|>, <|
       "String" -> "October 27, 2023", "Type" -> "Date", 
        "Position" -> {50816, 50831}, "Probability" -> 0.8419710248708725, 
        "Interpretation" -> DateObject[{2023, 10, 27}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["October 27, 2023"], "      "}]|>, <|
       "String" -> "2023", "Type" -> "Year", "Position" -> {50828, 50831}, 
        "Probability" -> 0.9622989296913147, "Interpretation" -> "2023", 
        "HighlightedSnippet" -> Row[{"October 27, ", 
           Highlighted["2023"], "      "}]|>, <|
       "String" -> "September 29, 2023", "Type" -> "Date", 
        "Position" -> {50901, 50918}, "Probability" -> 0.9000807851552963, 
        "Interpretation" -> DateObject[{2023, 9, 29}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["September 29, 2023"], "      "}]|>, <|
       "String" -> "July 17, 2023", "Type" -> "Date", 
        "Position" -> {51000, 51012}, "Probability" -> 0.9383331686258316, 
        "Interpretation" -> DateObject[{2023, 7, 17}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["July 17, 2023"], "      "}]|>, <|
       "String" -> "2023", "Type" -> "Year", "Position" -> {51009, 51012}, 
        "Probability" -> 0.9590193033218384, "Interpretation" -> "2023", 
        "HighlightedSnippet" -> Row[{"July 17, ", 
           Highlighted["2023"], "      "}]|>, <|
       "String" -> "Mathematica", "Type" -> "ProgrammingLanguage", 
        "Position" -> {51096, 51106}, "Probability" -> 0.5248907804489136, 
        "Interpretation" -> Entity["ProgrammingLanguage", "WolframLanguage"], 
        "HighlightedSnippet" -> 
        Row[{"LLM Tech and a Lot More: Version 13.3 of Wolfram Language and ", 
           Highlighted["Mathematica"], "  "}]|>, <|
       "String" -> "June 28, 2023", "Type" -> "Date", 
        "Position" -> {51110, 51122}, "Probability" -> 0.9369147717952728, 
        "Interpretation" -> DateObject[{2023, 6, 28}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["June 28, 2023"], "            "}]|>, <|
       "String" -> "2023", "Type" -> "Year", "Position" -> {51119, 51122}, 
        "Probability" -> 0.9244486689567566, "Interpretation" -> "2023", 
        "HighlightedSnippet" -> Row[{"June 28, ", 
           Highlighted["2023"], "            "}]|>, <|
       "String" -> "November 3, 2023", "Type" -> "Date", 
        "Position" -> {51236, 51251}, "Probability" -> 0.9044799506664276, 
        "Interpretation" -> DateObject[{2023, 11, 3}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["November 3, 2023"], "      "}]|>, <|
       "String" -> "2023", "Type" -> "Year", "Position" -> {51248, 51251}, 
        "Probability" -> 0.8271747827529907, "Interpretation" -> "2023", 
        "HighlightedSnippet" -> Row[{"November 3, ", 
           Highlighted["2023"], "      "}]|>, <|
       "String" -> "October 27, 2023", "Type" -> "Date", 
        "Position" -> {51335, 51350}, "Probability" -> 0.8603240549564362, 
        "Interpretation" -> DateObject[{2023, 10, 27}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["October 27, 2023"], "      "}]|>, <|
       "String" -> "2023", "Type" -> "Year", "Position" -> {51347, 51350}, 
        "Probability" -> 0.9631423950195312, "Interpretation" -> "2023", 
        "HighlightedSnippet" -> Row[{"October 27, ", 
           Highlighted["2023"], "      "}]|>, <|
       "String" -> "September 29, 2023", "Type" -> "Date", 
        "Position" -> {51413, 51430}, "Probability" -> 0.9077091217041016, 
        "Interpretation" -> DateObject[{2023, 9, 29}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["September 29, 2023"], "      "}]|>, <|
       "String" -> "Doug", "Type" -> "GivenName", 
        "Position" -> {51457, 51460}, "Probability" -> 0.9734376668930054, 
        "Interpretation" -> 
        Entity["GivenName", {"Doug", "UnitedStates", "female"}], 
        "HighlightedSnippet" -> Row[{"Remembering ", 
           Highlighted["Doug"], 
           " Lenat (1950\[Dash]2023) and His Quest to Capture the World with \
Logic  "}]|>, <|
       "String" -> "Doug Lenat", "Type" -> "Person", 
        "Position" -> {51457, 51466}, "Probability" -> 0.8833292424678802, 
        "Interpretation" -> Entity["Person", "DougLenat::83wc5"], 
        "HighlightedSnippet" -> Row[{"Remembering ", 
           Highlighted["Doug Lenat"], 
           " (1950\[Dash]2023) and His Quest to Capture the World with Logic  \
"}]|>, <|"String" -> "1950", "Type" -> "Date", "Position" -> {51469, 51472}, 
        "Probability" -> 0.8522624373435974, "Interpretation" -> 
        DateObject[{1950}, "Year"], "HighlightedSnippet" -> 
        Row[{"Remembering Doug Lenat (", 
           Highlighted["1950"], 
           "\[Dash]2023) and His Quest to Capture the World with Logic  \
"}]|>, <|"String" -> "2023", "Type" -> "Date", "Position" -> {51474, 51477}, 
        "Probability" -> 0.8394079208374023, "Interpretation" -> 
        DateObject[{2023}, "Year"], "HighlightedSnippet" -> 
        Row[{"Remembering Doug Lenat (1950\[Dash]", 
           Highlighted["2023"], 
           ") and His Quest to Capture the World with Logic  "}]|>, <|
       "String" -> "Quest", "Type" -> "Book", "Position" -> {51488, 51492}, 
        "Probability" -> 0.5783782005310059, "Interpretation" -> 
        Entity["Book", "QuestAnAutobiography"], "HighlightedSnippet" -> 
        Row[{"Remembering Doug Lenat (1950\[Dash]2023) and His ", 
           Highlighted["Quest"], " to Capture the World with Logic  "}]|>, <|
       "String" -> "Capture", "Type" -> "NonperiodicTiling", 
        "Position" -> {51497, 51503}, "Probability" -> 0.7216360569000244, 
        "Interpretation" -> "Capture", "HighlightedSnippet" -> 
        Row[{"Remembering Doug Lenat (1950\[Dash]2023) and His Quest to ", 
           Highlighted["Capture"], " the World with Logic  "}]|>, <|
       "String" -> "Logic", "Type" -> "Person", "Position" -> {51520, 51524}, 
        "Probability" -> 0.8085817694664001, "Interpretation" -> 
        Entity["Person", "Logic::39m76"], "HighlightedSnippet" -> 
        Row[{"Remembering Doug Lenat (1950\[Dash]2023) and His Quest to \
Capture the World with ", 
           Highlighted["Logic"], "  "}]|>, <|
       "String" -> "September 5, 2023", "Type" -> "Date", 
        "Position" -> {51528, 51544}, "Probability" -> 0.7331910133361816, 
        "Interpretation" -> DateObject[{2023, 9, 5}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["September 5, 2023"], "      "}]|>, <|
       "String" -> "2023", "Type" -> "Year", "Position" -> {51541, 51544}, 
        "Probability" -> 0.7931273579597473, "Interpretation" -> "2023", 
        "HighlightedSnippet" -> Row[{"September 5, ", 
           Highlighted["2023"], "      "}]|>, <|
       "String" -> "Ed", "Type" -> "GivenName", "Position" -> {51594, 51595}, 
        "Probability" -> 0.8187971711158752, "Interpretation" -> 
        Entity["GivenName", {"Ed", "UnitedStates", "female"}], 
        "HighlightedSnippet" -> Row[{"Remembering the Improbable Life of ", 
           Highlighted["Ed"], 
           " Fredkin (1934\[Dash]2023) and His World of Ideas and Stories  \
"}]|>, <|"String" -> "Ed Fredkin", "Type" -> "Person", 
        "Position" -> {51594, 51603}, "Probability" -> 0.8184135258197784, 
        "Interpretation" -> Entity["Person", "EdwardFredkin::gh7mn"], 
        "HighlightedSnippet" -> Row[{"Remembering the Improbable Life of ", 
           Highlighted["Ed Fredkin"], 
           " (1934\[Dash]2023) and His World of Ideas and Stories  "}]|>, <|
       "String" -> "1934", "Type" -> "Date", "Position" -> {51606, 51609}, 
        "Probability" -> 0.8639644384384155, "Interpretation" -> 
        DateObject[{1934}, "Year"], "HighlightedSnippet" -> 
        Row[{"Remembering the Improbable Life of Ed Fredkin (", 
           Highlighted["1934"], 
           "\[Dash]2023) and His World of Ideas and Stories  "}]|>, <|
       "String" -> "1934", "Type" -> "Year", "Position" -> {51606, 51609}, 
        "Probability" -> 0.9612065553665161, "Interpretation" -> "1934", 
        "HighlightedSnippet" -> 
        Row[{"Remembering the Improbable Life of Ed Fredkin (", 
           Highlighted["1934"], 
           "\[Dash]2023) and His World of Ideas and Stories  "}]|>, <|
       "String" -> "2023", "Type" -> "Date", "Position" -> {51611, 51614}, 
        "Probability" -> 0.7865912318229675, "Interpretation" -> 
        DateObject[{2023}, "Year"], "HighlightedSnippet" -> 
        Row[{"Remembering the Improbable Life of Ed Fredkin (1934\[Dash]", 
           Highlighted["2023"], 
           ") and His World of Ideas and Stories  "}]|>, <|
       "String" -> "2023", "Type" -> "Year", "Position" -> {51611, 51614}, 
        "Probability" -> 0.8485406041145325, "Interpretation" -> "2023", 
        "HighlightedSnippet" -> 
        Row[{"Remembering the Improbable Life of Ed Fredkin (1934\[Dash]", 
           Highlighted["2023"], 
           ") and His World of Ideas and Stories  "}]|>, <|
       "String" -> "August 22, 2023", "Type" -> "Date", 
        "Position" -> {51654, 51668}, "Probability" -> 0.8455596268177032, 
        "Interpretation" -> DateObject[{2023, 8, 22}, "Day"], 
        "HighlightedSnippet" -> Row[{
           Highlighted["August 22, 2023"], "           All by date    "}]|>, <|
       "String" -> "2023", "Type" -> "Year", "Position" -> {51665, 51668}, 
        "Probability" -> 0.9793248772621155, "Interpretation" -> "2023", 
        "HighlightedSnippet" -> Row[{"August 22, ", 
           Highlighted["2023"], "           All by date    "}]|>, <|
       "String" -> 
        "Popular Categories  \n \nArtificial Intelligence Big Picture \
Companies", "Type" -> "TopologicalSpaceType", "Position" -> {51698, 51765}, 
        "Probability" -> 0.8614536268370492, "Interpretation" -> 
        "Popular Categories  \n \nArtificial Intelligence Big Picture \
Companies", "HighlightedSnippet" -> Row[{
           Highlighted[
           "Popular Categories  \n \nArtificial Intelligence Big Picture \
Companies"], 
           " & Business Computational Science Computational Thinking Data \
Science Education Future Perspectives"}]|>, <|
       "String" -> 
        "Business Computational Science Computational Thinking Data Science \
Education Future Perspectives", "Type" -> "TopologicalSpaceType", 
        "Position" -> {51769, 51864}, "Probability" -> 0.7535843849182129, 
        "Interpretation" -> 
        "Business Computational Science Computational Thinking Data Science \
Education Future Perspectives", "HighlightedSnippet" -> 
        Row[{"Artificial Intelligence Big Picture Companies & ", 
           Highlighted[
           "Business Computational Science Computational Thinking Data \
Science Education Future Perspectives"], 
           " Historical Perspectives Language & Communication"}]|>, <|
       "String" -> "Perspectives", "Type" -> "Periodical", 
        "Position" -> {51877, 51888}, "Probability" -> 0.7863682508468628, 
        "Interpretation" -> Entity["Periodical", "Perspectives"], 
        "HighlightedSnippet" -> 
        Row[{"Science Education Future Perspectives Historical ", 
           Highlighted["Perspectives"], 
           " Language & Communication Life & Times Life"}]|>, <|
       "String" -> "Perspectives Language", "Type" -> "TopologicalSpaceType", 
        "Position" -> {51877, 51897}, "Probability" -> 0.8662072718143463, 
        "Interpretation" -> "Perspectives Language", "HighlightedSnippet" -> 
        Row[{"Science Education Future Perspectives Historical ", 
           Highlighted["Perspectives Language"], 
           " & Communication Life & Times Life Science"}]|>, <|
       "String" -> 
        "2023 2022 2021 2020 2019 2018 2017 2016 2015 2014 2013 2012 2011 \
2010 2009 2008 2007 2006 2004 2003", "Type" -> "Year", 
        "Position" -> {52130, 52228}, "Probability" -> 0.9736605405807495, 
        "Interpretation" -> 
        "2023 2022 2021 2020 2019 2018 2017 2016 2015 2014 2013 2012 2011 \
2010 2009 2008 2007 2006 2004 2003", "HighlightedSnippet" -> Row[{
           Highlighted[
           "2023 2022 2021 2020 2019 2018 2017 2016 2015 2014 2013 2012 2011 \
2010 2009 2008 2007 2006 2004 2003"], " All                  "}]|>, <|
       "String" -> "All", "Type" -> "MusicAlbum", 
        "Position" -> {52230, 52232}, "Probability" -> 0.6971185803413391, 
        "Interpretation" -> Entity["MusicAlbum", "ALL::mtn5f"], 
        "HighlightedSnippet" -> 
        Row[{"2019 2018 2017 2016 2015 2014 2013 2012 2011 2010 2009 2008 \
2007 2006 2004 2003 ", 
           Highlighted["All"], "                  "}]|>, <|
       "String" -> "Stephen", "Type" -> "GivenName", 
        "Position" -> {52255, 52261}, "Probability" -> 0.7663983106613159, 
        "Interpretation" -> 
        Entity["GivenName", {"Stephen", "UnitedStates", "male"}], 
        "HighlightedSnippet" -> Row[{" \[Copyright] ", 
           Highlighted["Stephen"], 
           " Wolfram, LLC | Open content: CC BY-SA (code: CC BY-NC-SA ) |  \
Terms | RSS                  "}]|>, <|
       "String" -> "Stephen Wolfram", "Type" -> "Person", 
        "Position" -> {52255, 52269}, "Probability" -> 0.8537591993808746, 
        "Interpretation" -> Entity["Person", "StephenWolfram::j276d"], 
        "HighlightedSnippet" -> Row[{" \[Copyright] ", 
           Highlighted["Stephen Wolfram"], 
           ", LLC | Open content: CC BY-SA (code: CC BY-NC-SA ) |  Terms | \
RSS                  "}]|>, <|
       "String" -> "Wolfram", "Type" -> "Surname", 
        "Position" -> {52263, 52269}, "Probability" -> 0.8673784732818604, 
        "Interpretation" -> Entity["Surname", "Wolfram"], 
        "HighlightedSnippet" -> Row[{" \[Copyright] Stephen ", 
           Highlighted["Wolfram"], 
           ", LLC | Open content: CC BY-SA (code: CC BY-NC-SA ) |  Terms | \
RSS                  "}]|>, <|
       "String" -> "JavaScript", "Type" -> "ProgrammingLanguage", 
        "Position" -> {52364, 52373}, "Probability" -> 0.9935558438301086, 
        "Interpretation" -> 
        Entity["ProgrammingLanguage", "JavaScript::g3427"], 
        "HighlightedSnippet" -> Row[{"Enable ", 
           Highlighted["JavaScript"], 
           " to interact with content and submit forms on Wolfram websites. \
Learn how"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Company", 
        "Position" -> {52420, 52426}, "Probability" -> 0.7047685980796814, 
        "Interpretation" -> Entity["Company", "WolframResearch::ygv45"], 
        "HighlightedSnippet" -> 
        Row[{"Enable JavaScript to interact with content and submit forms on \
", 
           Highlighted["Wolfram"], 
           " websites. Learn how\[NonBreakingSpace]\[RightGuillemet]"}]|>, <|
       "String" -> "Wolfram", "Type" -> "Person", 
        "Position" -> {52420, 52426}, "Probability" -> 0.7251609563827515, 
        "Interpretation" -> Entity["Person", "StephenWolfram::j276d"], 
        "HighlightedSnippet" -> 
        Row[{"Enable JavaScript to interact with content and submit forms on \
", 
           Highlighted["Wolfram"], 
           " websites. Learn how\[NonBreakingSpace]\[RightGuillemet]"}]|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "String"} -> 
        1, {All, "Type"} -> 1, {All, "Position"} -> 1, {All, "Probability"} -> 
        1, {All, "Interpretation"} -> 1, {All, "HighlightedSnippet"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "String" -> TypeSystem`PackageScope`AtomShape[257.6], "Type" -> 
            TypeSystem`PackageScope`AtomShape[224.00000000000003`], 
            "Position" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Probability" -> TypeSystem`PackageScope`AtomShape[60], 
            "Interpretation" -> TypeSystem`PackageScope`UnknownShape[False], 
            "HighlightedSnippet" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "String", "Type", "Position", "Probability", "Interpretation", 
         "HighlightedSnippet"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Atom[Real], TypeSystem`AnyType, TypeSystem`AnyType}], 
       493], "Meta" -> <||>, "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "String"} -> 
        1, {All, "Type"} -> 1, {All, "Position"} -> 1, {All, "Probability"} -> 
        1, {All, "Interpretation"} -> 1, {All, "HighlightedSnippet"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "String" -> TypeSystem`PackageScope`AtomShape[257.6], "Type" -> 
            TypeSystem`PackageScope`AtomShape[224.00000000000003`], 
            "Position" -> TypeSystem`PackageScope`UnknownShape[False], 
            "Probability" -> TypeSystem`PackageScope`AtomShape[60], 
            "Interpretation" -> TypeSystem`PackageScope`UnknownShape[False], 
            "HighlightedSnippet" -> 
            TypeSystem`PackageScope`UnknownShape[False]|>], 
          DirectedInfinity[1], 6, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "String", "Type", "Position", "Probability", "Interpretation", 
         "HighlightedSnippet"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[String], 
         TypeSystem`Vector[
          TypeSystem`Atom[Integer], 2], 
         TypeSystem`Atom[Real], TypeSystem`AnyType, TypeSystem`AnyType}], 
       493], "Path" -> {}, "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 
     6, "DataRowCount" -> 493, "DataColumnCount" -> 6, "SortPaths" -> {}, 
     "SortDirections" -> {}, "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["String", 
                  Style[
                  "String", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "String"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "String"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Type", 
                  Style[
                  "Type", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Type"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Type"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Position", 
                  Style[
                  "Position", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Position"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Position"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Probability", 
                  Style[
                  "Probability", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Probability"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Probability"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["Interpretation", 
                  Style[
                  "Interpretation", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "Interpretation"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "Interpretation"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["HighlightedSnippet", 
                  Style[
                  "HighlightedSnippet", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "HighlightedSnippet"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "HighlightedSnippet"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["Stephen", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GivenName", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 13}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 13}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{1, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.991861"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Stephen\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"\[Congruent]     ", 
                 Highlighted["Stephen"], 
                 " Wolfram                                        Writings    \
                       "}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Stephen Wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Person", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{7, 21}, ShowStringCharacters -> False], 
                  Style[
                   Style[{7, 21}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{2, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.961696"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Stephen Wolfram\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"\[Congruent]     ", 
                 Highlighted["Stephen Wolfram"], 
                 "                                        Writings            \
               "}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GovernmentAgency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{15, 21}, ShowStringCharacters -> False], 
                  Style[
                   Style[{15, 21}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{3, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.837267"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"\[Congruent]     Stephen ", 
                 Highlighted["Wolfram"], 
                 "                                        Writings            \
               "}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Surname", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{15, 21}, ShowStringCharacters -> False], 
                  Style[
                   Style[{15, 21}, ShowStringCharacters -> False], FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{4, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.90533"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Wolfram\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"\[Congruent]     Stephen ", 
                 Highlighted["Wolfram"], 
                 "                                        Writings            \
               "}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ABOUT WRITINGS", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GovernmentAgency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{100, 113}, ShowStringCharacters -> False], 
                  Style[
                   Style[{100, 113}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{5, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.844015"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["ABOUT WRITINGS", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{156.8, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{
                 Highlighted["ABOUT WRITINGS"], 
                 " PUBLICATIONS MEDIA SCRAPBOOK CONTACT    "}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Artificial Intelligence Big Picture Companies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TopologicalSpaceType", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{203, 247}, ShowStringCharacters -> False], 
                  Style[
                   Style[{203, 247}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{6, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.895716"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Artificial Intelligence Big Picture Companies", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{504.00000000000006`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{
                 Highlighted["Artificial Intelligence Big Picture Companies"],
                  " & Business Computational Science Computational Thinking \
Data Science Education Future Perspectives"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
              "Business Computational Science Computational Thinking Data \
Science Education Future Perspectives Historical Perspectives Language", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TopologicalSpaceType", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{251, 379}, ShowStringCharacters -> False], 
                  Style[
                   Style[{251, 379}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{7, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.782343"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
              "Business Computational Science Computational Thinking Data \
Science Education Future Perspectives Historical Perspectives Language", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{1444.8000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"Artificial Intelligence Big Picture Companies & ", 
                 Highlighted[
                 "Business Computational Science Computational Thinking Data \
Science Education Future Perspectives Historical Perspectives Language"], 
                 " & Communication Life & Times Life Science"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Analytics", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["GovernmentAgency", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{491, 499}, ShowStringCharacters -> False], 
                  Style[
                   Style[{491, 499}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{8, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.785565"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Analytics", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"New Kind of Science New Technology Personal ", 
                 Highlighted["Analytics"], 
                 " Philosophy Physics Ruliology Software Design"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["November 14, 2017", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Date", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{974, 990}, ShowStringCharacters -> False], 
                  Style[
                   Style[{974, 990}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{9, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.964504"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"Tue 14 Nov 2017\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"What Is a Computational Essay?   ", 
                 Highlighted["November 14, 2017"], "  "}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2017", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Year", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{987, 990}, ShowStringCharacters -> False], 
                  Style[
                   Style[{987, 990}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{10, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.992717"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["2017", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{44.800000000000004`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"What Is a Computational Essay?   November 14, ", 
                 Highlighted["2017"], "  "}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2017  \n  A", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Quantity", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{987, 996}, ShowStringCharacters -> False], 
                  Style[
                   Style[{987, 996}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{11, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.8"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes[
                RowBox[{"2017", "\"A\""}]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{75, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"What Is a Computational Essay?   November 14, ", 
                 Highlighted["2017  \n  A"], 
                 " Powerful Way to Express Ideas  "}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Educators", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Occupation", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1595, 1603}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1595, 1603}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{12, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.64462"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Educators", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{
                 Highlighted["Educators"], 
                 " will routinely explain concepts using"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Educators", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Organization", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1595, 1603}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1595, 1603}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{13, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.51836"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Educators", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{100.80000000000001`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{
                 Highlighted["Educators"], 
                 " will routinely explain concepts using"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Students", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Occupation", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1665, 1672}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1665, 1672}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{14, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.636422"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Students", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{89.60000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{
                 Highlighted["Students"], 
                 " will routinely produce computational essays as"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["English", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Language", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1891, 1897}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1891, 1897}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{15, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.945784"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["\"English\""], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{90, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"First, ordinary text (here in ", 
                 Highlighted["English"], 
                 "). Second, computer input. And third, computer"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["third", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["OrdinalNumber", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{1929, 1933}, ShowStringCharacters -> False], 
                  Style[
                   Style[{1929, 1933}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{16, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.979538"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"Second, computer input. And ", 
                 Highlighted["third"], 
                 ", computer output. And the crucial point is that"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["author", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Occupation", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2353, 2358}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2353, 2358}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{17, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.874493"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["author", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{67.2, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"computational thinking on the part of the human ", 
                 Highlighted["author"], 
                 " with computational knowledge and computational"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TopologicalSpaceType", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2478, 2484}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2478, 2484}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{18, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.839023"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Wolfram", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{78.4, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"But what really makes this work is the ", 
                 Highlighted["Wolfram"], 
                 " Language \[LongDash]and the succinct representation of \
high-level"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Wolfram Language", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TopologicalSpaceType", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{2740, 2755}, ShowStringCharacters -> False], 
                  Style[
                   Style[{2740, 2755}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{19, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.838956"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Wolfram Language", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"In a typical computational essay, each piece of ", 
                 Highlighted["Wolfram Language"], 
                 " input will usually be quite short (often not more"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["Wolfram Language", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["String"]}, "Item", False], "Mouse"], 
              ImageSize -> {{257.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["TopologicalSpaceType", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Type"]}, "Item", False], "Mouse"], 
              ImageSize -> {{224.00000000000003`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover[
                  Style[{3047, 3062}, ShowStringCharacters -> False], 
                  Style[
                   Style[{3047, 3062}, ShowStringCharacters -> False], 
                   FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{20, 
                    Key["Position"]}, 4]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Position"]}, "Item", False], "Mouse"], 
              ImageMargins -> {{5, 3}, {4, 5}}]], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.842701"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Probability"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["Wolfram Language", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["Interpretation"]}, "Item", False], "Mouse"], 
              ImageSize -> {{179.20000000000002`, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Row[{"It\[CloseCurlyQuote]s essential to all this that the ", 
                 Highlighted["Wolfram Language"], 
                 " has so much built-in knowledge\[LongDash]both about the \
world and about"}], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["HighlightedSnippet"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[True, 493, 1], {1, 493 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + (-20) 
                    If[False, 493, 1], {1, 493 - -20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], " ", 
                    Style[
                    Mouseover[
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[493, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]], 
                    Style[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[493, FontWeight -> Bold]}], FontSize -> 
                    9.333333333333332, FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 493, 1], {1, 493 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35], BaseStyle -> 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 493, 1], {1, 493 - 20 + 1}]; 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]], True][
                    TypeSystem`NestedGrid`PackagePrivate`$path$$]], 
                    Appearance -> None]}], ContextMenu -> {}]}], 
               ImageMargins -> {{0, -1}, {-1, 1}}]], Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{
       4060.4500000000007`, {474.8474363762651, 481.1525636237346}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{
      4060.4500000000007`, {474.8474363762651, 481.1525636237346}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.910488483852421*^9, 3.9106805071477222`*^9, 
  3.910680565985696*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"a90037dc-c6e4-4041-810f-a9d84b490650"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"persons", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"contents", ",", 
      RowBox[{
       RowBox[{"#Type", "===", "\"\<Person\>\""}], "&"}]}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<Interpretation\>\""}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{3.9104860964164715`*^9, 3.9106803048962564`*^9},
 CellLabel->
  "In[293]:=",ExpressionUUID->"173f7ccc-181a-438d-a2ec-65df5c525b0a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vincent van Gogh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"VincentVanGogh::9vq62\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"VincentVanGogh::9vq62\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vincent van Gogh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"VincentVanGogh::9vq62\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"VincentVanGogh::9vq62\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vincent van Gogh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"VincentVanGogh::9vq62\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"VincentVanGogh::9vq62\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vincent van Gogh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"VincentVanGogh::9vq62\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"VincentVanGogh::9vq62\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Vincent van Gogh\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"VincentVanGogh::9vq62\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"VincentVanGogh::9vq62\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Richard Crandall\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"RichardCrandall::426g3\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"RichardCrandall::426g3\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Donald E. Knuth\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"DonaldEKnuth::9j434\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"DonaldEKnuth::9j434\\\"]\"", "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Doug Lenat\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"DougLenat::83wc5\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"DougLenat::83wc5\\\"]\"", "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Logic\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"Logic::39m76\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"Logic::39m76\\\"]\"", "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Edward Fredkin\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"EdwardFredkin::gh7mn\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"EdwardFredkin::gh7mn\\\"]\"", "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"], ",", 
   TemplateBox[{"\"Stephen Wolfram\"", 
     RowBox[{"Entity", "[", 
       RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
     "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\"", 
     "\"person\""},
    "Entity"]}], "}"}]], "Output",
 CellChangeTimes->{3.9104862669300623`*^9, 3.910680566362238*^9},
 CellLabel->
  "Out[293]=",ExpressionUUID->"7d05d3d8-2499-41a5-8660-4492fc5d915f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"Counts", "[", 
   RowBox[{"Flatten", "@", 
    RowBox[{"EntityValue", "[", 
     RowBox[{"persons", ",", 
      RowBox[{"EntityProperty", "[", 
       RowBox[{"\"\<Person\>\"", ",", "\"\<Occupation\>\""}], "]"}]}], 
     "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{3.910484673684854*^9},
 CellLabel->
  "In[294]:=",ExpressionUUID->"c9c71694-d149-40f3-95b4-6b64e11c901d"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"scientist\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.2834008097165992],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"painter\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.16194331983805668`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0.5, -39.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"businessperson\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0708502024291498],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, 34.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"physicist\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0708502024291498],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {-4.5, 50.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"computer programmer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04048582995951417],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-0.5, -60.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"computer scientist\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04048582995951417],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {0.5, 63.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"musician\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04048582995951417],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-14.5, 18.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"pilot\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04048582995951417],
     FontColor->RGBColor[1, 0.75, 0]], {39.5, 45.5}, Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-123., 124.}, {-69., 68.}}]], "Output",
 CellChangeTimes->{3.910486266950153*^9, 3.9106805687923517`*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"3baa2648-bb92-4851-824c-679d0b37174c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{
   RowBox[{"Counts", "[", "persons", "]"}], ",", 
   RowBox[{"ImageSize", "->", "500"}]}], "]"}]], "Input",
 CellLabel->
  "In[295]:=",ExpressionUUID->"38805031-ef57-4140-bccd-a99cbbd7bd1a"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox[
     TemplateBox[{"\"Stephen Wolfram\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Person\"", ",", "\"StephenWolfram::j276d\""}], "]"}], 
       "\"Entity[\\\"Person\\\", \\\"StephenWolfram::j276d\\\"]\""},
      "EntityTraditionalFramed"],
     StripOnInput->False,
     FontSize->Scaled[0.1320754716981132],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox[
     TemplateBox[{"\"Vincent van Gogh\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Person\"", ",", "\"VincentVanGogh::9vq62\""}], "]"}], 
       "\"Entity[\\\"Person\\\", \\\"VincentVanGogh::9vq62\\\"]\""},
      "EntityTraditionalFramed"],
     StripOnInput->False,
     FontSize->Scaled[0.07547169811320754],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {-0.5, 83.5}, Center,
     Automatic], InsetBox[
    StyleBox[
     TemplateBox[{"\"Richard Crandall\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Person\"", ",", "\"RichardCrandall::426g3\""}], "]"}], 
       "\"Entity[\\\"Person\\\", \\\"RichardCrandall::426g3\\\"]\""},
      "EntityTraditionalFramed"],
     StripOnInput->False,
     FontSize->Scaled[0.018867924528301886`],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {-0.5, -63.5}, 
    Center, Automatic], InsetBox[
    StyleBox[
     TemplateBox[{"\"Donald E. Knuth\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Person\"", ",", "\"DonaldEKnuth::9j434\""}], "]"}], 
       "\"Entity[\\\"Person\\\", \\\"DonaldEKnuth::9j434\\\"]\""},
      "EntityTraditionalFramed"],
     StripOnInput->False,
     FontSize->Scaled[0.018867924528301886`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-0.5, -84.5}, 
    Center, Automatic], InsetBox[
    StyleBox[
     TemplateBox[{"\"Edward Fredkin\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Person\"", ",", "\"EdwardFredkin::gh7mn\""}], "]"}], 
       "\"Entity[\\\"Person\\\", \\\"EdwardFredkin::gh7mn\\\"]\""},
      "EntityTraditionalFramed"],
     StripOnInput->False,
     FontSize->Scaled[0.018867924528301886`],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-79.5, -63.5}, 
    Center, Automatic], InsetBox[
    StyleBox[
     TemplateBox[{"\"Doug Lenat\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Person\"", ",", "\"DougLenat::83wc5\""}], "]"}], 
       "\"Entity[\\\"Person\\\", \\\"DougLenat::83wc5\\\"]\""},
      "EntityTraditionalFramed"],
     StripOnInput->False,
     FontSize->Scaled[0.018867924528301886`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {70.5, -63.5}, 
    Center, Automatic], InsetBox[
    StyleBox[
     TemplateBox[{"\"Logic\"", 
       RowBox[{"Entity", "[", 
         RowBox[{"\"Person\"", ",", "\"Logic::39m76\""}], "]"}], 
       "\"Entity[\\\"Person\\\", \\\"Logic::39m76\\\"]\""},
      "EntityTraditionalFramed"],
     StripOnInput->False,
     FontSize->Scaled[0.018867924528301886`],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-56.5, -84.5}, 
    Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-265., 265.}, {-96., 114.}}]], "Output",
 CellChangeTimes->{3.9104862669661646`*^9, 3.910680569153264*^9},
 CellLabel->
  "Out[295]=",ExpressionUUID->"6161b5e2-7aaf-4adf-89a3-c4795b3a4906"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"WordCloud", "[", "counts", "]"}], "]"}]], "Input",
 CellLabel->
  "In[296]:=",ExpressionUUID->"e8dc86b1-690f-4d28-9d7f-0c1e1a42d54c"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"TopologicalSpaceType\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10477835348301669`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"MilitaryConflict\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10477835348301669`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {0., 47.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"GovernmentAgency\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08635578583765112],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-3., -47.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Organization\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0909614277489925],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-8., -88.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Occupation\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08175014392630973],
     FontColor->RGBColor[1, 0.75, 0]], {-8., 88.}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Language\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08635578583765112],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {1., 126.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"ProgrammingLanguage\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05181347150259067],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {0., -127.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Quantity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07253886010362694],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {4., -155.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Year\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12089810017271156`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {9., 161.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"PhysicalConstant\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04720782959124928],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {0., -189.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Date\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.11629245826137016`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {167., 97.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"OrdinalNumber\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04490500863557858],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {0., 195.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"GivenName\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04951065054691998],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-117., 155.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Person\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05872193436960276],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {113., 148.}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Surname\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04720782959124928],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {-151., 115.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"NonperiodicTiling\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.024179620034542312`],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-177., 80.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"AstronomicalObjectType\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01957397812320092],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {135., -30.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Company\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031088082901554404`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-109., -149.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"HistoricalEvent\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02648244099021301],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {-173., 93.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Time\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04951065054691998],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {162., -83.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MusicWork\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.031088082901554404`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-141., 129.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MusicAlbum\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.028785261945883708`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {124., -152.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"AstronomicalObject\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {-5., -29.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"FoodManufacturer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01957397812320092],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {86., 16.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Unit\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04490500863557858],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {156., -108.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"FamousMathProblem\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {150., 124.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"TropicalStorm\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-139., -29.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Nationality\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.01957397812320092],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {-182., 16.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Country\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.021876799078871616`],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-170., -74.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"NetworkService\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-89., 171.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Color\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.02648244099021301],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {-169., -87.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"PersonTitle\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {-101., 16.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"FileFormat\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-96., -166.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Periodical\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {105., 160.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Financial\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {56., -113.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Book\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.021876799078871616`],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {93., -166.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"USState\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-32., -113.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"City\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {-41., 17.},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Star\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.017271157167530225`],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {19., 43.},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-289.5, 289.5}, {-207.5, 206.5}}]], "Output",
 CellChangeTimes->{3.9104862670143404`*^9, 3.9106805700473557`*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"ca5a4b87-9ac3-400c-a369-a67b17a80761"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"countries", "=", 
  RowBox[{"Normal", "[", 
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"contents", ",", 
      RowBox[{
       RowBox[{"Type", "===", "\"\<PhysicalConstant\>\""}], "&"}]}], "]"}], 
    "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "\"\<Interpretation\>\""}], "]"}], "]"}], 
   "]"}]}]], "Input",
 CellLabel->
  "In[297]:=",ExpressionUUID->"b9e76c39-e84c-4859-8968-15ed5d6e0927"],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellChangeTimes->{3.910486267027857*^9, 3.910680570172744*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"b6fdfb4e-4a19-4dd6-988a-417cb2ca29b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{"countries", ",", 
   RowBox[{"ImageSize", "->", "500"}]}], "]"}]], "Input",
 CellLabel->
  "In[298]:=",ExpressionUUID->"84849310-183a-444f-8048-97f477818aec"],

Cell[BoxData[
 GraphicsBox[{},
  ImageSize->500,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.910486267041956*^9, 3.9106805701883698`*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"c097062a-8244-443e-980d-477e01856668"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"Select", "[", 
      RowBox[{"contents", ",", 
       RowBox[{
        RowBox[{"Type", "===", "\"\<MilitaryConflict\>\""}], "&"}]}], "]"}], 
     "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "\"\<Interpretation\>\""}], "]"}], "]"}], "]"}], 
   ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellLabel->
  "In[299]:=",ExpressionUUID->"159ffcf2-f3d1-43e3-b22e-793e15737364"],

Cell[BoxData[
 GraphicsBox[{},
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.910486267053974*^9, 3.910680570203995*^9},
 CellLabel->
  "Out[299]=",ExpressionUUID->"9280e870-21d9-41be-992d-2af2ce58b41b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["KeywordGraph", "Section",ExpressionUUID->"56f19cdb-c27b-4580-9105-2538e2e9a06a"],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.9106803913906765`*^9, 
  3.9106803957081933`*^9}},ExpressionUUID->"313dab99-5de5-4faa-87d7-\
bba705f129db"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "KeywordsGraph", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"DirectedEdges", "->", "False"}], ",", 
     RowBox[{"EdgeWeight", "->", "Automatic"}], ",", 
     RowBox[{"\"\<LowerCase\>\"", "->", "True"}], ",", 
     RowBox[{"\"\<StopWords\>\"", "->", "True"}], ",", 
     RowBox[{"VertexLabels", "->", "Automatic"}], ",", 
     RowBox[{"VertexWeight", "->", "Automatic"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{
  RowBox[{"KeywordsGraph", "[", 
   RowBox[{"text_String", ",", 
    RowBox[{"number_Integer", "?", "Positive"}], ",", 
    RowBox[{"blist_List", ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"rlist_List", ":", 
     RowBox[{"{", "}"}]}], ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", 
      RowBox[{"{", 
       RowBox[{"KeywordsGraph", ",", "Graph"}], "}"}], "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "keycounts", ",", "keywords", ",", "edges", ",", "edgeCount", ",", 
      RowBox[{"data", "=", 
       RowBox[{"Replace", "[", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"TextWords", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"TrueQ", "[", 
                RowBox[{"OptionValue", "[", "\"\<StopWords\>\"", "]"}], "]"}],
                ",", "DeleteStopwords", ",", "Identity"}], "]"}], "[", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"TrueQ", "[", 
                 RowBox[{"OptionValue", "[", "\"\<LowerCase\>\"", "]"}], 
                 "]"}], ",", "ToLowerCase", ",", "Identity"}], "]"}], "[", 
              "text", "]"}], "]"}], "]"}], ",", 
           RowBox[{"Alternatives", "@@", "blist"}]}], "]"}], ",", "rlist", 
         ",", 
         RowBox[{"{", "1", "}"}]}], "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"keycounts", "=", 
      RowBox[{"Counts", "[", "data", "]"}]}], ";", 
     RowBox[{"Quiet", "[", 
      RowBox[{"Check", "[", 
       RowBox[{
        RowBox[{"keywords", "=", 
         RowBox[{"TakeLargest", "[", 
          RowBox[{"keycounts", ",", "number"}], "]"}]}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"Failure", "[", 
           RowBox[{"\"\<KeywordCount\>\"", ",", 
            RowBox[{"\[LeftAssociation]", 
             RowBox[{
              RowBox[{
              "\"\<MessageTemplate\>\"", "->", 
               "\"\<Number of specified keywords `1` exceeds the actual \
number of keywords `2`.\>\""}], ",", 
              RowBox[{"\"\<MessageParameters\>\"", "->", 
               RowBox[{"{", 
                RowBox[{"number", ",", 
                 RowBox[{"Length", "[", "keycounts", "]"}]}], "}"}]}]}], 
             "\[RightAssociation]"}]}], "]"}], ",", "Module"}], "]"}]}], 
       "]"}], "]"}], ";", 
     RowBox[{"edges", "=", 
      RowBox[{"Partition", "[", 
       RowBox[{
        RowBox[{"Cases", "[", 
         RowBox[{"data", ",", 
          RowBox[{"Alternatives", "@@", 
           RowBox[{"Keys", "[", "keywords", "]"}]}]}], "]"}], ",", "2", ",", 
        "1"}], "]"}]}], ";", 
     RowBox[{"edgeCount", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TrueQ", "[", 
         RowBox[{"Replace", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "DirectedEdges", "]"}], ",", 
           RowBox[{"Automatic", ":>", "False"}]}], "]"}], "]"}], ",", 
        RowBox[{"KeySelect", "[", 
         RowBox[{
          RowBox[{"Counts", "[", 
           RowBox[{"DirectedEdge", "@@@", "edges"}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "!=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}], ",", 
        RowBox[{"KeySelect", "[", 
         RowBox[{
          RowBox[{"Counts", "[", 
           RowBox[{"Sort", "/@", 
            RowBox[{"UndirectedEdge", "@@@", "edges"}]}], "]"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "!=", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], "]"}]}], ";", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"Keys", "[", "keywords", "]"}], ",", 
       RowBox[{"Keys", "[", "edgeCount", "]"}], ",", 
       RowBox[{"FilterRules", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"opts", ",", 
              RowBox[{"VertexWeight", "->", 
               RowBox[{"Replace", "[", 
                RowBox[{
                 RowBox[{"OptionValue", "[", "VertexWeight", "]"}], ",", 
                 RowBox[{"Automatic", ":>", 
                  RowBox[{"Values", "[", "keywords", "]"}]}]}], "]"}]}], ",", 
              RowBox[{"EdgeWeight", "->", 
               RowBox[{"Replace", "[", 
                RowBox[{
                 RowBox[{"OptionValue", "[", "EdgeWeight", "]"}], ",", 
                 RowBox[{"Automatic", ":>", 
                  RowBox[{"Values", "[", "edgeCount", "]"}]}]}], "]"}]}]}], 
             "}"}], ",", 
            RowBox[{"Options", "[", "KeywordsGraph", "]"}]}], "]"}], "]"}], 
         ",", 
         RowBox[{"Options", "[", "Graph", "]"}]}], "]"}]}], "]"}]}]}], 
   "]"}]}]}], "Input",
 CellLabel->
  "In[300]:=",ExpressionUUID->"cce8930c-cdfa-4720-9c41-6b271b3a9829"]
}, Closed]],

Cell[CellGroupData[{

Cell["Graph Plot", "Subsection",
 CellChangeTimes->{{3.9106804073779044`*^9, 
  3.910680409119832*^9}},ExpressionUUID->"dad596c4-3977-4a82-bae5-\
d2f6cc71e93d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{
   RowBox[{"KeywordsGraph", "[", 
    RowBox[{
     RowBox[{"DeleteStopwords", "[", "webpage", "]"}], ",", "80", ",", 
     RowBox[{"VertexSize", "->", "\"\<VertexWeight\>\""}], ",", 
     RowBox[{"EdgeStyle", "->", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Dashed", ",", 
        RowBox[{"Opacity", "[", "0.01", "]"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"CommunityBoundaryStyle", "->", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "Dashed", ",", 
      RowBox[{"Opacity", "[", "0.8", "]"}]}], "]"}]}], ",", 
   RowBox[{"ImageSize", "->", "Large"}], ",", 
   RowBox[{"GraphLayout", "->", "\"\<RadialEmbedding\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.910486320432754*^9, 3.910486321534593*^9}},
 CellLabel->
  "In[302]:=",ExpressionUUID->"f7e3f02d-03ca-4339-8c40-54717109a5d2"],

Cell[BoxData[
 GraphicsBox[{{
    {EdgeForm[{RGBColor[1, 0, 0], Opacity[0.8], Dashing[{Small, Small}]}], 
     FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{0.24031746639715246`, 0.30002039510160217`}, {
       0.4160722904696289, 0.08438811897472122}, {
       0.558666883064862, -0.01237221742231874}, {
       0.7395272474682677, -0.01237221742231874}, {0.9773594531379244, 
       0.024341085158517087`}, {1.1091196122781553`, 0.07618626643256544}, {
       1.2867286564505744`, 0.1541608390249397}, {1.3041074235466583`, 
       0.43707773495407953`}, {1.3041074235466583`, 0.6179380993574852}, {
       1.2622821402824818`, 0.8784193808768439}, {1.0161008906561562`, 
       0.9568134800508946}, {0.8265179875211588, 1.0027283066653285`}, {
       0.6898153824634371, 1.002751160590114}, {0.5089550180600314, 
       1.002751160590114}, {0.2235295152022828, 0.7879033464876899}, {
       0.1458876564407241, 0.6655451045038329}, {0.1458876564407241, 
       0.48468474010042717`}}, SplineClosed -> True]]}, 
    {EdgeForm[{RGBColor[1, 0, 0], Opacity[0.8], Dashing[{Small, Small}]}], 
     FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{2.842835921642529, 0.0016823901371068178`}, {
       2.9766763927265933`, 0.1412003401298314}, {3.027959877882233, 
       0.28398420616484743`}, {3.0636600854669473`, 0.4277139137043242}, {
       3.0770365184591464`, 0.5663419898092841}, {3.0770365184591464`, 
       0.7472023542126898}, {2.896176154055741, 0.7472023542126898}, {
       2.1777927475811483`, 0.6255428103571179}, {2.0389206475123345`, 
       0.5810945697941428}, {2.0389206475123345`, 0.4002342053907371}, {
       2.219664177932967, -0.09043018220170283}, {
       2.400524542336372, -0.09043018220170283}}, SplineClosed -> True]]}, 
    {EdgeForm[{RGBColor[1, 0, 0], Opacity[0.8], Dashing[{Small, Small}]}], 
     FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{0.7668212905198225, 1.6918364639363328`}, {
       0.8407756899234734, 1.79959348241586}, {0.9225435972940772, 
       1.9241746374731636`}, {0.9225435972940772, 2.105035001876569}, {
       0.6293318291950983, 2.299304735470648}, {0.44847146479169264`, 
       2.299304735470648}, {0.019205442911982798`, 
       2.084862459226918}, {-0.09043018220170283, 
       1.8368650809859937`}, {-0.09043018220170283, 1.656004716582588}, {
       0.32309728983860964`, 1.6456877052479528`}, {0.5039576542420153, 
       1.6456877052479528`}}, SplineClosed -> True]]}, 
    {EdgeForm[{RGBColor[1, 0, 0], Opacity[0.8], Dashing[{Small, Small}]}], 
     FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{1.980790824030456, 1.1952998902328322`}, {
       2.1616511884338614`, 1.1952998902328322`}, {2.8426227312942567`, 
       1.396544445750956}, {2.891565372878493, 1.585922674608918}, {
       2.891565372878493, 1.7667830390123236`}, {2.7104095187730946`, 
       1.9900094566379554`}, {2.5295491543696893`, 1.9900094566379554`}, {
       2.2821859299282345`, 1.8994572636864104`}, {2.0200240041958373`, 
       1.602956728516594}, {1.9615647550232074`, 1.5124795019914516`}, {
       1.9615647550232074`, 1.331619137588046}}, SplineClosed -> True]]}, 
    {EdgeForm[{RGBColor[1, 0, 0], Opacity[0.8], Dashing[{Small, Small}]}], 
     FaceForm[None], 
     FilledCurveBox[
      BSplineCurve[{{1.756548480758522, 1.759546867639406}, {
       1.9558195154126048`, 1.9802868839782957`}, {1.9558195154126048`, 
       2.161147248381701}, {1.8290111445711421`, 2.464635666354903}, {
       1.6481507801677364`, 2.464635666354903}, {1.2877866077697904`, 
       2.2688970587339994`}, {1.271815182573614, 2.125042984199759}, {
       1.271815182573614, 1.9441826197963537`}, {1.348314373302123, 
       1.7444569406868098`}, {1.5291747377055287`, 1.7444569406868098`}}, 
       SplineClosed -> True]]}}, {
    {GrayLevel[0], Opacity[0.01], Dashing[{Small, Small}], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.656986367226935, 
      0.5949669155731379}}], 
     BezierCurveBox[{{2.525949298387337, 0.46632052545042924`}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.3471934271454384`, 1.5012961407612515`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.525949298387337, 0.46632052545042924`}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.11045418639754, 1.5125265463148911`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.525949298387337, 0.46632052545042924`}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.05199493722491, 1.4220493197897488`}},
      SplineDegree->2], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.7524057394408263`,
       0.09211257233880965}}], 
     BezierCurveBox[{{2.525949298387337, 0.46632052545042924`}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.292580743087015, 1.6568706096479315`}},
      SplineDegree->2], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.268222929782851, 
      0.535112628155415}}], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.2663618074761236`,
       0.31185053397217255`}}], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.129350829714037, 
      0.49066438759243997`}}], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.3100943601346695`,
       0.}}], LineBox[{{2.525949298387337, 0.46632052545042924`}, {
      2.9866063362574438`, 0.6567721720109869}}], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.9732299032652447`,
       0.5181440959060271}}], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.9375296956805306`,
       0.3744143883665503}}], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.8862462105248907`,
       0.23163052233153425`}}], 
     LineBox[{{2.525949298387337, 0.46632052545042924`}, {2.467535554940982, 
      0.08829088240643046}}], 
     BezierCurveBox[{{2.525949298387337, 0.46632052545042924`}, {
      2.2474487178906117`, 0.8357905806715211}, {2.05586477460368, 
      1.2111636294397945`}, {1.8642808313167487`, 1.5865366782080679`}, {
      1.865389333210902, 2.0707170661799985`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.525949298387337, 0.46632052545042924`}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.8011351906767903`, 1.6763528568106207`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.525949298387337, 0.46632052545042924`}, {
      2.2474487178906117`, 0.8357905806715211}, {2.05586477460368, 
      1.2111636294397945`}, {1.8642808313167487`, 1.5865366782080679`}, {
      1.7620742549484754`, 2.0481611680085887`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.8915721184409169, 
      0.5775984273529406}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.8168504841213395, 
      0.49300183233143985`}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.6763911083181197, 1.7822666461380356`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.7503455077217706, 1.8900236646175628`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.7018560700630186, 
      0.552121968771264}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      1.2552511663256838`, 0.7323388105162713}, {1.5450488799630784`, 
      0.9492861193585218}, {1.834846593600473, 1.1662334282007722`}, {
      2.0712210062321588`, 1.285730072434535}},
      SplineDegree->2], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      1.2552511663256838`, 0.7323388105162713}, {1.5450488799630784`, 
      0.9492861193585218}, {1.834846593600473, 1.1662334282007722`}, {
      2.05199493722491, 1.4220493197897488`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {1.0228567115359226`, 
      0.4646706155086253}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.2663618074761236`, 0.31185053397217255`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.4387445555038259`, 1.8348871228885126`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.9712191884332817, 
      0.6013116271970502}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5012294459882255, 1.7857116470187235`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.6707552609075872, 
      0.4076367786070474}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.5820952434204485, 
      0.7592077915714102}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.9609758493561241, 
      0.3859726244291638}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.5293755453499083, 
      0.6866833629373061}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.6810022418870744, 
      0.6674418241168851}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.3307476485988553, 
      0.390450577303305}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {1.1962984742488716`, 
      0.24459102122664256`}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.7761777959015744, 
      0.29945666800669424`}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.6542983649629392, 
      0.18189119544098598`}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {1.1466921860378676`, 
      0.3890317208411591}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.49764736984986224`, 
      0.30058879883853107`}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.9976395874996012, 
      0.2777349581959062}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {1.2136772413449555`, 
      0.5275079171557824}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.7914875986617644, 
      0.7706904273000346}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.5628465446719564, 
      0.4842032742149206}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5389016469933955, 2.2088745532689456`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.8869292709362215, 
      0.11477126736021992`}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.7720134664826582, 
      0.15237076653491843`}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3622453647753168`, 2.0346128019980565`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.8632869245528856, 
      0.22255171154172948`}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.5993852002617343, 
      0.9123209783884112}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {1.0186894300764524`, 
      0.16661644863426828`}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.10963562511368563`, 1.9944322770252152`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.40063564407648333`, 
      0.35424033911013775`}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {1.171851958080779, 
      0.7879891986751411}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3782167899714932`, 2.1784668765322968`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {0., 
      1.7464348987842908`}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.9256707084544533, 
      0.8663832978491918}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.4629665454737082, 
      0.5271825320345073}}], 
     BezierCurveBox[{{0.825649283791019, 0.6216875864569988}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.41477696493590055`, 2.016293227957468}},
      SplineDegree->2], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.45237654217544676`, 
      0.7340009029869594}}], 
     LineBox[{{0.825649283791019, 0.6216875864569988}, {0.736087805319456, 
      0.9122981244636258}}], 
     BezierCurveBox[{{2.656986367226935, 0.5949669155731379}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.0712210062321588`, 1.285730072434535}},
      SplineDegree->2], 
     BezierCurveBox[{{2.656986367226935, 0.5949669155731379}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.3471934271454384`, 1.5012961407612515`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.656986367226935, 0.5949669155731379}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.11045418639754, 1.5125265463148911`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.656986367226935, 0.5949669155731379}, {
      2.2474487178906117`, 0.8357905806715211}, {2.05586477460368, 
      1.2111636294397945`}, {1.8642808313167487`, 1.5865366782080679`}, {
      1.6661182985568193`, 1.8499770498411088`}},
      SplineDegree->2], 
     LineBox[{{2.656986367226935, 0.5949669155731379}, {2.7524057394408263`, 
      0.09211257233880965}}], 
     LineBox[{{2.656986367226935, 0.5949669155731379}, {2.268222929782851, 
      0.535112628155415}}], 
     LineBox[{{2.656986367226935, 0.5949669155731379}, {2.3100943601346695`, 
      0.}}], LineBox[{{2.656986367226935, 0.5949669155731379}, {
      2.9866063362574438`, 0.6567721720109869}}], 
     LineBox[{{2.656986367226935, 0.5949669155731379}, {2.9732299032652447`, 
      0.5181440959060271}}], 
     LineBox[{{2.656986367226935, 0.5949669155731379}, {2.9375296956805306`, 
      0.3744143883665503}}], 
     LineBox[{{2.656986367226935, 0.5949669155731379}, {2.8862462105248907`, 
      0.23163052233153425`}}], 
     BezierCurveBox[{{2.656986367226935, 0.5949669155731379}, {
      2.2474487178906117`, 0.8357905806715211}, {2.05586477460368, 
      1.2111636294397945`}, {1.8642808313167487`, 1.5865366782080679`}, {
      1.865389333210902, 2.0707170661799985`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.656986367226935, 0.5949669155731379}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.8011351906767903`, 1.6763528568106207`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.656986367226935, 0.5949669155731379}, {
      2.4340113906029304`, 0.7230487620771147}, {2.389780170713017, 
      0.9794469954439965}, {2.3455489508231033`, 1.2358452288108783`}, {
      2.752192549092554, 1.4869746279526588`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.656986367226935, 0.5949669155731379}, {
      2.2474487178906117`, 0.8357905806715211}, {2.05586477460368, 
      1.2111636294397945`}, {1.8642808313167487`, 1.5865366782080679`}, {
      1.7620742549484754`, 2.0481611680085887`}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.8168504841213395, 
      0.49300183233143985`}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.6763911083181197, 1.7822666461380356`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.7503455077217706, 1.8900236646175628`}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.7018560700630186, 
      0.552121968771264}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      1.2552511663256838`, 0.7323388105162713}, {1.5450488799630784`, 
      0.9492861193585218}, {1.834846593600473, 1.1662334282007722`}, {
      2.0712210062321588`, 1.285730072434535}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      1.2552511663256838`, 0.7323388105162713}, {1.5450488799630784`, 
      0.9492861193585218}, {1.834846593600473, 1.1662334282007722`}, {
      2.11045418639754, 1.5125265463148911`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.6661182985568193`, 1.8499770498411088`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      1.2552511663256838`, 0.7323388105162713}, {1.5450488799630784`, 
      0.9492861193585218}, {1.834846593600473, 1.1662334282007722`}, {
      2.05199493722491, 1.4220493197897488`}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {1.0228567115359226`, 
      0.4646706155086253}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.2663618074761236`, 0.31185053397217255`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.4387445555038259`, 1.8348871228885126`}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.9712191884332817, 
      0.6013116271970502}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.6707552609075872, 
      0.4076367786070474}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.5820952434204485, 
      0.7592077915714102}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.9609758493561241, 
      0.3859726244291638}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.3100943601346695`, 0.}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.6810022418870744, 
      0.6674418241168851}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.3307476485988553, 
      0.390450577303305}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {1.1962984742488716`, 
      0.24459102122664256`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.7761777959015744, 
      0.29945666800669424`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.6542983649629392, 
      0.18189119544098598`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {1.1466921860378676`, 
      0.3890317208411591}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.49764736984986224`,
       0.30058879883853107`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.9976395874996012, 
      0.2777349581959062}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {1.2136772413449555`, 
      0.5275079171557824}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.7914875986617644, 
      0.7706904273000346}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.8869292709362215, 
      0.11477126736021992`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.7720134664826582, 
      0.15237076653491843`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {1.1207817706600196`, 
      0.5674742443296346}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3622453647753168`, 2.0346128019980565`}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.5993852002617343, 
      0.9123209783884112}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {1.0186894300764524`, 
      0.16661644863426828`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.40063564407648333`,
       0.35424033911013775`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {1.171851958080779, 
      0.7879891986751411}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3782167899714932`, 2.1784668765322968`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.9256707084544533, 
      0.8663832978491918}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {1.017862599670702, 
      0.7434837673573133}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.4629665454737082, 
      0.5271825320345073}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.31395969740398566`,
       0.697473164285987}}], 
     BezierCurveBox[{{0.8915721184409169, 0.5775984273529406}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.41477696493590055`, 2.016293227957468}},
      SplineDegree->2], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.45237654217544676`,
       0.7340009029869594}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.5065024726713317, 
      0.17481830117642405`}}], 
     LineBox[{{0.8915721184409169, 0.5775984273529406}, {0.736087805319456, 
      0.9122981244636258}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.6763911083181197, 1.7822666461380356`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.7503455077217706, 1.8900236646175628`}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.7018560700630186,
       0.552121968771264}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.6661182985568193`, 1.8499770498411088`}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {
      1.0228567115359226`, 0.4646706155086253}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.9712191884332817,
       0.6013116271970502}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5012294459882255, 1.7857116470187235`}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.6707552609075872,
       0.4076367786070474}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.5820952434204485,
       0.7592077915714102}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.9609758493561241,
       0.3859726244291638}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.7761777959015744,
       0.29945666800669424`}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {
      1.1466921860378676`, 0.3890317208411591}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.49764736984986224`, 0.30058879883853107`}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.9976395874996012,
       0.2777349581959062}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {
      1.2136772413449555`, 0.5275079171557824}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.8869292709362215,
       0.11477126736021992`}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.7720134664826582,
       0.15237076653491843`}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {
      1.1207817706600196`, 0.5674742443296346}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3622453647753168`, 2.0346128019980565`}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.8632869245528856,
       0.22255171154172948`}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.23094587299667868`, 1.8803899580617967`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.9256707084544533,
       0.8663832978491918}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.31395969740398566`, 0.697473164285987}}], 
     BezierCurveBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.41477696493590055`, 2.016293227957468}},
      SplineDegree->2], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.45237654217544676`, 0.7340009029869594}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {0.5065024726713317,
       0.17481830117642405`}}], 
     LineBox[{{0.8168504841213395, 0.49300183233143985`}, {
      0.23631783864242695`, 0.57511492230213}}], 
     LineBox[{{0.6763911083181197, 1.7822666461380356`}, {0.7503455077217706, 
      1.8900236646175628`}}], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.7018560700630186, 0.552121968771264}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      1.0557478934748947`, 1.746037794776353}, {1.414140648841553, 
      1.6412292224406082`}, {1.7725334042082117`, 1.5364206501048636`}, {
      2.0712210062321588`, 1.285730072434535}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      1.0557478934748947`, 1.746037794776353}, {1.414140648841553, 
      1.6412292224406082`}, {1.7725334042082117`, 1.5364206501048636`}, {
      2.3471934271454384`, 1.5012961407612515`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      1.0557478934748947`, 1.746037794776353}, {1.414140648841553, 
      1.6412292224406082`}, {1.7725334042082117`, 1.5364206501048636`}, {
      2.05199493722491, 1.4220493197897488`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.0228567115359226`, 0.4646706155086253}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.9752658227067962, 1.5143614548385618`}, {1.3831061750540123`, 
      1.1805371391836836`}, {1.7909465274012282`, 0.8467128235288055}, {
      2.268222929782851, 0.535112628155415}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.8554069907585324, 1.9511598444890978`}, {1.0717655408319864`, 
      1.9557701114918546`}, {1.2881240909054401`, 1.9603803784946114`}, {
      1.4387445555038259`, 1.8348871228885126`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.9712191884332817, 0.6013116271970502}},
      SplineDegree->2], 
     LineBox[{{0.6763911083181197, 1.7822666461380356`}, {0.5012294459882255, 
      1.7857116470187235`}}], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.6707552609075872, 0.4076367786070474}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.5820952434204485, 0.7592077915714102}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.9609758493561241, 0.3859726244291638}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.3307476485988553, 0.390450577303305}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.1962984742488716`, 0.24459102122664256`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.7761777959015744, 0.29945666800669424`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.6542983649629392, 0.18189119544098598`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.9976395874996012, 0.2777349581959062}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.5628465446719564, 0.4842032742149206}},
      SplineDegree->2], 
     LineBox[{{0.6763911083181197, 1.7822666461380356`}, {0.8321134150923744, 
      2.0146048196748665`}}], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.8869292709362215, 0.11477126736021992`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.0186894300764524`, 0.16661644863426828`}},
      SplineDegree->2], 
     LineBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.10963562511368563`, 1.9944322770252152`}}], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.40063564407648333`, 0.35424033911013775`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.6490970652665649, 0.07805796477938409}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.8554069907585324, 1.9511598444890978`}, {1.0717655408319864`, 
      1.9557701114918546`}, {1.2881240909054401`, 1.9603803784946114`}, {
      1.3782167899714932`, 2.1784668765322968`}},
      SplineDegree->2], 
     LineBox[{{0.6763911083181197, 1.7822666461380356`}, {0.5681058954943687, 
      2.042753013081761}}], 
     LineBox[{{0.6763911083181197, 1.7822666461380356`}, {0., 
      1.7464348987842908`}}], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.9256707084544533, 0.8663832978491918}},
      SplineDegree->2], 
     LineBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.34662967007095946`, 2.0462783003793907`}}], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.017862599670702, 0.7434837673573133}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.8554069907585324, 1.9511598444890978`}, {1.0717655408319864`, 
      1.9557701114918546`}, {1.2881240909054401`, 1.9603803784946114`}, {
      1.7620742549484754`, 2.0481611680085887`}},
      SplineDegree->2], 
     LineBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.41477696493590055`, 2.016293227957468}}], 
     BezierCurveBox[{{0.6763911083181197, 1.7822666461380356`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.736087805319456, 0.9122981244636258}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      1.0557478934748947`, 1.746037794776353}, {1.414140648841553, 
      1.6412292224406082`}, {1.7725334042082117`, 1.5364206501048636`}, {
      2.0712210062321588`, 1.285730072434535}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      1.0557478934748947`, 1.746037794776353}, {1.414140648841553, 
      1.6412292224406082`}, {1.7725334042082117`, 1.5364206501048636`}, {
      2.11045418639754, 1.5125265463148911`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.8554069907585324, 1.9511598444890978`}, {1.0717655408319864`, 
      1.9557701114918546`}, {1.2881240909054401`, 1.9603803784946114`}, {
      1.6661182985568193`, 1.8499770498411088`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      1.0557478934748947`, 1.746037794776353}, {1.414140648841553, 
      1.6412292224406082`}, {1.7725334042082117`, 1.5364206501048636`}, {
      2.05199493722491, 1.4220493197897488`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.0228567115359226`, 0.4646706155086253}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      1.0557478934748947`, 1.746037794776353}, {1.414140648841553, 
      1.6412292224406082`}, {1.7725334042082117`, 1.5364206501048636`}, {
      2.292580743087015, 1.6568706096479315`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.9712191884332817, 0.6013116271970502}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.6707552609075872, 0.4076367786070474}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.9752658227067962, 1.5143614548385618`}, {1.3831061750540123`, 
      1.1805371391836836`}, {1.7909465274012282`, 0.8467128235288055}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.9609758493561241, 0.3859726244291638}},
      SplineDegree->2], 
     LineBox[{{0.7503455077217706, 1.8900236646175628`}, {0.4135274720403125, 
      1.7361178874496557`}}], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.5293755453499083, 0.6866833629373061}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.7761777959015744, 0.29945666800669424`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.1466921860378676`, 0.3890317208411591}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.49764736984986224`, 0.30058879883853107`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.9976395874996012, 0.2777349581959062}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.8554069907585324, 1.9511598444890978`}, {1.0717655408319864`, 
      1.9557701114918546`}, {1.2881240909054401`, 1.9603803784946114`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     LineBox[{{0.7503455077217706, 1.8900236646175628`}, {0.5389016469933955, 
      2.2088745532689456`}}], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.7720134664826582, 0.15237076653491843`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.8554069907585324, 1.9511598444890978`}, {1.0717655408319864`, 
      1.9557701114918546`}, {1.2881240909054401`, 1.9603803784946114`}, {
      1.3622453647753168`, 2.0346128019980565`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.8632869245528856, 0.22255171154172948`}},
      SplineDegree->2], 
     LineBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.23094587299667868`, 1.8803899580617967`}}], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.171851958080779, 0.7879891986751411}},
      SplineDegree->2], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.8554069907585324, 1.9511598444890978`}, {1.0717655408319864`, 
      1.9557701114918546`}, {1.2881240909054401`, 1.9603803784946114`}, {
      1.3782167899714932`, 2.1784668765322968`}},
      SplineDegree->2], 
     LineBox[{{0.7503455077217706, 1.8900236646175628`}, {0.5681058954943687, 
      2.042753013081761}}], 
     LineBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.34662967007095946`, 2.0462783003793907`}}], 
     LineBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.41477696493590055`, 2.016293227957468}}], 
     BezierCurveBox[{{0.7503455077217706, 1.8900236646175628`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.45237654217544676`, 0.7340009029869594}},
      SplineDegree->2], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {1.0228567115359226`, 
      0.4646706155086253}}], 
     BezierCurveBox[{{0.7018560700630186, 0.552121968771264}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.268222929782851, 0.535112628155415}},
      SplineDegree->2], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.9712191884332817, 
      0.6013116271970502}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.6707552609075872, 
      0.4076367786070474}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.5820952434204485, 
      0.7592077915714102}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.9609758493561241, 
      0.3859726244291638}}], 
     BezierCurveBox[{{0.7018560700630186, 0.552121968771264}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.5293755453499083, 
      0.6866833629373061}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.6810022418870744, 
      0.6674418241168851}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.3307476485988553, 
      0.390450577303305}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.7761777959015744, 
      0.29945666800669424`}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.49764736984986224`, 
      0.30058879883853107`}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {1.2136772413449555`, 
      0.5275079171557824}}], 
     BezierCurveBox[{{0.7018560700630186, 0.552121968771264}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.7914875986617644, 
      0.7706904273000346}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.5628465446719564, 
      0.4842032742149206}}], 
     BezierCurveBox[{{0.7018560700630186, 0.552121968771264}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.8869292709362215, 
      0.11477126736021992`}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.8632869245528856, 
      0.22255171154172948`}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.5993852002617343, 
      0.9123209783884112}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.40063564407648333`, 
      0.35424033911013775`}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {1.171851958080779, 
      0.7879891986751411}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.9256707084544533, 
      0.8663832978491918}}], 
     BezierCurveBox[{{0.7018560700630186, 0.552121968771264}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.34662967007095946`, 2.0462783003793907`}},
      SplineDegree->2], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.4629665454737082, 
      0.5271825320345073}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.31395969740398566`, 
      0.697473164285987}}], 
     LineBox[{{0.7018560700630186, 0.552121968771264}, {0.5065024726713317, 
      0.17481830117642405`}}], 
     LineBox[{{2.0712210062321588`, 1.285730072434535}, {2.3471934271454384`, 
      1.5012961407612515`}}], 
     LineBox[{{2.0712210062321588`, 1.285730072434535}, {2.11045418639754, 
      1.5125265463148911`}}], 
     LineBox[{{2.0712210062321588`, 1.285730072434535}, {2.5150569067214588`, 
      1.4704294144508645`}}], 
     LineBox[{{2.0712210062321588`, 1.285730072434535}, {2.292580743087015, 
      1.6568706096479315`}}], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      2.3455489508231033`, 1.2358452288108783`}, {2.389780170713017, 
      0.9794469954439965}, {2.4340113906029304`, 0.7230487620771147}, {
      2.2663618074761236`, 0.31185053397217255`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.4387445555038259`, 1.8348871228885126`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.9712191884332817, 0.6013116271970502}},
      SplineDegree->2], 
     LineBox[{{2.0712210062321588`, 1.285730072434535}, {2.372616112129937, 
      1.8090270814847076`}}], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.6707552609075872, 0.4076367786070474}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      2.3455489508231033`, 1.2358452288108783`}, {2.389780170713017, 
      0.9794469954439965}, {2.4340113906029304`, 0.7230487620771147}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.7725334042082117`, 1.5364206501048636`}, {1.414140648841553, 
      1.6412292224406082`}, {1.0557478934748947`, 1.746037794776353}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.1962984742488716`, 0.24459102122664256`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.1466921860378676`, 0.3890317208411591}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.9976395874996012, 0.2777349581959062}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.2136772413449555`, 0.5275079171557824}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.7914875986617644, 0.7706904273000346}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.8869292709362215, 0.11477126736021992`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.0186894300764524`, 0.16661644863426828`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.9256707084544533, 0.8663832978491918}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.017862599670702, 0.7434837673573133}},
      SplineDegree->2], 
     BezierCurveBox[{{2.0712210062321588`, 1.285730072434535}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.4629665454737082, 0.5271825320345073}},
      SplineDegree->2], 
     LineBox[{{2.3471934271454384`, 1.5012961407612515`}, {2.11045418639754, 
      1.5125265463148911`}}], 
     LineBox[{{2.3471934271454384`, 1.5012961407612515`}, {
      2.5150569067214588`, 1.4704294144508645`}}], 
     BezierCurveBox[{{2.3471934271454384`, 1.5012961407612515`}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.6661182985568193`, 1.8499770498411088`}},
      SplineDegree->2], 
     LineBox[{{2.3471934271454384`, 1.5012961407612515`}, {2.292580743087015, 
      1.6568706096479315`}}], 
     BezierCurveBox[{{2.3471934271454384`, 1.5012961407612515`}, {
      2.3455489508231033`, 1.2358452288108783`}, {2.389780170713017, 
      0.9794469954439965}, {2.4340113906029304`, 0.7230487620771147}, {
      2.2663618074761236`, 0.31185053397217255`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.3471934271454384`, 1.5012961407612515`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.2136772413449555`, 0.5275079171557824}},
      SplineDegree->2], 
     BezierCurveBox[{{2.3471934271454384`, 1.5012961407612515`}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.3471934271454384`, 1.5012961407612515`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.171851958080779, 0.7879891986751411}},
      SplineDegree->2], 
     LineBox[{{2.3471934271454384`, 1.5012961407612515`}, {
      2.8011351906767903`, 1.6763528568106207`}}], 
     LineBox[{{2.3471934271454384`, 1.5012961407612515`}, {2.619979336571392, 
      1.8995792744362525`}}], 
     BezierCurveBox[{{2.11045418639754, 1.5125265463148911`}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.6661182985568193`, 1.8499770498411088`}},
      SplineDegree->2], 
     LineBox[{{2.11045418639754, 1.5125265463148911`}, {2.05199493722491, 
      1.4220493197897488`}}], 
     BezierCurveBox[{{2.11045418639754, 1.5125265463148911`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.0228567115359226`, 0.4646706155086253}},
      SplineDegree->2], 
     LineBox[{{2.11045418639754, 1.5125265463148911`}, {2.292580743087015, 
      1.6568706096479315`}}], 
     BezierCurveBox[{{2.11045418639754, 1.5125265463148911`}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.4387445555038259`, 1.8348871228885126`}},
      SplineDegree->2], 
     LineBox[{{2.11045418639754, 1.5125265463148911`}, {2.372616112129937, 
      1.8090270814847076`}}], 
     BezierCurveBox[{{2.11045418639754, 1.5125265463148911`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.6707552609075872, 0.4076367786070474}},
      SplineDegree->2], 
     BezierCurveBox[{{2.11045418639754, 1.5125265463148911`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.2136772413449555`, 0.5275079171557824}},
      SplineDegree->2], 
     BezierCurveBox[{{2.11045418639754, 1.5125265463148911`}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.11045418639754, 1.5125265463148911`}, {
      1.7725334042082117`, 1.5364206501048636`}, {1.414140648841553, 
      1.6412292224406082`}, {1.0557478934748947`, 1.746037794776353}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     LineBox[{{2.5150569067214588`, 1.4704294144508645`}, {2.05199493722491, 
      1.4220493197897488`}}], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.7279355522292914`, 1.7992257151118531`}, {1.8882518385640719`, 
      1.6914806340100703`}, {2.048568124898852, 1.5837355529082875`}, {
      2.05199493722491, 1.4220493197897488`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.8642808313167487`, 1.5865366782080679`}, {2.05586477460368, 
      1.2111636294397945`}, {2.2474487178906117`, 0.8357905806715211}, {
      2.2663618074761236`, 0.31185053397217255`}},
      SplineDegree->2], 
     LineBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.4387445555038259`, 1.8348871228885126`}}], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.9712191884332817, 0.6013116271970502}},
      SplineDegree->2], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.5820952434204485, 0.7592077915714102}},
      SplineDegree->2], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.8642808313167487`, 1.5865366782080679`}, {2.05586477460368, 
      1.2111636294397945`}, {2.2474487178906117`, 0.8357905806715211}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      1.1466921860378676`, 0.3890317208411591}},
      SplineDegree->2], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      1.2136772413449555`, 0.5275079171557824}},
      SplineDegree->2], 
     LineBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.5003436030507973`, 2.0079826741038116`}}], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.2881240909054401`, 1.9603803784946114`}, {1.0717655408319864`, 
      1.9557701114918546`}, {0.8554069907585324, 1.9511598444890978`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.2881240909054401`, 1.9603803784946114`}, {1.0717655408319864`, 
      1.9557701114918546`}, {0.8554069907585324, 1.9511598444890978`}, {
      0.5389016469933955, 2.2088745532689456`}},
      SplineDegree->2], 
     LineBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.3622453647753168`, 2.0346128019980565`}}], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.8632869245528856, 0.22255171154172948`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      1.171851958080779, 0.7879891986751411}},
      SplineDegree->2], 
     LineBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.3782167899714932`, 2.1784668765322968`}}], 
     LineBox[{{1.6661182985568193`, 1.8499770498411088`}, {1.865389333210902, 
      2.0707170661799985`}}], 
     BezierCurveBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.7279355522292914`, 1.7992257151118531`}, {1.8882518385640719`, 
      1.6914806340100703`}, {2.048568124898852, 1.5837355529082875`}, {
      2.752192549092554, 1.4869746279526588`}},
      SplineDegree->2], 
     LineBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.7620742549484754`, 2.0481611680085887`}}], 
     LineBox[{{1.6661182985568193`, 1.8499770498411088`}, {
      1.7385809623694393`, 2.3742054841532005`}}], 
     BezierCurveBox[{{2.05199493722491, 1.4220493197897488`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.0228567115359226`, 0.4646706155086253}},
      SplineDegree->2], 
     BezierCurveBox[{{2.05199493722491, 1.4220493197897488`}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.4387445555038259`, 1.8348871228885126`}},
      SplineDegree->2], 
     LineBox[{{2.05199493722491, 1.4220493197897488`}, {2.372616112129937, 
      1.8090270814847076`}}], 
     BezierCurveBox[{{2.05199493722491, 1.4220493197897488`}, {
      2.3455489508231033`, 1.2358452288108783`}, {2.389780170713017, 
      0.9794469954439965}, {2.4340113906029304`, 0.7230487620771147}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.05199493722491, 1.4220493197897488`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.9609758493561241, 0.3859726244291638}},
      SplineDegree->2], 
     BezierCurveBox[{{2.05199493722491, 1.4220493197897488`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.1962984742488716`, 0.24459102122664256`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.05199493722491, 1.4220493197897488`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      1.2136772413449555`, 0.5275079171557824}},
      SplineDegree->2], 
     BezierCurveBox[{{2.05199493722491, 1.4220493197897488`}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     LineBox[{{2.7524057394408263`, 0.09211257233880965}, {2.467535554940982, 
      0.08829088240643046}}], 
     BezierCurveBox[{{1.0228567115359226`, 0.4646706155086253}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.4387445555038259`, 1.8348871228885126`}},
      SplineDegree->2], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.9712191884332817, 
      0.6013116271970502}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.5820952434204485, 
      0.7592077915714102}}], 
     BezierCurveBox[{{1.0228567115359226`, 0.4646706155086253}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.9609758493561241, 
      0.3859726244291638}}], 
     BezierCurveBox[{{1.0228567115359226`, 0.4646706155086253}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.6810022418870744, 
      0.6674418241168851}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {1.1962984742488716`,
       0.24459102122664256`}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.7761777959015744, 
      0.29945666800669424`}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.6542983649629392, 
      0.18189119544098598`}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {1.1466921860378676`,
       0.3890317208411591}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.9976395874996012, 
      0.2777349581959062}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.5628465446719564, 
      0.4842032742149206}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.7720134664826582, 
      0.15237076653491843`}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {1.1207817706600196`,
       0.5674742443296346}}], 
     BezierCurveBox[{{1.0228567115359226`, 0.4646706155086253}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3622453647753168`, 2.0346128019980565`}},
      SplineDegree->2], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {1.0186894300764524`,
       0.16661644863426828`}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.6490970652665649, 
      0.07805796477938409}}], 
     BezierCurveBox[{{1.0228567115359226`, 0.4646706155086253}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.9256707084544533, 
      0.8663832978491918}}], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {1.017862599670702, 
      0.7434837673573133}}], 
     BezierCurveBox[{{1.0228567115359226`, 0.4646706155086253}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.7620742549484754`, 2.0481611680085887`}},
      SplineDegree->2], 
     LineBox[{{1.0228567115359226`, 0.4646706155086253}, {0.5065024726713317, 
      0.17481830117642405`}}], 
     LineBox[{{2.292580743087015, 1.6568706096479315`}, {2.372616112129937, 
      1.8090270814847076`}}], 
     BezierCurveBox[{{2.292580743087015, 1.6568706096479315`}, {
      1.834846593600473, 1.1662334282007722`}, {1.5450488799630784`, 
      0.9492861193585218}, {1.2552511663256838`, 0.7323388105162713}, {
      0.5993852002617343, 0.9123209783884112}},
      SplineDegree->2], 
     BezierCurveBox[{{2.292580743087015, 1.6568706096479315`}, {
      2.3455489508231033`, 1.2358452288108783`}, {2.389780170713017, 
      0.9794469954439965}, {2.4340113906029304`, 0.7230487620771147}, {
      2.467535554940982, 0.08829088240643046}},
      SplineDegree->2], 
     BezierCurveBox[{{2.292580743087015, 1.6568706096479315`}, {
      2.048568124898852, 1.5837355529082875`}, {1.8882518385640719`, 
      1.6914806340100703`}, {1.7279355522292914`, 1.7992257151118531`}, {
      1.7620742549484754`, 2.0481611680085887`}},
      SplineDegree->2], 
     LineBox[{{2.292580743087015, 1.6568706096479315`}, {2.619979336571392, 
      1.8995792744362525`}}], 
     BezierCurveBox[{{2.268222929782851, 0.535112628155415}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      0.9712191884332817, 0.6013116271970502}},
      SplineDegree->2], 
     BezierCurveBox[{{2.268222929782851, 0.535112628155415}, {
      1.7909465274012282`, 0.8467128235288055}, {1.3831061750540123`, 
      1.1805371391836836`}, {0.9752658227067962, 1.5143614548385618`}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.268222929782851, 0.535112628155415}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      0.5293755453499083, 0.6866833629373061}},
      SplineDegree->2], 
     BezierCurveBox[{{2.268222929782851, 0.535112628155415}, {
      1.7909465274012282`, 0.8467128235288055}, {1.3831061750540123`, 
      1.1805371391836836`}, {0.9752658227067962, 1.5143614548385618`}, {
      0.23094587299667868`, 1.8803899580617967`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.2663618074761236`, 0.31185053397217255`}, {
      2.2474487178906117`, 0.8357905806715211}, {2.05586477460368, 
      1.2111636294397945`}, {1.8642808313167487`, 1.5865366782080679`}, {
      1.4387445555038259`, 1.8348871228885126`}},
      SplineDegree->2], 
     LineBox[{{2.2663618074761236`, 0.31185053397217255`}, {2.129350829714037,
       0.49066438759243997`}}], 
     BezierCurveBox[{{2.2663618074761236`, 0.31185053397217255`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      0.9609758493561241, 0.3859726244291638}},
      SplineDegree->2], 
     BezierCurveBox[{{2.2663618074761236`, 0.31185053397217255`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      1.1962984742488716`, 0.24459102122664256`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.2663618074761236`, 0.31185053397217255`}, {
      2.2474487178906117`, 0.8357905806715211}, {2.05586477460368, 
      1.2111636294397945`}, {1.8642808313167487`, 1.5865366782080679`}, {
      1.3622453647753168`, 2.0346128019980565`}},
      SplineDegree->2], 
     LineBox[{{2.2663618074761236`, 0.31185053397217255`}, {2.467535554940982,
       0.08829088240643046}}], 
     BezierCurveBox[{{2.2663618074761236`, 0.31185053397217255`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      1.171851958080779, 0.7879891986751411}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.9712191884332817, 0.6013116271970502}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.6707552609075872, 0.4076367786070474}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      1.1962984742488716`, 0.24459102122664256`}},
      SplineDegree->2], 
     LineBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.5003436030507973`, 2.0079826741038116`}}], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.2881240909054401`, 1.9603803784946114`}, {1.0717655408319864`, 
      1.9557701114918546`}, {0.8554069907585324, 1.9511598444890978`}, {
      0.5389016469933955, 2.2088745532689456`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      1.1207817706600196`, 0.5674742443296346}},
      SplineDegree->2], 
     LineBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3622453647753168`, 2.0346128019980565`}}], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.5993852002617343, 0.9123209783884112}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.2881240909054401`, 1.9603803784946114`}, {1.0717655408319864`, 
      1.9557701114918546`}, {0.8554069907585324, 1.9511598444890978`}, {
      0.23094587299667868`, 1.8803899580617967`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      1.171851958080779, 0.7879891986751411}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.6490970652665649, 0.07805796477938409}},
      SplineDegree->2], 
     LineBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3782167899714932`, 2.1784668765322968`}}], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      1.017862599670702, 0.7434837673573133}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.4629665454737082, 0.5271825320345073}},
      SplineDegree->2], 
     BezierCurveBox[{{1.4387445555038259`, 1.8348871228885126`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.23631783864242695`, 0.57511492230213}},
      SplineDegree->2], 
     BezierCurveBox[{{0.9712191884332817, 0.6013116271970502}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5012294459882255, 1.7857116470187235`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.9712191884332817, 0.6013116271970502}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.6810022418870744, 
      0.6674418241168851}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {1.1962984742488716`, 
      0.24459102122664256`}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.7761777959015744, 
      0.29945666800669424`}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.6542983649629392, 
      0.18189119544098598`}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {1.1466921860378676`, 
      0.3890317208411591}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.9976395874996012, 
      0.2777349581959062}}], 
     BezierCurveBox[{{0.9712191884332817, 0.6013116271970502}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.7914875986617644, 
      0.7706904273000346}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.5628465446719564, 
      0.4842032742149206}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.8632869245528856, 
      0.22255171154172948`}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {1.0186894300764524`, 
      0.16661644863426828`}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.40063564407648333`,
       0.35424033911013775`}}], 
     BezierCurveBox[{{0.9712191884332817, 0.6013116271970502}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.9256707084544533, 
      0.8663832978491918}}], 
     BezierCurveBox[{{0.9712191884332817, 0.6013116271970502}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.34662967007095946`, 2.0462783003793907`}},
      SplineDegree->2], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.45237654217544676`,
       0.7340009029869594}}], 
     LineBox[{{0.9712191884332817, 0.6013116271970502}, {0.23631783864242695`,
       0.57511492230213}}], 
     LineBox[{{2.372616112129937, 1.8090270814847076`}, {2.619979336571392, 
      1.8995792744362525`}}], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.6707552609075872, 0.4076367786070474}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.9752658227067962, 1.5143614548385618`}, {1.3831061750540123`, 
      1.1805371391836836`}, {1.7909465274012282`, 0.8467128235288055}, {
      2.129350829714037, 0.49066438759243997`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.5293755453499083, 0.6866833629373061}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.6810022418870744, 0.6674418241168851}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.7761777959015744, 0.29945666800669424`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.6542983649629392, 0.18189119544098598`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.1466921860378676`, 0.3890317208411591}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.9976395874996012, 0.2777349581959062}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.2136772413449555`, 0.5275079171557824}},
      SplineDegree->2], 
     LineBox[{{0.5012294459882255, 1.7857116470187235`}, {0.8321134150923744, 
      2.0146048196748665`}}], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.8869292709362215, 0.11477126736021992`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.1207817706600196`, 0.5674742443296346}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.5993852002617343, 0.9123209783884112}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.0186894300764524`, 0.16661644863426828`}},
      SplineDegree->2], 
     LineBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.23094587299667868`, 1.8803899580617967`}}], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.6490970652665649, 0.07805796477938409}},
      SplineDegree->2], 
     LineBox[{{0.5012294459882255, 1.7857116470187235`}, {0.5681058954943687, 
      2.042753013081761}}], 
     LineBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.34662967007095946`, 2.0462783003793907`}}], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.31395969740398566`, 0.697473164285987}},
      SplineDegree->2], 
     LineBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.41477696493590055`, 2.016293227957468}}], 
     BezierCurveBox[{{0.5012294459882255, 1.7857116470187235`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.736087805319456, 0.9122981244636258}},
      SplineDegree->2], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.9609758493561241, 
      0.3859726244291638}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.7761777959015744, 
      0.29945666800669424`}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.6542983649629392, 
      0.18189119544098598`}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.49764736984986224`,
       0.30058879883853107`}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.9976395874996012, 
      0.2777349581959062}}], 
     BezierCurveBox[{{0.6707552609075872, 0.4076367786070474}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.7914875986617644, 
      0.7706904273000346}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.5628465446719564, 
      0.4842032742149206}}], 
     BezierCurveBox[{{0.6707552609075872, 0.4076367786070474}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.8632869245528856, 
      0.22255171154172948`}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {1.0186894300764524`, 
      0.16661644863426828`}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.40063564407648333`,
       0.35424033911013775`}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {1.171851958080779, 
      0.7879891986751411}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.4629665454737082, 
      0.5271825320345073}}], 
     LineBox[{{0.6707552609075872, 0.4076367786070474}, {0.45237654217544676`,
       0.7340009029869594}}], 
     BezierCurveBox[{{0.5820952434204485, 0.7592077915714102}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.5293755453499083, 
      0.6866833629373061}}], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.6810022418870744, 
      0.6674418241168851}}], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.3307476485988553, 
      0.390450577303305}}], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.7914875986617644, 
      0.7706904273000346}}], 
     BezierCurveBox[{{0.5820952434204485, 0.7592077915714102}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5389016469933955, 2.2088745532689456`}},
      SplineDegree->2], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.7720134664826582, 
      0.15237076653491843`}}], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {1.1207817706600196`, 
      0.5674742443296346}}], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.40063564407648333`,
       0.35424033911013775`}}], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {1.171851958080779, 
      0.7879891986751411}}], 
     BezierCurveBox[{{0.5820952434204485, 0.7592077915714102}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {0., 
      1.7464348987842908`}},
      SplineDegree->2], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.45237654217544676`,
       0.7340009029869594}}], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.5065024726713317, 
      0.17481830117642405`}}], 
     LineBox[{{0.5820952434204485, 0.7592077915714102}, {0.736087805319456, 
      0.9122981244636258}}], 
     BezierCurveBox[{{2.129350829714037, 0.49066438759243997`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      0.6810022418870744, 0.6674418241168851}},
      SplineDegree->2], 
     BezierCurveBox[{{2.129350829714037, 0.49066438759243997`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      0.7761777959015744, 0.29945666800669424`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.129350829714037, 0.49066438759243997`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      1.1466921860378676`, 0.3890317208411591}},
      SplineDegree->2], 
     BezierCurveBox[{{2.129350829714037, 0.49066438759243997`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      0.9976395874996012, 0.2777349581959062}},
      SplineDegree->2], 
     BezierCurveBox[{{2.129350829714037, 0.49066438759243997`}, {
      1.7909465274012282`, 0.8467128235288055}, {1.3831061750540123`, 
      1.1805371391836836`}, {0.9752658227067962, 1.5143614548385618`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.129350829714037, 0.49066438759243997`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      1.1207817706600196`, 0.5674742443296346}},
      SplineDegree->2], 
     BezierCurveBox[{{2.129350829714037, 0.49066438759243997`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      1.0186894300764524`, 0.16661644863426828`}},
      SplineDegree->2], 
     BezierCurveBox[{{2.129350829714037, 0.49066438759243997`}, {
      1.8968863375228313`, 0.4156292143970947}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.253663378114418, 0.4777922290038468}, {
      0.736087805319456, 0.9122981244636258}},
      SplineDegree->2], 
     BezierCurveBox[{{0.9609758493561241, 0.3859726244291638}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.4135274720403125, 1.7361178874496557`}},
      SplineDegree->2], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.5293755453499083, 
      0.6866833629373061}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.7761777959015744, 
      0.29945666800669424`}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.6542983649629392, 
      0.18189119544098598`}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {1.1466921860378676`, 
      0.3890317208411591}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.9976395874996012, 
      0.2777349581959062}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {1.2136772413449555`, 
      0.5275079171557824}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.7914875986617644, 
      0.7706904273000346}}], 
     BezierCurveBox[{{0.9609758493561241, 0.3859726244291638}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.8869292709362215, 
      0.11477126736021992`}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {1.1207817706600196`, 
      0.5674742443296346}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.8632869245528856, 
      0.22255171154172948`}}], 
     BezierCurveBox[{{0.9609758493561241, 0.3859726244291638}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3782167899714932`, 2.1784668765322968`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.9609758493561241, 0.3859726244291638}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.45237654217544676`,
       0.7340009029869594}}], 
     LineBox[{{0.9609758493561241, 0.3859726244291638}, {0.5065024726713317, 
      0.17481830117642405`}}], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.5293755453499083, 0.6866833629373061}},
      SplineDegree->2], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.1466921860378676`, 0.3890317208411591}},
      SplineDegree->2], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.49764736984986224`, 0.30058879883853107`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      1.2136772413449555`, 0.5275079171557824}},
      SplineDegree->2], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.5628465446719564, 0.4842032742149206}},
      SplineDegree->2], 
     LineBox[{{0.4135274720403125, 1.7361178874496557`}, {0.5389016469933955, 
      2.2088745532689456`}}], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.8869292709362215, 0.11477126736021992`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.5993852002617343, 0.9123209783884112}},
      SplineDegree->2], 
     LineBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.34662967007095946`, 2.0462783003793907`}}], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.4629665454737082, 0.5271825320345073}},
      SplineDegree->2], 
     BezierCurveBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.31395969740398566`, 0.697473164285987}},
      SplineDegree->2], 
     LineBox[{{0.4135274720403125, 1.7361178874496557`}, {
      0.41477696493590055`, 2.016293227957468}}], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.3307476485988553, 
      0.390450577303305}}], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.7761777959015744, 
      0.29945666800669424`}}], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {1.2136772413449555`, 
      0.5275079171557824}}], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.7914875986617644, 
      0.7706904273000346}}], 
     BezierCurveBox[{{0.5293755453499083, 0.6866833629373061}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.7720134664826582, 
      0.15237076653491843`}}], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.5993852002617343, 
      0.9123209783884112}}], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.6490970652665649, 
      0.07805796477938409}}], 
     BezierCurveBox[{{0.5293755453499083, 0.6866833629373061}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.865389333210902, 2.0707170661799985`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5293755453499083, 0.6866833629373061}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {0., 
      1.7464348987842908`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5293755453499083, 0.6866833629373061}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.34662967007095946`, 2.0462783003793907`}},
      SplineDegree->2], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.4629665454737082, 
      0.5271825320345073}}], 
     BezierCurveBox[{{0.5293755453499083, 0.6866833629373061}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.7620742549484754`, 2.0481611680085887`}},
      SplineDegree->2], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.31395969740398566`,
       0.697473164285987}}], 
     LineBox[{{0.5293755453499083, 0.6866833629373061}, {0.23631783864242695`,
       0.57511492230213}}], 
     BezierCurveBox[{{2.3100943601346695`, 0.}, {1.8968863375228313`, 
      0.4156292143970947}, {1.5752748578186244`, 0.44671072170047077`}, {
      1.253663378114418, 0.4777922290038468}, {0.8632869245528856, 
      0.22255171154172948`}},
      SplineDegree->2], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.3307476485988553, 
      0.390450577303305}}], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {1.1466921860378676`, 
      0.3890317208411591}}], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.49764736984986224`,
       0.30058879883853107`}}], 
     BezierCurveBox[{{0.6810022418870744, 0.6674418241168851}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.5003436030507973`, 2.0079826741038116`}},
      SplineDegree->2], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {1.1207817706600196`, 
      0.5674742443296346}}], 
     BezierCurveBox[{{0.6810022418870744, 0.6674418241168851}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3622453647753168`, 2.0346128019980565`}},
      SplineDegree->2], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.8632869245528856, 
      0.22255171154172948`}}], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.5993852002617343, 
      0.9123209783884112}}], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.40063564407648333`,
       0.35424033911013775`}}], 
     BezierCurveBox[{{0.6810022418870744, 0.6674418241168851}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.865389333210902, 2.0707170661799985`}},
      SplineDegree->2], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.9256707084544533, 
      0.8663832978491918}}], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.45237654217544676`,
       0.7340009029869594}}], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.5065024726713317, 
      0.17481830117642405`}}], 
     LineBox[{{0.6810022418870744, 0.6674418241168851}, {0.23631783864242695`,
       0.57511492230213}}], 
     LineBox[{{0.3307476485988553, 0.390450577303305}, {0.49764736984986224`, 
      0.30058879883853107`}}], 
     LineBox[{{0.3307476485988553, 0.390450577303305}, {0.7720134664826582, 
      0.15237076653491843`}}], 
     LineBox[{{0.3307476485988553, 0.390450577303305}, {0.8632869245528856, 
      0.22255171154172948`}}], 
     LineBox[{{0.3307476485988553, 0.390450577303305}, {0.40063564407648333`, 
      0.35424033911013775`}}], 
     LineBox[{{0.3307476485988553, 0.390450577303305}, {0.4629665454737082, 
      0.5271825320345073}}], 
     LineBox[{{0.3307476485988553, 0.390450577303305}, {0.23631783864242695`, 
      0.57511492230213}}], 
     LineBox[{{1.1962984742488716`, 0.24459102122664256`}, {
      1.0186894300764524`, 0.16661644863426828`}}], 
     BezierCurveBox[{{1.1962984742488716`, 0.24459102122664256`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.10963562511368563`, 1.9944322770252152`}},
      SplineDegree->2], 
     LineBox[{{1.1962984742488716`, 0.24459102122664256`}, {1.017862599670702,
       0.7434837673573133}}], 
     LineBox[{{1.1962984742488716`, 0.24459102122664256`}, {
      0.5065024726713317, 0.17481830117642405`}}], 
     LineBox[{{0.7761777959015744, 0.29945666800669424`}, {0.6542983649629392,
       0.18189119544098598`}}], 
     LineBox[{{0.7761777959015744, 0.29945666800669424`}, {
      1.1466921860378676`, 0.3890317208411591}}], 
     LineBox[{{0.7761777959015744, 0.29945666800669424`}, {
      0.49764736984986224`, 0.30058879883853107`}}], 
     LineBox[{{0.7761777959015744, 0.29945666800669424`}, {0.9976395874996012,
       0.2777349581959062}}], 
     LineBox[{{0.7761777959015744, 0.29945666800669424`}, {0.7914875986617644,
       0.7706904273000346}}], 
     BezierCurveBox[{{0.7761777959015744, 0.29945666800669424`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     LineBox[{{0.7761777959015744, 0.29945666800669424`}, {
      1.0186894300764524`, 0.16661644863426828`}}], 
     LineBox[{{0.7761777959015744, 0.29945666800669424`}, {0.6490970652665649,
       0.07805796477938409}}], 
     LineBox[{{0.7761777959015744, 0.29945666800669424`}, {
      0.45237654217544676`, 0.7340009029869594}}], 
     BezierCurveBox[{{0.6542983649629392, 0.18189119544098598`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.8321134150923744, 2.0146048196748665`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6542983649629392, 0.18189119544098598`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5389016469933955, 2.2088745532689456`}},
      SplineDegree->2], 
     LineBox[{{0.6542983649629392, 0.18189119544098598`}, {
      1.1207817706600196`, 0.5674742443296346}}], 
     BezierCurveBox[{{0.6542983649629392, 0.18189119544098598`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.23094587299667868`, 1.8803899580617967`}},
      SplineDegree->2], 
     LineBox[{{1.1466921860378676`, 0.3890317208411591}, {0.5628465446719564, 
      0.4842032742149206}}], 
     LineBox[{{1.1466921860378676`, 0.3890317208411591}, {0.8869292709362215, 
      0.11477126736021992`}}], 
     LineBox[{{1.1466921860378676`, 0.3890317208411591}, {1.1207817706600196`,
       0.5674742443296346}}], 
     LineBox[{{1.1466921860378676`, 0.3890317208411591}, {0.8632869245528856, 
      0.22255171154172948`}}], 
     BezierCurveBox[{{1.1466921860378676`, 0.3890317208411591}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.467535554940982, 0.08829088240643046}},
      SplineDegree->2], 
     LineBox[{{1.1466921860378676`, 0.3890317208411591}, {1.171851958080779, 
      0.7879891986751411}}], 
     LineBox[{{1.1466921860378676`, 0.3890317208411591}, {0.6490970652665649, 
      0.07805796477938409}}], 
     BezierCurveBox[{{1.1466921860378676`, 0.3890317208411591}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.41477696493590055`, 2.016293227957468}},
      SplineDegree->2], 
     LineBox[{{0.49764736984986224`, 0.30058879883853107`}, {
      0.9976395874996012, 0.2777349581959062}}], 
     LineBox[{{0.49764736984986224`, 0.30058879883853107`}, {
      0.7914875986617644, 0.7706904273000346}}], 
     LineBox[{{0.49764736984986224`, 0.30058879883853107`}, {
      0.8869292709362215, 0.11477126736021992`}}], 
     LineBox[{{0.49764736984986224`, 0.30058879883853107`}, {
      0.6490970652665649, 0.07805796477938409}}], 
     BezierCurveBox[{{0.49764736984986224`, 0.30058879883853107`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.41477696493590055`, 2.016293227957468}},
      SplineDegree->2], 
     LineBox[{{0.49764736984986224`, 0.30058879883853107`}, {
      0.736087805319456, 0.9122981244636258}}], 
     LineBox[{{0.9976395874996012, 0.2777349581959062}, {0.7914875986617644, 
      0.7706904273000346}}], 
     LineBox[{{0.9976395874996012, 0.2777349581959062}, {0.8869292709362215, 
      0.11477126736021992`}}], 
     LineBox[{{0.9976395874996012, 0.2777349581959062}, {0.6490970652665649, 
      0.07805796477938409}}], 
     LineBox[{{0.9976395874996012, 0.2777349581959062}, {1.017862599670702, 
      0.7434837673573133}}], 
     LineBox[{{0.9976395874996012, 0.2777349581959062}, {0.45237654217544676`,
       0.7340009029869594}}], 
     LineBox[{{1.2136772413449555`, 0.5275079171557824}, {0.5628465446719564, 
      0.4842032742149206}}], 
     LineBox[{{1.2136772413449555`, 0.5275079171557824}, {0.8869292709362215, 
      0.11477126736021992`}}], 
     LineBox[{{1.2136772413449555`, 0.5275079171557824}, {0.7720134664826582, 
      0.15237076653491843`}}], 
     BezierCurveBox[{{1.2136772413449555`, 0.5275079171557824}, {
      1.253663378114418, 0.4777922290038468}, {1.5752748578186244`, 
      0.44671072170047077`}, {1.8968863375228313`, 0.4156292143970947}, {
      2.467535554940982, 0.08829088240643046}},
      SplineDegree->2], 
     BezierCurveBox[{{1.5003436030507973`, 2.0079826741038116`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.7914875986617644, 0.7706904273000346}},
      SplineDegree->2], 
     LineBox[{{1.5003436030507973`, 2.0079826741038116`}, {
      1.3782167899714932`, 2.1784668765322968`}}], 
     BezierCurveBox[{{1.5003436030507973`, 2.0079826741038116`}, {
      1.2881240909054401`, 1.9603803784946114`}, {1.0717655408319864`, 
      1.9557701114918546`}, {0.8554069907585324, 1.9511598444890978`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     BezierCurveBox[{{1.5003436030507973`, 2.0079826741038116`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.45237654217544676`, 0.7340009029869594}},
      SplineDegree->2], 
     LineBox[{{0.7914875986617644, 0.7706904273000346}, {1.1207817706600196`, 
      0.5674742443296346}}], 
     BezierCurveBox[{{0.7914875986617644, 0.7706904273000346}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3622453647753168`, 2.0346128019980565`}},
      SplineDegree->2], 
     LineBox[{{0.7914875986617644, 0.7706904273000346}, {1.017862599670702, 
      0.7434837673573133}}], 
     LineBox[{{0.7914875986617644, 0.7706904273000346}, {0.31395969740398566`,
       0.697473164285987}}], 
     LineBox[{{0.7914875986617644, 0.7706904273000346}, {0.736087805319456, 
      0.9122981244636258}}], 
     LineBox[{{0.5628465446719564, 0.4842032742149206}, {0.8869292709362215, 
      0.11477126736021992`}}], 
     LineBox[{{0.5628465446719564, 0.4842032742149206}, {0.5993852002617343, 
      0.9123209783884112}}], 
     LineBox[{{0.5628465446719564, 0.4842032742149206}, {0.6490970652665649, 
      0.07805796477938409}}], 
     BezierCurveBox[{{0.5628465446719564, 0.4842032742149206}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5628465446719564, 0.4842032742149206}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.34662967007095946`, 2.0462783003793907`}},
      SplineDegree->2], 
     LineBox[{{0.5628465446719564, 0.4842032742149206}, {1.017862599670702, 
      0.7434837673573133}}], 
     LineBox[{{0.5628465446719564, 0.4842032742149206}, {0.4629665454737082, 
      0.5271825320345073}}], 
     LineBox[{{0.5628465446719564, 0.4842032742149206}, {0.23631783864242695`,
       0.57511492230213}}], 
     BezierCurveBox[{{0.8321134150923744, 2.0146048196748665`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.40063564407648333`, 0.35424033911013775`}},
      SplineDegree->2], 
     BezierCurveBox[{{0.8321134150923744, 2.0146048196748665`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.31395969740398566`, 0.697473164285987}},
      SplineDegree->2], 
     LineBox[{{0.5389016469933955, 2.2088745532689456`}, {0.5681058954943687, 
      2.042753013081761}}], 
     LineBox[{{0.5389016469933955, 2.2088745532689456`}, {
      0.34662967007095946`, 2.0462783003793907`}}], 
     LineBox[{{0.5389016469933955, 2.2088745532689456`}, {
      0.41477696493590055`, 2.016293227957468}}], 
     LineBox[{{0.8869292709362215, 0.11477126736021992`}, {0.7720134664826582,
       0.15237076653491843`}}], 
     LineBox[{{0.8869292709362215, 0.11477126736021992`}, {0.8632869245528856,
       0.22255171154172948`}}], 
     LineBox[{{0.8869292709362215, 0.11477126736021992`}, {
      1.0186894300764524`, 0.16661644863426828`}}], 
     LineBox[{{0.8869292709362215, 0.11477126736021992`}, {
      0.40063564407648333`, 0.35424033911013775`}}], 
     LineBox[{{0.8869292709362215, 0.11477126736021992`}, {0.6490970652665649,
       0.07805796477938409}}], 
     LineBox[{{0.7720134664826582, 0.15237076653491843`}, {
      1.1207817706600196`, 0.5674742443296346}}], 
     LineBox[{{0.7720134664826582, 0.15237076653491843`}, {0.8632869245528856,
       0.22255171154172948`}}], 
     LineBox[{{0.7720134664826582, 0.15237076653491843`}, {0.4629665454737082,
       0.5271825320345073}}], 
     LineBox[{{1.1207817706600196`, 0.5674742443296346}, {0.9256707084544533, 
      0.8663832978491918}}], 
     BezierCurveBox[{{1.1207817706600196`, 0.5674742443296346}, {
      1.2552511663256838`, 0.7323388105162713}, {1.5450488799630784`, 
      0.9492861193585218}, {1.834846593600473, 1.1662334282007722`}, {
      2.752192549092554, 1.4869746279526588`}},
      SplineDegree->2], 
     LineBox[{{1.1207817706600196`, 0.5674742443296346}, {1.017862599670702, 
      0.7434837673573133}}], 
     LineBox[{{1.1207817706600196`, 0.5674742443296346}, {0.736087805319456, 
      0.9122981244636258}}], 
     LineBox[{{1.3622453647753168`, 2.0346128019980565`}, {
      1.3782167899714932`, 2.1784668765322968`}}], 
     BezierCurveBox[{{1.3622453647753168`, 2.0346128019980565`}, {
      1.2881240909054401`, 1.9603803784946114`}, {1.0717655408319864`, 
      1.9557701114918546`}, {0.8554069907585324, 1.9511598444890978`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     BezierCurveBox[{{1.3622453647753168`, 2.0346128019980565`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.31395969740398566`, 0.697473164285987}},
      SplineDegree->2], 
     BezierCurveBox[{{1.3622453647753168`, 2.0346128019980565`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.23631783864242695`, 0.57511492230213}},
      SplineDegree->2], 
     LineBox[{{0.8632869245528856, 0.22255171154172948`}, {0.5993852002617343,
       0.9123209783884112}}], 
     LineBox[{{0.8632869245528856, 0.22255171154172948`}, {
      0.40063564407648333`, 0.35424033911013775`}}], 
     BezierCurveBox[{{0.8632869245528856, 0.22255171154172948`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     BezierCurveBox[{{0.5993852002617343, 0.9123209783884112}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.34662967007095946`, 2.0462783003793907`}},
      SplineDegree->2], 
     LineBox[{{0.5993852002617343, 0.9123209783884112}, {1.017862599670702, 
      0.7434837673573133}}], 
     BezierCurveBox[{{0.5993852002617343, 0.9123209783884112}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.7385809623694393`, 2.3742054841532005`}},
      SplineDegree->2], 
     LineBox[{{0.5993852002617343, 0.9123209783884112}, {0.45237654217544676`,
       0.7340009029869594}}], 
     LineBox[{{0.5993852002617343, 0.9123209783884112}, {0.736087805319456, 
      0.9122981244636258}}], 
     LineBox[{{1.0186894300764524`, 0.16661644863426828`}, {
      0.6490970652665649, 0.07805796477938409}}], 
     LineBox[{{1.0186894300764524`, 0.16661644863426828`}, {1.017862599670702,
       0.7434837673573133}}], 
     LineBox[{{1.0186894300764524`, 0.16661644863426828`}, {
      0.4629665454737082, 0.5271825320345073}}], 
     LineBox[{{1.0186894300764524`, 0.16661644863426828`}, {
      0.31395969740398566`, 0.697473164285987}}], 
     LineBox[{{0.23094587299667868`, 1.8803899580617967`}, {
      0.10963562511368563`, 1.9944322770252152`}}], 
     LineBox[{{0.23094587299667868`, 1.8803899580617967`}, {0., 
      1.7464348987842908`}}], 
     LineBox[{{0.10963562511368563`, 1.9944322770252152`}, {
      0.34662967007095946`, 2.0462783003793907`}}], 
     BezierCurveBox[{{0.40063564407648333`, 0.35424033911013775`}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.34662967007095946`, 2.0462783003793907`}},
      SplineDegree->2], 
     LineBox[{{0.40063564407648333`, 0.35424033911013775`}, {
      0.5065024726713317, 0.17481830117642405`}}], 
     BezierCurveBox[{{1.171851958080779, 0.7879891986751411}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.3782167899714932`, 2.1784668765322968`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.171851958080779, 0.7879891986751411}, {
      0.9935782454470516, 0.9397695944363569}, {1.1670362614369496`, 
      1.283500198199545}, {1.3404942774268478`, 1.6272308019627333`}, {
      1.865389333210902, 2.0707170661799985`}},
      SplineDegree->2], 
     BezierCurveBox[{{1.171851958080779, 0.7879891986751411}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     BezierCurveBox[{{0.6490970652665649, 0.07805796477938409}, {
      0.7134413277294023, 0.8389619913078157}, {0.6561167087142876, 
      1.184301112284948}, {0.5987920896991732, 1.5296402332620804`}, {
      0.5681058954943687, 2.042753013081761}},
      SplineDegree->2], 
     LineBox[{{0.6490970652665649, 0.07805796477938409}, {0.4629665454737082, 
      0.5271825320345073}}], 
     BezierCurveBox[{{1.3782167899714932`, 2.1784668765322968`}, {
      1.3404942774268478`, 1.6272308019627333`}, {1.1670362614369496`, 
      1.283500198199545}, {0.9935782454470516, 0.9397695944363569}, {
      0.9256707084544533, 0.8663832978491918}},
      SplineDegree->2], 
     LineBox[{{1.865389333210902, 2.0707170661799985`}, {1.7620742549484754`, 
      2.0481611680085887`}}], 
     LineBox[{{1.865389333210902, 2.0707170661799985`}, {1.7385809623694393`, 
      2.3742054841532005`}}], 
     LineBox[{{0.5681058954943687, 2.042753013081761}, {0.41477696493590055`, 
      2.016293227957468}}], 
     BezierCurveBox[{{0.5681058954943687, 2.042753013081761}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.23631783864242695`, 0.57511492230213}},
      SplineDegree->2], 
     BezierCurveBox[{{0., 1.7464348987842908`}, {0.5987920896991732, 
      1.5296402332620804`}, {0.6561167087142876, 1.184301112284948}, {
      0.7134413277294023, 0.8389619913078157}, {0.9256707084544533, 
      0.8663832978491918}},
      SplineDegree->2], 
     BezierCurveBox[{{0., 1.7464348987842908`}, {0.5987920896991732, 
      1.5296402332620804`}, {0.6561167087142876, 1.184301112284948}, {
      0.7134413277294023, 0.8389619913078157}, {0.4629665454737082, 
      0.5271825320345073}},
      SplineDegree->2], 
     BezierCurveBox[{{0., 1.7464348987842908`}, {0.5987920896991732, 
      1.5296402332620804`}, {0.6561167087142876, 1.184301112284948}, {
      0.7134413277294023, 0.8389619913078157}, {0.45237654217544676`, 
      0.7340009029869594}},
      SplineDegree->2], 
     LineBox[{{2.8011351906767903`, 1.6763528568106207`}, {2.752192549092554, 
      1.4869746279526588`}}], 
     LineBox[{{2.8011351906767903`, 1.6763528568106207`}, {2.619979336571392, 
      1.8995792744362525`}}], 
     LineBox[{{0.9256707084544533, 0.8663832978491918}, {1.017862599670702, 
      0.7434837673573133}}], 
     LineBox[{{0.9256707084544533, 0.8663832978491918}, {0.4629665454737082, 
      0.5271825320345073}}], 
     LineBox[{{2.752192549092554, 1.4869746279526588`}, {2.619979336571392, 
      1.8995792744362525`}}], 
     BezierCurveBox[{{0.34662967007095946`, 2.0462783003793907`}, {
      0.5987920896991732, 1.5296402332620804`}, {0.6561167087142876, 
      1.184301112284948}, {0.7134413277294023, 0.8389619913078157}, {
      0.4629665454737082, 0.5271825320345073}},
      SplineDegree->2], 
     LineBox[{{1.017862599670702, 0.7434837673573133}, {0.4629665454737082, 
      0.5271825320345073}}], 
     LineBox[{{1.017862599670702, 0.7434837673573133}, {0.736087805319456, 
      0.9122981244636258}}], 
     LineBox[{{1.7620742549484754`, 2.0481611680085887`}, {
      1.7385809623694393`, 2.3742054841532005`}}], 
     LineBox[{{0.45237654217544676`, 0.7340009029869594}, {
      0.23631783864242695`, 0.57511492230213}}], 
     LineBox[{{0.45237654217544676`, 0.7340009029869594}, {0.736087805319456, 
      0.9122981244636258}}]}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.525949298387337, 0.46632052545042924`}, 
        0.03722485078591374]}, 
      InsetBox["\<\"$\"\>", {2.486406777327562, 0.4323743845848904}, 
       ImageScaled[{1.0690685920195935, 0.9885293620416662}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.825649283791019, 0.6216875864569988}, 
        0.023292670889041057]}, 
      InsetBox["\<\"computational\"\>", {0.833822997508989, 0.5901188440420526},
        ImageScaled[{0.3120106008059593, 1.2260578391496533}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.656986367226935, 0.5949669155731379}, 0.01815103306995709]},
       InsetBox["\<\"typeset\"\>", {2.672461135563868, 0.6151231341637201}, 
       ImageScaled[{0.043273683968125476, -0.0948958499132031}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.8915721184409169, 0.5775984273529406}, 
        0.014502128811252341]}, 
      InsetBox["\<\"\[CloseCurlyQuote]s\"\>", {0.9000024881661723, 0.5591284550516761},
        ImageScaled[{0.18857885939005403, 1.182287969395035}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.8168504841213395, 0.49300183233143985`}, 
        0.012511817397413387]}, 
      InsetBox["\<\"essay\"\>", {0.8340084637856899, 0.4894757778754335}, 
       ImageScaled[{-0.2346474559393712, 0.6509738900664933}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.6763911083181197, 1.7822666461380356`}, 
        0.012345958112926807]}, 
      InsetBox["\<\"wolfram\"\>", {0.6746257069691864, 1.765072699114143}, 
       ImageScaled[{0.576604076734437, 1.2460776202431383}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.7503455077217706, 1.8900236646175628`}, 
        0.012014239543953649]}, 
      InsetBox["\<\"language\"\>", {0.7512400555626206, 1.8732275338212556}, 
       ImageScaled[{0.4601121605870234, 1.2489385557353585}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.7018560700630186, 0.552121968771264}, 
        0.011682520974980489]}, 
      InsetBox["\<\"essays\"\>", {0.7131244887394558, 0.5402675990562177}, 
       ImageScaled[{-0.01672518930676481, 1.04359459042184}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.0712210062321588`, 1.285730072434535}, 
        0.010023928130114693]}, 
      InsetBox["\<\"input\"\>", {2.084014568129667, 1.291497557058158}, 
       ImageScaled[{-0.18373334133099994, 0.19176515778980102}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.3471934271454384`, 1.5012961407612515`}, 
        0.008033616716275739]}, 
      InsetBox["\<\"war\"\>", {2.336067542481882, 1.499649591144775}, 
       ImageScaled[{1.241919308074732, 0.6097986352643372}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.11045418639754, 1.5125265463148911`}, 0.00786775743178916]},
       InsetBox["\<\"word\"\>", {2.1200718550780233, 1.5071574124105092}, 
       ImageScaled[{-0.15486544953508363, 0.8655834282420537}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.5150569067214588`, 1.4704294144508645`}, 
        0.007701898147302579]}, 
      InsetBox["\<\"civil\"\>", {2.505717403630514, 1.4650405942873936}, 
       ImageScaled[{1.1496197601683291, 0.8748255156720821}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.2, 1, 0.6], EdgeForm[{Hue[0.2, 1, 0.6], Opacity[1]}], 
       DiskBox[{1.6661182985568193`, 1.8499770498411088`}, 
        0.007701898147302579]}, 
      InsetBox["\<\"\:2715\"\>", {1.6713274764197943, 1.859417927275536}, 
       ImageScaled[{0.13766970886264268, -0.15667096793167112}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.05199493722491, 1.4220493197897488`}, 0.00737017957832942]},
       InsetBox["\<\"english\"\>", {2.0623100101972875, 1.4223054090857068}, 
       ImageScaled[{-0.24976896977325014, 0.48138570535424186}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.7524057394408263`, 0.09211257233880965}, 
        0.00737017957832942]}, 
      InsetBox["\<\"dynamic\"\>", {2.755743053907667, 0.08234893345249317}, 
       ImageScaled[{0.25742150963806953, 1.209687026803877}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{1.0228567115359226`, 0.4646706155086253}, 
        0.00720432029384284]}, 
      InsetBox["\<\"like\"\>", {1.0255617111521669, 0.4549540652137512}, 
       ImageScaled[{0.29885584230447826, 1.222524067298079}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.292580743087015, 1.6568706096479315`}, 
        0.0067067424403831006]}, 
      InsetBox["\<\"name\"\>", {2.301209241785576, 1.6605733900580744}, 
       ImageScaled[{-0.18921835871517256, 0.2042331086650101}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.268222929782851, 0.535112628155415}, 
        0.0067067424403831006]}, 
      InsetBox["\<\"open\"\>", {2.2730181712122284, 0.5431852505416528}, 
       ImageScaled[{0.11697062918375944, -0.14481664145097473}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.2663618074761236`, 0.31185053397217255`}, 
        0.0067067424403831006]}, 
      InsetBox["\<\"true\"\>", {2.2740683160826474, 0.31721442226839797}, 
       ImageScaled[{-0.11557258090545708, 0.07154883867890549}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.2, 1, 0.6], EdgeForm[{Hue[0.2, 1, 0.6], Opacity[1]}], 
       DiskBox[{1.4387445555038259`, 1.8348871228885126`}, 
        0.0067067424403831006]}, 
      InsetBox["\<\"computer\"\>", {1.44467813698858, 1.8276101603820414}, 
       ImageScaled[{0.026043471165271392, 1.0812617386125938}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.9712191884332817, 0.6013116271970502}, 
        0.006540883155896522]}, 
      InsetBox["\<\"code\"\>", {0.9787351133078773, 0.5960803890931926}, 
       ImageScaled[{-0.1155725809054583, 0.9284511613210927}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.372616112129937, 1.8090270814847076`}, 
        0.006375023871409942]}, 
      InsetBox["\<\"desc\"\>", {2.3753875481739355, 1.8005432519365803}, 
       ImageScaled[{0.2671070868657035, 1.212924183214331}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.5012294459882255, 1.7857116470187235`}, 
        0.006375023871409942]}, 
      InsetBox["\<\"notebooks\"\>", {0.510108687948005, 1.784808716363943}, 
       ImageScaled[{-0.2461519925439215, 0.5758762414905727}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.6707552609075872, 0.4076367786070474}, 
        0.0060433053024367845]}, 
      InsetBox["\<\"just\"\>", {0.6719880636995175, 0.3992664492423215}, 
       ImageScaled[{0.39071707715326065, 1.2419954465992857}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.5820952434204485, 0.7592077915714102}, 
        0.005877446017950204]}, 
      InsetBox["\<\"write\"\>", {0.5784714934270871, 0.7665953083738068}, 
       ImageScaled[{0.8302956136682254, -0.1733534046780565}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.129350829714037, 0.49066438759243997`}, 
        0.005877446017950204]}, 
      InsetBox["\<\"use\"\>", {2.1289658260067528, 0.498883800020677}, 
       ImageScaled[{0.5350921106574795, -0.24917857935848864}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.9609758493561241, 0.3859726244291638}, 
        0.0057115867334636234]}, 
      InsetBox["\<\"things\"\>", {0.9646073244503712, 0.37884858444141367}, 
       ImageScaled[{0.15938833165122196, 1.1681943515061035}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.4135274720403125, 1.7361178874496557`}, 
        0.005379868164490465]}, 
      InsetBox["\<\"new\"\>", {0.4195983281522425, 1.7316599787758327}, 
       ImageScaled[{-0.10452119759050449, 0.943907785090262}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.5293755453499083, 0.6866833629373061}, 
        0.005048149595517306]}, 
      InsetBox["\<\"way\"\>", {0.5357975080061912, 0.683732655946566}, 
       ImageScaled[{-0.18150459335621938, 0.8131317442137956}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.3100943601346695`, 0.}, 0.005048149595517306]}, 
      InsetBox["\<\"assumptions\"\>", {2.3152176186318743, -0.004868315773931675},
        ImageScaled[{-0.043684911555898154, 1.0166301548946355}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.9866063362574438`, 0.6567721720109869}, 
        0.004882290311030726]}, 
      InsetBox["\<\"allassumptions\"\>", {2.9930741460344574, 0.6589829374222161},
        ImageScaled[{-0.20968702680387696, 0.2574215096380696}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.6810022418870744, 0.6674418241168851}, 
        0.004882290311030726]}, 
      InsetBox["\<\"\[CloseCurlyQuote]re\"\>", {0.6878352547359182, 0.6676149784487859},
        ImageScaled[{-0.2497593064723228, 0.48100046426510606}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.3307476485988553, 0.390450577303305}, 
        0.004882290311030726]}, 
      InsetBox["\<\"students\"\>", {0.32513756104353897, 0.39435531348348496},
        ImageScaled[{1.1155725809054573, 0.07154883867890571}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.9732299032652447`, 0.5181440959060271}, 
        0.004882290311030726]}, 
      InsetBox["\<\"boxes\"\>", {2.979511169613132, 0.5208395995847522}, 
       ImageScaled[{-0.18921835871517256, 0.2042331086650101}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.9375296956805306`, 0.3744143883665503}, 
        0.004882290311030726]}, 
      InsetBox["\<\"query\"\>", {2.9435881494800817, 0.3775790660079261}, 
       ImageScaled[{-0.1647700245163055, 0.1527525169211582}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.8862462105248907`, 0.23163052233153425`}, 
        0.004882290311030726]}, 
      InsetBox["\<\"querystate\"\>", {2.8920468692151204, 0.23524610053903885},
        ImageScaled[{-0.13648319312106227, 0.1032769922547766}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{1.1962984742488716`, 0.24459102122664256`}, 
        0.004716431026544146]}, 
      InsetBox["\<\"text\"\>", {1.1995961836780789, 0.23887046470549111}, 
       ImageScaled[{0.12543074595633874, 1.149767553764556}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.7761777959015744, 0.29945666800669424`}, 
        0.004716431026544146]}, 
      InsetBox["\<\"notebook\"\>", {0.7827617358963077, 0.29995805462091796}, 
       ImageScaled[{-0.24783468508573536, 0.4430501643310625}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.6542983649629392, 0.18189119544098598`}, 
        0.004716431026544146]}, 
      InsetBox["\<\"data\"\>", {0.6477463312829962, 0.18271004160972792}, 
       ImageScaled[{1.244210616687102, 0.4069916239782492}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{1.1466921860378676`, 0.3890317208411591}, 
        0.004550571742057567]}, 
      InsetBox["\<\"possible\"\>", {1.1528980856210371, 0.3904718279884421}, 
       ImageScaled[{-0.23058711099653983, 0.3304639470621966}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.49764736984986224`, 0.30058879883853107`}, 
        0.004550571742057567]}, 
      InsetBox["\<\"\[CloseCurlyQuote]ve\"\>", {0.495230336285083, 0.2946943059020036},
        ImageScaled[{0.7845443348878328, 1.193926884825225}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.9976395874996012, 0.2777349581959062}, 
        0.004550571742057567]}, 
      InsetBox["\<\"immediately\"\>", {1.0033586118422486, 0.280542066815153},
        ImageScaled[{-0.17326991296231764, 0.16953423127392897}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{1.2136772413449555`, 0.5275079171557824}, 
        0.004550571742057567]}, 
      InsetBox["\<\"make\"\>", {1.2127125251935706, 0.5212105827213334}, 
       ImageScaled[{0.6135708331284335, 1.2413512432460834}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.2, 1, 0.6], EdgeForm[{Hue[0.2, 1, 0.6], Opacity[1]}], 
       DiskBox[{1.5003436030507973`, 2.0079826741038116`}, 
        0.004550571742057567]}, 
      InsetBox["\<\"say\"\>", {1.4998598483333656, 2.0016302667172057}, 
       ImageScaled[{0.5569498356689353, 1.2478346850857356}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.7914875986617644, 0.7706904273000346}, 
        0.004384712457570988]}, 
      InsetBox["\<\"want\"\>", {0.7932993405028645, 0.776555576065321}, 
       ImageScaled[{0.278645465194017, -0.21659065715429682}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.5628465446719564, 0.4842032742149206}, 
        0.004384712457570988]}, 
      InsetBox["\<\"book\"\>", {0.5574792827718945, 0.48718234760003176}, 
       ImageScaled[{1.1557599621084365, 0.13602352810168883}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.8321134150923744, 2.0146048196748665`}, 
        0.004384712457570988]}, 
      InsetBox["\<\"cloud\"\>", {0.8336176879040083, 2.0086533877592756}, 
       ImageScaled[{0.316211338234411, 1.227132537991812}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.5389016469933955, 2.2088745532689456`}, 
        0.004384712457570988]}, 
      InsetBox["\<\"science\"\>", {0.5347864243060688, 2.2134294759654844}, 
       ImageScaled[{1.0027886329672078, -0.05651018908818406}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.8869292709362215, 0.11477126736021992`}, 
        0.004384712457570988]}, 
      InsetBox["\<\"easy\"\>", {0.8870576302266613, 0.12090852264497802}, 
       ImageScaled[{0.484317351192781, -0.24983601842428815}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.7720134664826582, 0.15237076653491843`}, 
        0.004218853173084408]}, 
      InsetBox["\<\"good\"\>", {0.7673070694103652, 0.1488021082567754}, 
       ImageScaled[{1.0976231080893344, 0.95315187374394}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{1.1207817706600196`, 0.5674742443296346}, 
        0.004218853173084408]}, 
      InsetBox["\<\"makes\"\>", {1.1262094979712982, 0.5698034655605715}, 
       ImageScaled[{-0.18921835871517156, 0.2042331086650077}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.2, 1, 0.6], EdgeForm[{Hue[0.2, 1, 0.6], Opacity[1]}], 
       DiskBox[{1.3622453647753168`, 2.0346128019980565`}, 
        0.004218853173084408]}, 
      InsetBox["\<\"human\"\>", {1.3673741523579641, 2.0316834619289743}, 
       ImageScaled[{-0.15125868658980657, 0.8719705944578416}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.8632869245528856, 0.22255171154172948`}, 
        0.004218853173084408]}, 
      InsetBox["\<\"understand\"\>", {0.8679415191382528, 0.22618767696429853},
        ImageScaled[{-0.0910451753803333, 0.038301396298807244}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.5993852002617343, 0.9123209783884112}, 
        0.004218853173084408]}, 
      InsetBox["\<\"form\"\>", {0.6026354460966606, 0.9073893055159681}, 
       ImageScaled[{0.08728046357195668, 1.1262288593243057}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{1.0186894300764524`, 0.16661644863426828`}, 
        0.004218853173084408]}, 
      InsetBox["\<\"cells\"\>", {1.0236636629339126, 0.16980117825984256}, 
       ImageScaled[{-0.13163316969919325, 0.09559977876396997}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.23094587299667868`, 1.8803899580617967`}, 
        0.004218853173084408]}, 
      InsetBox["\<\"november\"\>", {0.23552342113331018, 1.87665745911805}, 
       ImageScaled[{-0.081261738612595, 0.9739565288347269}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.10963562511368563`, 1.9944322770252152`}, 
        0.004218853173084408]}, 
      InsetBox["\<\"2023\"\>", {0.10636041142360797, 1.999347403736967}, 
       ImageScaled[{0.9158899801812326, -0.12412781093687364}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.40063564407648333`, 0.35424033911013775`}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"read\"\>", {0.39507760366465045, 0.3553825454505221}, 
       ImageScaled[{1.234647455939371, 0.3490261099335048}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.14, 1, 0.9], EdgeForm[{Hue[0.14, 1, 0.9], Opacity[1]}], 
       DiskBox[{2.467535554940982, 0.08829088240643046}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"4\"\>", {2.466358282063677, 0.09384160101900167}, 
       ImageScaled[{0.6556088945336118, -0.23367967938469392}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{1.171851958080779, 0.7879891986751411}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"start\"\>", {1.1681311170027016, 0.7837052997249703}, 
       ImageScaled[{0.9918111833344522, 1.0662347216015333}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.6490970652665649, 0.07805796477938409}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"years\"\>", {0.6434883067579608, 0.07891719497889009}, 
       ImageScaled[{1.2413512432460836, 0.3864291668715672}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.2, 1, 0.6], EdgeForm[{Hue[0.2, 1, 0.6], Opacity[1]}], 
       DiskBox[{1.3782167899714932`, 2.1784668765322968`}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"languages\"\>", {1.3732592160740913, 2.181227113767641}, 
       ImageScaled[{1.1552793397478638, 0.13515895666797095}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.2, 1, 0.6], EdgeForm[{Hue[0.2, 1, 0.6], Opacity[1]}], 
       DiskBox[{1.865389333210902, 2.0707170661799985`}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"1\"\>", {1.8706022607329087, 2.072958011336375}, 
       ImageScaled[{-0.18903132368115483, 0.20379764520484372}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.5681058954943687, 2.042753013081761}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"actually\"\>", {0.5624389868343603, 2.0424656200012885}, 
       ImageScaled[{1.2490373803782897, 0.5379868766290342}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0., 1.7464348987842908`}, 0.0040529938885978285]}, 
      InsetBox["\<\"2017\"\>", {-0.0056669086600084646, 1.7467222918647631}, 
       ImageScaled[{1.2490373803782897, 0.4620131233709648}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.8011351906767903`, 1.6763528568106207`}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"rowbox\"\>", {2.805765370005895, 1.679632778749313}, 
       ImageScaled[{-0.11200516956081519, 0.06646837205246736}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.9256707084544533, 0.8663832978491918}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"writing\"\>", {0.9267448425608374, 0.8719548940715579}, 
       ImageScaled[{0.35802372236934055, -0.2364392280359201}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.752192549092554, 1.4869746279526588`}, 
        0.0040529938885978285]}, 
      InsetBox["\<\"entity\"\>", {2.746923194187902, 1.489079467004083}, 
       ImageScaled[{1.1964897496791966, 0.221787799347674}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.34662967007095946`, 2.0462783003793907`}, 
        0.0038871346041112493]}, 
      InsetBox["\<\"mathematica\"\>", {0.3419277502221409, 2.043538375566732},
        ImageScaled[{1.1480057651287743, 0.8776089622345739}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{1.017862599670702, 0.7434837673573133}, 
        0.0038871346041112493]}, 
      InsetBox["\<\"output\"\>", {1.0159725684975702, 0.7485870036254405}, 
       ImageScaled[{0.7604789396336152, -0.2033140991103103}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.4629665454737082, 0.5271825320345073}, 
        0.0038871346041112493]}, 
      InsetBox["\<\"idea\"\>", {0.46008792944128823, 0.5318008442783507}, 
       ImageScaled[{0.8967230077452212, -0.1364831931210636}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.2, 1, 0.6], EdgeForm[{Hue[0.2, 1, 0.6], Opacity[1]}], 
       DiskBox[{1.7620742549484754`, 2.0481611680085887`}, 
        0.0038871346041112493]}, 
      InsetBox["\<\"2\"\>", {1.7602238679880953, 2.053278912271503}, 
       ImageScaled[{0.7550152823950735, -0.20531355136914886}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.31395969740398566`, 0.697473164285987}, 
        0.0038871346041112493]}, 
      InsetBox["\<\"sometimes\"\>", {0.3101876065842935, 0.6935505925413616}, 
       ImageScaled[{1.0198592652241838, 1.040598135735383}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.2, 1, 0.6], EdgeForm[{Hue[0.2, 1, 0.6], Opacity[1]}], 
       DiskBox[{1.7385809623694393`, 2.3742054841532005`}, 
        0.0038871346041112493]}, 
      InsetBox["\<\"n\"\>", {1.7415756489675447, 2.378749391108989}, 
       ImageScaled[{0.08728046357195735, -0.12622885932430616}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.8, 0.6, 0.8], EdgeForm[{Hue[0.8, 0.6, 0.8], Opacity[1]}], 
       DiskBox[{0.41477696493590055`, 2.016293227957468}, 
        0.0038871346041112493]}, 
      InsetBox["\<\"technology\"\>", {0.40972324604211185, 2.014274524515577},
        ImageScaled[{1.1964897496791969, 0.7782122006523251}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.45237654217544676`, 0.7340009029869594}, 
        0.0038871346041112493]}, 
      InsetBox["\<\"\[CloseCurlyQuote]m\"\>", {0.4481589159547939, 0.7305618817153473},
        ImageScaled[{1.0812617386125944, 0.9739565288347276}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.5065024726713317, 0.17481830117642405`}, 
        0.0037212753196246696]}, 
      InsetBox["\<\"ordinary\"\>", {0.5046445354618065, 0.1699510705743076}, 
       ImageScaled[{0.7674683864034059, 1.2006858513447796}],
       BaseStyle->"Graphics"]}, {
      {Hue[0.07, 1, 1], EdgeForm[{Hue[0.07, 1, 1], Opacity[1]}], 
       DiskBox[{2.619979336571392, 1.8995792744362525`}, 
        0.0037212753196246696]}, 
      InsetBox["\<\"militaryconflict\"\>", {2.615703335139571, 1.896603089602647},
        ImageScaled[{1.115572580905457, 0.9284511613210946}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.23631783864242695`, 0.57511492230213}, 
        0.0037212753196246696]}, 
      InsetBox["\<\"story\"\>", {0.2366904500784826, 0.5699184787946494}, 
       ImageScaled[{0.4463589086615449, 1.2480792961444793}],
       BaseStyle->"Graphics"]}, {
      {Hue[0, 1, 0.8], EdgeForm[{Hue[0, 1, 0.8], Opacity[1]}], 
       DiskBox[{0.736087805319456, 0.9122981244636258}, 
        0.0037212753196246696]}, 
      InsetBox["\<\"work\"\>", {0.7402733578760653, 0.9154002228187038}, 
       ImageScaled[{-0.10255157320898789, 0.053422345360435886}],
       BaseStyle->"Graphics"]}}}},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{674.18181818182, Automatic}]], "Output",
 CellChangeTimes->{3.9104862673620186`*^9, 3.910486323207855*^9, 
  3.910680571301863*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"25f3b938-8800-4a1b-be38-52b773d6ca87"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["KeywordPlot", "Section",ExpressionUUID->"37a7719d-84e5-4940-921a-329efc134af6"],

Cell[CellGroupData[{

Cell["Source Code", "Subsection",
 CellChangeTimes->{{3.9106803701952925`*^9, 
  3.910680371999051*^9}},ExpressionUUID->"9136715a-2578-4106-83d1-\
201945e3c2ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"KeywordPlot", "//", "ClearAll"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "KeywordPlot", "]"}], "=", 
   RowBox[{
    RowBox[{"Options", "[", "SmoothHistogram", "]"}], "~", "Join", "~", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<PlotFunction\>\"", "->", "Automatic"}], ",", 
      RowBox[{"\"\<TopN\>\"", "->", "All"}]}], "}"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KeywordPlot", "::", "nokwd"}], "=", 
   "\"\<Keyword \\\"`1`\\\" not found in text.\>\""}], ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"(*", 
  RowBox[{"Operator", "forms"}], "*)"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KeywordPlot", "[", 
    RowBox[{"keyword_String", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"KeywordPlot", "[", 
    RowBox[{
     RowBox[{"{", "keyword", "}"}], ",", "opts"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KeywordPlot", "[", 
    RowBox[{"keywords_List", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"text", ",", 
     RowBox[{"KeywordPlot", "[", 
      RowBox[{"text", ",", "keywords", ",", "opts"}], "]"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{}], "\n", 
 RowBox[{"(*", 
  RowBox[{"Main", "form"}], "*)"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"KeywordPlot", "[", 
    RowBox[{"text_String", ",", "keyword_String", ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   RowBox[{"KeywordPlot", "[", 
    RowBox[{"text", ",", 
     RowBox[{"{", "keyword", "}"}], ",", "opts"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"KeywordPlot", "[", 
   RowBox[{"text_String", ",", "keywords_List", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "pltFun", ",", "topN", ",", "txt", ",", "kws", ",", "pos", ",", 
      "badpos"}], "}"}], ",", 
    RowBox[{
     RowBox[{"pltFun", "=", 
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<PlotFunction\>\"", "]"}], "/.", 
       RowBox[{"Automatic", "->", "SmoothHistogram"}]}]}], ";", 
     RowBox[{"topN", "=", 
      RowBox[{"OptionValue", "[", "\"\<TopN\>\"", "]"}]}], ";", 
     RowBox[{"txt", "=", 
      RowBox[{"RemoveDiacritics", "@", 
       RowBox[{"ToLowerCase", "@", "text"}]}]}], ";", 
     RowBox[{"kws", "=", 
      RowBox[{"RemoveDiacritics", "@", 
       RowBox[{"ToLowerCase", "@", "keywords"}]}]}], ";", 
     RowBox[{"pos", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{"txt", ",", "#"}], "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "&"}], "/@", "kws"}]}], 
     ";", 
     RowBox[{"badpos", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"pos", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"badpos", "=!=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
           "ResourceFunction", "[", "\"\<ResourceSystemMessage\>\"", "]"}], 
           "[", 
           RowBox[{
            RowBox[{"KeywordPlot", "::", "nokwd"}], ",", "#"}], "]"}], "&"}], 
         "/@", 
         RowBox[{"Extract", "[", 
          RowBox[{"kws", ",", "badpos"}], "]"}]}], ";", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Flatten", "[", "pos", "]"}], "==", 
           RowBox[{"{", "}"}]}], ",", 
          RowBox[{"Return", "@", "$Failed"}], ",", 
          RowBox[{"(*", 
           RowBox[{"no", "keywords", "to", "plot"}], "*)"}], 
          RowBox[{
           RowBox[{"kws", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"kws", ",", "badpos"}], "]"}]}], ";", 
           RowBox[{"pos", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"pos", ",", "badpos"}], "]"}]}], ";"}]}], "]"}]}]}], 
      "]"}], ";", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"IntegerQ", "@", "topN"}], ",", 
       RowBox[{
        RowBox[{"ord", "=", 
         RowBox[{"OrderingBy", "[", 
          RowBox[{"pos", ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Length", "[", "#", "]"}]}], "&"}]}], "]"}]}], ";", 
        RowBox[{"pos", "=", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"pos", "[", 
            RowBox[{"[", "ord", "]"}], "]"}], ",", 
           RowBox[{"UpTo", "@", "topN"}]}], "]"}]}], ";", 
        RowBox[{"kws", "=", 
         RowBox[{"Take", "[", 
          RowBox[{
           RowBox[{"kws", "[", 
            RowBox[{"[", "ord", "]"}], "]"}], ",", 
           RowBox[{"UpTo", "@", "topN"}]}], "]"}]}], ";"}]}], "]"}], ";", 
     RowBox[{"pltFun", "@@", 
      RowBox[{"{", 
       RowBox[{"pos", ",", 
        RowBox[{"Sequence", "@@", 
         RowBox[{"FilterRules", "[", 
          RowBox[{
           RowBox[{"{", "opts", "}"}], ",", 
           RowBox[{"Options", "[", "pltFun", "]"}]}], "]"}]}], ",", 
        RowBox[{"PlotLegends", "->", "kws"}], ",", 
        RowBox[{"AspectRatio", "->", 
         RowBox[{"1", "/", "GoldenRatio"}]}], ",", 
        RowBox[{"PlotTheme", "->", "\"\<Minimal\>\""}], ",", 
        RowBox[{"ImageSize", "->", "Automatic"}], ",", 
        RowBox[{"Frame", "->", "None"}]}], "}"}]}]}]}], "]"}]}]}], "Input",
 CellLabel->
  "In[303]:=",ExpressionUUID->"a86c7859-b4f0-4540-9612-19ea9520581b"]
}, Closed]],

Cell[CellGroupData[{

Cell["Code", "Subsection",
 CellChangeTimes->{{3.910680379686277*^9, 
  3.910680381506434*^9}},ExpressionUUID->"93ed5c3a-2a22-4539-a45b-\
2e39ddea45ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"keywords", "=", 
    RowBox[{"{", 
     RowBox[{"\"\<essay\>\"", ",", "\"\<computational\>\""}], "}"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"KeywordPlot", "[", 
   RowBox[{"keywords", ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Placed", "[", 
      RowBox[{"keywords", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{".15", ",", ".8"}], "}"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Business\>\""}]}], "]"}], "@", 
  "webpage"}]}], "Input",
 CellChangeTimes->{{3.9104883778900843`*^9, 3.9104883875897217`*^9}, {
  3.910680550166129*^9, 
  3.910680557325388*^9}},ExpressionUUID->"02146935-423a-436b-8145-\
90d9b87b46c6"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, 
     InterpretationBox[{
       TagBox[{{}, {}, 
         TagBox[
          {RGBColor[0.34398, 0.49112, 0.89936], PointSize[
           0.006944444444444445], AbsoluteThickness[3], CapForm["Butt"], 
           LineBox[CompressedData["
1:eJw9e3k4lH/Uvq1sFZWkolSylaKUiNNJJVFRFKWkRVFEX5KEUERSyhKKkFAq
su8e+77vu2GMMfbdWPI+73X9fu/8M9d93XOfcz7Pc33Ouc8fs/O2xSVjNhYW
lo3sLCz/+61gcDZJQKaGYPl/ny7Prx+k9lf+H/4nsP9+1WIFYfIpabXSWTvY
HpKpbFVaQZTu2+1aUfkcQEJzg9CnCkJBjLV/zz0HuBHXOpB5t4KoZe1jMdj4
AhwUTbJuHawgTvyoydnw0AmC82Y/rmapIP4rPG6er+cMWZquJjGV5YTMT1s7
ZW0X6GzYCNqfy4kgse+ti7ovYflG+MYZk3LirV/9jZf3XoHIgOxg4JFyou7e
syJ9V1dQtszJBo5yIsGFtWxVvBtcZ5737astIwIdL+8QGnkN9i4dpu5fy4hL
QtpuOxU84Avvw+My5mUEXYGzOsX7DWT6MgXqlMqIxpj2busFT+gQcWfYcJUR
lY7K6bPWXrAUKUhsayolNDp4HbtZ3oOw7Hc/4lspMRhcmvRAyxuU0w49NH5c
SnjrLzzOlfgABqp5yHO8lAj8yC5fzv0RnpdrC8auKSVcEgo1KDMf4bNu95BO
WwnxdKPu+pvDPpDRaZ47H1VCSL6uHAob8YX2e0v+wU9KiKIstZPcC36wOPbG
TPVkCaHdmOU0u/4TbHu2RXWAv4QIyljHWXk4AJTYoje/7SomfCV79k4aB8I1
zyMjsr+KiQEV5wOV4UFgJ1CY1/ismEjfGXeoePgzBAXrBNidKSaE5VXlNE8F
Q7p4r/mOTcXEXUrkcOGPEGiLtTxZ0FtEuMt/na5bFwoLR1eETOOKCNdDOb9l
akJha57X6FrHIsJYemzNvsAwUNIULojXLCKUDU8WcT4Ih6sNPwP1thQRh/d2
n19U/QbPbihaLNEKiTNm7lUnxCIgkFZ8KiyxkFga9tuxed13SLO4slXNpZDg
uamQnsISCa3z1DGGViHR/2PTH6OlSGA6WxW+FykkStM0/LRYo2ELL9tn+aEC
olcn7nUe3w846utt2ZpaQNg3uK6dl/gJ+iI71BzdCojGrebrD2jEgG3k7227
dQuIZd2c2kibXxBwQHmieGcB0ZelVBvy+zekppYVmY3lE1uaeYqvjP2BlhNX
v6zPyidiXgue4dweB/NlA4+T3+QTmqJbedjL4kBI1+aMgX4+8W8s+Vv2879w
tJNDhEU8nzi/7QjbtUPxoH/PZzJiKo/gTbZnnRmPB9uxnSVnc/MI7tZjt2IT
EyDANi549F0e0RLZmh7tmAiprMetfK7nEU69m56yaCVB05tK9aPSeUTWjFl+
455kmN14fXvnXC7B56b8+gx7CggGM6acC3OJlMlf+tYDKXBE/FmpuE8ugfp3
HtvVpcKVWM6v5Ua5RKiXHeNpQRrYHPW3ttyfS1huujvpmZUO/rliGpuWCELI
sEmuOisDkjUSdqSXEsSV/Rd2GBVmQlP9iRnDTwSx7BDz1KAhC2av15SxGxPE
9ddhnB2MbBCkGYZGHySIn4vLqxw4CDhiMfLkPAtB3Bmi6Jp8IuDX+Jw/9XMO
scfS/pby/lwYZtukul8hh3gssiy3qjQX9m06OPK0LpuYS31pUHU/D0wktAJy
zbMJDrW+xXCefIhWNDvJy51NGBEPErz+5gNd02NUNyKL0ExKDgm4XgCShpGB
IceziOr5d9qVvIVgYpl/it6WSTzOry+XzymEaJeeMTmbTGKVl4NDs00R0H2X
g56vzyRcOBKOZB0sBsmorWqFvzKIbvd58ZHJYjBJU5hYp55BpLy1bzJPKYHo
ct0v+n3pBGi9Ej3tVAr0zsdnwh3TCXvdJRnb82UgOf5ucmhLOjHHJmvJu6Mc
TNh+BR9OSiP+lMR8Zpsph2iBUvUX2mnEnbO0uFvVFUAXp02VDKUSf93/ikj9
qQRJRfavG16nEsnv/qVf+1AFJpqiGtd3pRK4KU9vzrYaIm6ozHzPSiG+7Hl9
9cXBGqBaXAsd008h/hs1bEv5WQNiLk81FaeTieKLI/Jie2rhrq/vrMv7ZKJh
4BtLflgtRET+DauQTiYat1+9+1G0DqipVecEi5IIyQKqgHdYHYiVD83dvJVE
bNjVq5MmVg93O7m+/VhKJJSbAkZ5ftZDxNieC1OfEon3lmtVnOUagMp6kql8
KJFY3aC0UyijAcQEjCLcqhKIkypPVperNcJdcQetGtMEYjl9rse3oREijgYt
bFmVQEiWf5GxvNsEVI2U73dC4wl6ct7EldkmELvRoP37WDxxb9/1DNU3zWBk
MbE42/SX+GInE7ZPtAVCnddF4X9/CcGUIyfXprZAj8/eS2/W/iW4mBrlHRdb
QTRSfbk+Oo5YSGkY+TjSCkapxtEip+IIDyhmiHu2AfqtiqrKjiXo7Fnv3ku3
A5F2fPnWzB9CIlRVPr+8HbDrmc7M3j/ErYnzhSmPOoBgS/zhfvs30UDvyby9
sRNQYnRlW+Avoku/WTItrRMITckrsdUxhNW/rpjYW12Alrd/qa6OIY73BrxQ
4u0GwvcLW5PyT+Ijf5/N+eRuwLQmfVOrH0R8gRjLI7keIDr5Y5d+RBON/hd8
zdx7ANk0V3n3RBEvfjRXbesheXFXg92bo4ji0wEt1kcpcFQz52/y+UjihGfL
b8sPFEi1YHJqvPpOpPzo2cE1RPK+hww70yOIDpWApkOne8n+ZZ5oOfGN2DFw
6NLw116yH0XxcEh+I/p3jg9LLZI8a6/RJ8NwIud+Swf1Sh8cFRdOkfYLI/56
BR7elNAHqRpX1maXhxKO2oaMeD4qHLXwvnORLZQ4OZdYnWRGBUsJP6vSxyEE
y6h98KYyEltyi453fSE2yrePl0r0g2WaQ4Xguc9E/BP5C2WuJGabtFVJCySG
vu3dvY5KYs17e+6KBxDBhuXrvVRpYOnbVvvGx5+YaOvqVgmjgVHnBce/LH5E
BGVgfDPLABiJ50u3mPsQhiYBTzbcJLGFQvO/tg/EmaX17mLZJE6NeblH3ZtY
OlmqcFqETr4/NAp44EWo97l4PrQnsa9kWv+pN8STR5ov37WTWHz9hkM7XhO2
J5/qfFcaBCKV+cCJ+ZI4x6gNjwwksUZvfmW9E+HA6mXqMT8ITml+ikeuPycu
sAalntJjgFPnvaEa/idE4tc1ntVJDGBht1RqfmNOqMuZ94gKDAGL5oaQNdNG
ROkzy+wD/5H4XN1qricnCAGPKtWpahJrXDq83kobOdz9f9yWGQaWztUKOjV3
cXO3Tbj1m2Fw0ogffJdgiZf+NgSKDgyT9VIUpv/Z4NHDihU3To6Q5+N3u6rh
gNdOO7nu/jpCPo8dD7rLnNH83nV/0wUSdx5Z/3H8FZ5X3l0lfnkUjDQvpJ4S
dEf5rl9Dl2JJnGZ8c+6YJ8pGzwb3c42BkYTD6p+33uHGPw3QdGsM4jTKrvzJ
90al3a21wukkZr3y8/WVj/irbv5jC9c4xKVSlo0GfZCRLm5/Wp7EFuYXlez9
cFni4J2LN0kszozYyPcJ99z/uW3eg8Sdr+aHwwIwYta24HAiiX35zxXJB+GD
dW++r+4iseaXr1+LPyMfPWDxHucEeT7JKdtrwSjbeI5xSZbEaQlql0ZCcNdb
j84i/Qnyfe+o3IShuEbOTSHHaYLsB/02LtxhqGL3zuRoNMlbxIiO1YUh97/N
Y/urSV7jcZnBl3CMzq7R+zpD8uIK1iXG3/D79SgVt22T0MO6LHL4QASy3qw8
24OT5PPLKw6bj8AHm9Ye+2lM8qnuj9flfcchqYyhHg+S972w7blnJFJXzKad
fpO8hUDhgG4Urjj9uvK6huQ12x7pbo/GhQobtolJkhcPFcodiEal/Wkz6QJT
YMR2L0/m7w/04iy/03t4Cno695oF2f1EE2lNkbtXSD5tYhPnqRhUfhnprmIz
Rc6rlByrtb8wskWs+KHfFDnfHEx7mn6hLc/kwlACyWue3Hg+9Dd2dqUGZ9SS
vAR3VprpHxTY6NffPErybNX3xA/FYonYNnXgnQaTLl9+n6VYPLlx5/Nh8WmY
vi7TuXI7DuOmff50n5iGRA3+g8nFcaheftR30/VpsD465Wa27y+uqAtkej6Z
BnnxpvZdH/7ihasGNcffkfqNabKtM3+R7/re+AORpJ71i+v7a/F45MGpMf0s
Uj/m2HY6Jx557y/6pdWT+s5bB5Z2J6BG3dkTWoOkvuzUq3j3BPxwwpC6+d80
2b8kWk1GErBUe53H+g0zpF/j2b/jUiKyRGyQV9ozQ/a7EZfG5EQ8Oh/O5a0w
A/PONc2e25Jwe4PH9vVnZ8j+mLBP1SkJmzLtX2ZcJfU3/J3nqUk4aeHk4WVK
6jWfNf05m4x6mcftXG1J/dHre43/JCP37MrvMDdSL37cadvGFBxP3RfZ40Pq
BXY11j5NwaAnyiwnQkk92ypp944UrNlsTyNiSP3YgCOcSMVyq0fthsmkvrOs
fvp7Kr5w/ZG8hSD15b8lY3jS8MW9r/rjJaQ+zdvhlkUa3vbaeZlSQ+ojreo2
N6ThtjSfwKFmUu97RaLqaDqW3t+wsraL1Lso2r8KTsfK165fzvSRekvhWiW2
DExNLnH/NEDqb6zsmbiXgUdMno8tMUi9Zq9dVHkGirjGrn86QuoVC6tvyGZi
1NQXtVVjpF4iWkzALxO93K4uRZJ4XsDzWRkzE/+U+KYakDiV7VGVk2EWXhfQ
27J7dAacxrV3K+Rn4S7D/MaloRlyXh6yHZHIxmmB9mw6fQZYKgQrv73Nxnci
KxQadYa8r8yd1yay0TOx69JcN6mP6rDhv5KDkul5NVvaSL1fTnlReg5OCr0t
uFBP8icuemfzEei57mqQf/kMeb/z0reoEtgoMVA1kUf+/oB8v7U1ga4TRhK3
0mbIef+dryaSQMnvcvz9f8j8IpuV9rYSmGDI8HT8NkP2A/e7bry5aJX4KGD/
J7IenoV3FJVcNH+ecnnWY4b0Ew/TlC1zkWZpt7r5OZl/vqPvU3guOo6U8deZ
kfktLqybasjF3Mn4f/TrZH5aztELnHkoS893FDlH5r8hd+eHYh663ea3faxE
5m8I9+Iwy8P8FodRmgSZX0Mg9WZIHjba/it5IUDmz3XtTa/Jw90SP/WBhcx/
dG6NIHs+2gxqbtkzNA1OsSYKjw/n49bU/0KONE6T/antVsX9fDy6su7bk+xp
wGDNtxJB+XjXJYa7n7xfogJZyS4V+Xh2JaDjNXn/WDz3Uzr/5aP43jUXbpH3
s4c1lFdRrgDLYmVSrQ2mgbBdf8T3TgGuad4WXIjTEDrmYjTmV4Cfgzsj9faQ
+e9Nv9EoKcC/7kjs554m/Z9x0veFAkxuVSq4MDwFp3Sbu1lkCtFC+G9PRtUU
6RfVea7fLMSmFrPLdnFTwKGaLp/yoRCLa9Y5v/swRfrLvTc3FBRiC9OMZ/nx
FBQcCPYwny3Et1e//Sq7OEX60XWJJZJFeCzzgPqS7BS8EnHq2m1QhIxBg15/
vinSv05wvfAqwotM1qqvI5NwivfOobacIlRaruYWLp8k/W7DjcOTRZjQaqKx
PnoSOJin3b3FijF8V/78q1eTpD9OiR+6Uoz7BGM77I0moYAm2anmUYw1qWGh
/45Nkn46iDM8oxjPfPl0iX/zJLxq4D24PFKM33pN2FInJuCupsN1fdESTFYd
71gsn4BTeaNuCZdKkHOOrtH7fQLEFI3+rnMtQUWOYfvHLyaAI6623TSlBJ+e
51+IJecTVfzk6sLBEhTZkGIUITcBBcGJsqLCpUh7evXxZZ4JiBAQN3h+oRTz
wlazlvWOwyvPT65NTqXI3O7qzZUxDnfZuOPkEkpxn/S6g0I+43DqmV3b2/5S
/Mr2u3/lwTiIjQ9x0DeXoRzbdFKR6jhw3L9x4KRGGRovvO2z2joO1M6qqyH2
ZbhzMvqTMHUMCnTxFfNPGUYHFL5Q8hmDiPK/f3QpZSiTsVZUW3UMXqnubo3d
WI7xN6wZDydG4W6aLzuvWjnuv0pR/hI6Cuqyq/ffsy3Hq1cLb4xrjZL70lP9
3J/lqFnVftVmZQS4tg+6CHeWo05AwrBy7Ag5r679fspXgWupMz8v3RyBEt6K
5roTFTjx0SexiG+E3MdU2PZbV+DU5z3KUcQwuDP/7POIrMDvc3H87P8Nk/NN
VI/aUoEaN33ZBncPg/rAB+fjvJV4hGNZ4X7TELnvsf8KUqnElS4dk7ceQ8DV
aN00Y1GJqY2c3+6pDJHzkMZyMbwSv2QWW3JMMqAkT2/vr4ZK9Dn/U806ikHu
k6WXOTmr8M3VsoL8Gwxwj1Nyuq1Yhe2FJwpYNjHI+fnrZ9bDKuSWaz+jWDkI
6iEijUIhVWg0enzOzm0QJDe9X7GqqcLR3GcX63EQuN6ySFezVeNAOl+91hKd
nLf/6UofrsZPl3VeLKfSoeRZn6Pr/WpMWvVy+6ANHaLHdX/0BFZj5heloB1H
6OB+v6j+WEU17ls8/OL37AA5nxX++f+rxqmsM7u+pg5AxE9dgWdCNZhPZwth
sR8AgXtePyLlatCp2rqmEwfg1c4iaNCoQYtHY/qqnAMw3fGvnvVuDUbcSilT
rKbB3QAF0wMONSj4cWKxKoAGDTqW/67716CJPTNlzV0anOL74fMmtgZX/5Po
W5alQXIZRTK1pAbHOP9Z/1rpB3G3rdn9lBpUfaRusqumH/xP6OhsXKzBLYHK
bqbh/bB62ZOOArXIaM+S9bTpB5vUAodHMrXI0sRq532uH2hWyxu+qNWiQSTL
bhexfrhy4Eh06c1aHN8+E2jyjwpFjEcqc7a1+KtweF6zjQpHIqPqxD7W4iPz
+xzyqVSIvNVz/1JMLWYeWC0tGUAFQZEtyy8KavGq19kXB+yo4NZy8ePvzlqs
e25IaBtSYdbnjUT7bC3io9rAj6eocE8rP5OLvw5Lnrm/XdhHhSaepYtHpOrQ
ooNm/W4zFdSK5AfuqNZhXtW1KB0OKiQ7m9t/MKhDN12n9VpTfSCuErk+x7oO
w7O+nHCl9oH/fFfksFcdNv2X9HehuQ9WJ25W3hpVhymxUZHxlX1gY6Fde4ao
ww+/GnPjCvuAJu1x70lrHZ68uLxxPqcPrtByF8Mn61Cq+dNJz8w+KApb8K7h
rUf9jF8+Zhl9cOTGIfF/YvUYu6LVF0zykUJmGXuhHq30ZX6LEn0g2BChfVWv
HhXPiXLOkvHd3nf2u1nW43FDpbLtVX0wqyH4PNGjHrnk7UU/t/TBvdVa/L3h
9Ri5cjD3QX8fNOW+/s6XScbbbObqNd0Hag6EkkpjPW7a80aDbTV5/qPM6gej
9djnrJJXvIUKktNyxgGcDVh/iC2+4wAVAmIfLBSKNmDX5jgfUKcC18Nv76cU
G5BVyayScZsKtuIdYjt1GpDNOie76wUV6BSB9AtmDZhd+ydE8CsV9IPPa9m7
NqCsYbDYe4IKJfpu1B8hDTiz+dWDU1Ry3xTIedac0oCoc99Ojqcfoqvn1q2q
bcD8VRwpFw/2g5CnbMRBRgNeWD7b9fV6P7irmSoasTfi3GGahqBHP8yzhld5
CTfiteL7R2JT+sEkq+1OxuFGXCzqrrhD74cW241M+oVGjFygGchso4G6/Ll3
giaNePmbVimHNg1Sx17tPuXciN6HKt/0utFAMiYr9XFQI3JQ2lKyc2gQcG/2
/NcEMn5OC8+HBRpw7TrQV1HRiH580KutMAC2nfdtF/obUXYq69LMkwGgB4Su
lVxpxCenmVJPkgdAX7c1/LJQE8YfuKhRND8AJXwbjr6Ua8KpyFcjXcp0OFqu
URmn0YQjXS8zEl3IfuH28nbXnSY0StbjVimjg5Bq5hyvQxPK/zfZZrZxENyX
p98q+jfhVzGh/qOGgzCfKrPrfmwT3u03fO/3cxBMrO+l+JY0YdKM2qwNuc+2
HPh6Lo/ShCc6H4zUnGGA+lAzZWyhCdc6F7N+CmBAeiT/UxGBZjSSELbPZDBA
+vbZNZoyzRh//vYdeRiCIBGXMFu1ZnwpfuPFxMch4GlNPxJ5sxnD3NCARh8C
O9+p8nrbZlycf6S+CoeBobXvFutHUh964RYGDMM1XuPZ/THNGOAk/9ZjYhjK
ioI9rxc044ZYY8c6zRFQcmkSfdPZjNuHZXLWRI3ATxW+5JTZZhRf4YmRYh+F
rcwzmv18LZgsO2yz1WgU3iQ69WyQasG83a6HarJGYcEi7QmqtuCqEwk1x4TH
4MHeSZ5HBi34sWla9MLzMWijSYd+tm7BrcvjHXNtY6ARfudwqVcLjoW9rvcV
GYf0G1/KZiNb0JTnPSfj/DhIb2m8KUa04Lmr7OVWjuMQ1LB25mJrC9leivSl
Y8eBx1vtzYvJFvQU46Ov6hkHO80XO37ztmLdIe0///gngLE6NbFNrBV7Nu+l
rFGdgGt542e5oBXns4xSJa0moMxBqvuwXiva3S620IiYACXF29Z3LFvxq7Tq
2QeNE/BzOoj7g0crElvT3zmtnoStcfUh2eGtqBy22ddVYRLePFwjP5zRitsY
x9Iem0zCgvjp0i2NrWi2l/lQJXASHvQ6GJ4ZbUXTzdzSlNJJaAtOnrLmbEPZ
EJaXlxcmQePqmHu4aBtOiONWH+kpSBeQ3F6j2IYB97qjP16bgn01RgnLl9qw
d95n5dybKfjiGai+16wNp7s/cGWkTcGaM3Wd+q5tyM9nXNpInwJ7Nl4rt5A2
HBDLv+u/eRqGs05yJaa0YetzXeHZ09Nw/Zl9MKWmDbNSrC6NWk1DhXzSQT5G
G5os9nrahk2D8vhIsTJ7O9Innzx+VzUNv2LEbzwQbkflvthaqcVpEL5/c/LT
4XZcPa0bfor02293BbwuvNCOf6hv21suzcBSZ43w1P121FPx6ehxmAGzQO54
Ued25Ig5fkAvegY6dFXPXAhqRy4T4teRuhk4x/+843lCOx7wSah7tjgDmeUJ
j39UtGNNY0vQNrFZ2Pd6eHVzfzs2zYcZbD43C19U93zhWGlH6bW/XUysZmHN
vxtyB4U68B6bijlP0CzYp/kX3ZTrwKHIe+PzObMwbF1t4KXRgb5fn+yT7Z+F
67JcE+l3OvBgcM3tX9xzUDGEbnT7DjyaxdZhKjMHylHPtgn6d+DazyX7jLXn
4Nft+LiTsR341uOL1Of/5kB4+9DpxyUdqEbX7+LynYO3rbvbQygd6PjX+11M
4hws+V63rFjowKsLtUlODXNgpu23amFjJ+qerON0m5qDDt6qIAmZTkwYNNNL
Wz8P54pXy15W60TVS3zjQgfmIdvleKHLzU5k0xfY/01zHvaD7bU420486/3P
5sr9eQhhxo11fuhEO9f3DXIu87AuafAVb0wnJlfzHJL/Mg+Olru2KhZ0Yqe0
btH1pHkY3WsQe6+zE8fuL879rJwHwwGfU76znai3ZUx5e/88VIVXtObydWGg
fdZQ8uI8gOEqizHJLnTElSbr9Uz4swU4RFS7sMDtroq+OBO2N9oEahh0ocoP
Rb9bSkx45x2739a6C5UaTd0+nGfCP016/nevLmwrejRIv8mER5w7r9ZHdmGw
5/4ik8dM6Mq7OspCdKHGdpXjG1yYcMHx48v9rV2YuqGokvaBCdmK5ULXJ7vw
3H8HNtBDmbB/hv2PB283ytRR4jbHMiEkTvlkilg3Mk1DPJ9mMmGd2ZMWqko3
il98HMNdygRHiT/mG/S6MV1kz/GaBiaM9tLY0LIbzV/9DKzsZoJhyI4Acw8y
XsdxMQ4GE6qu6st8Du9Gx4Ev1jZTTIBNH/JKMrqxMOqoqcQSef6aUr3Zhm5k
iJ1M3cKxANvfso3sHu3GtofbtbV5F6D4m0huNHsPGh+ePVq1fgFesKZ7Hufv
wQ62kY/+mxdA4eaVK03CPTgddcr3l/ACjGVOippL9WCw0svXG3cuQNTW90Ps
R3ow/ZZfaZXYAty03ZscpNqDWYujxRSJBRBqKnaS0+rBVZti/mlJL0DNobua
JQY9+HDIMkd43wK4f2ARvGnSg/W6ZXOaMguAY196Zqx7MNQ9cBuFxPPnFGPe
Ovcgh0sOs5vEcT8bn+x+14MTOjaC50hswvUfpgf14METvZxSZDzRe+t4L0aR
9fsdC7Yj87Xk/2wcSOhBCx2dt6ckF8B755lQR6IHPR7oPX6zZwHUX/Q92FTZ
g+5q/TNauxaApfPF4V+tPbiOYp8dsH0BUpWEWU7SevBndreJydYFsAxILWud
7MFzdnZv8jYtgOSsrp/lSg/Kerf++cm/AD06Ezc511CQe730FTHy+Qb89ZIO
EaJgc0fR1MFVC6DNJz0jv4eCaYt1w63/mMBlXpRTLkfBR2EUf+F5JhBlt9/c
BgoW13kL/htngq3kii5Tg4KT54PrnAeZIOv2eYe3HgV3blpT+pPCBHqfAkP8
LgXXcW7fZt/KhNATDYlZlhSUt9ELmK9hgv5Xyxe6DhTkfDRus7uECfzLazSG
PCi435Ht1Eo2E0qu/RBw8aeg1uSV2HdJTHBKPd0t9I2C0cEU2YYYJhwV7P0R
G0tB2vMCx7owJoxbOVqrZVJQymiC4vmJCdG1W493llDwrXXNGzYvJtw6kMJt
3UhBp4uDnUfJ+7HFS6eBp5eCLK0zXrJPmVDLGAsJG6VgyDPDxaGHTPBQf2t6
dJGC7OlFXWZGTDgRKSlfzdmLqzKMexJ1mcBkL/xnLNCLXX1SPoXqTPh761bp
kmgv9h9rNA9VZoJpzrKPj0wv+pw70awmy4SdIkGG0kq92GZ9Tzl9NxNa7Y5I
5ar1YqxkT+yiIBM+tNRN6en04qf13w3W8DDh7BGL7NGbvWj04+CakaV5YPXl
9XA168U1BWt9QsbmIW0iSkf4WS9eYxzy29k7D4+1Tm1PcO1Fx8T5ZJuGeZD6
3UM/+7EXx3qlvEOK5oHC45DQE9KL4NOgEZg6D4EmWxyfxvTi62Nh1+7/nIeL
RUnq61J7UXKqaZaL7HfcYpc2fi/oRc6BFAlHr3nIdR7tPFbbi5mLrR1FjvPw
rPtNdF0nWV//5vlei3mQU5GwMmX0ItuJoJN1RvMwGJSvwjLXi0tD+877XpyH
sPmbXJ/Y+1AkKZEpqToPV68s1cnw92GmFsPn/cF5WJ8YEFwg3IdhKURF8a55
KF1/2MRAqg8vN+qU1myYB2eL2oOTh/tQk/970w+2eVCsNF92V+3D6dHz5pcm
52BCmqdkh1Yf3j/lZFhKmYMf7pEfkw368Bv7rR3raufgFk31xnmTPvx5huK0
g5iDLae6JajWfXjmjMuPpT9zUBv2fNLOuQ87TE5YRgTPgcfK5qz170jsEf53
09s5OHEj8XV0EFnffuHTWnZzwEzXvnQ8qg/ZtHvmtEzm4K/QiHBTQh9eXdPu
JXhlDkxtPAbMiD688O5vXtjJOdjZsCeevbIPkxMJjXHZOWiVy7MPau3DO7zb
Gli2z8GH94Zn5Gh9OBftylnHMwdnRxbWl0z2oekbK4/bc7PAqvmpw3ClD6O5
Vxbi+mYhLfpQ1AwvFR3XUxYyqmfh8eqax2+FqOibZCzukjELUnfNlHfvoaJN
242tbFGzQMnl4kyXo+KxkLXWSh9n4fOO77XaQMUrCpvrpBxmQcfhxJcBDSpO
st9urLo/C7ztnfcc9ajI6rG8U/LSLOQftZPbdJeKnWIsRvLKs/DcX3ApxpKK
QnBLeXLPLByaji9SdSDjZVSZGvHNwtBFrQ+tHlRc9HMIc5ifgW+xQwaW/lTc
c2PmmzplBgzWuotzfqPi2pdNikTpDGx8KDYRHEvFiEuf5fv+zkB5CZEhn0nF
9RY6FnGBM0D6crfyEiqa512tFneegWOvmNq3G6noVMBx+rTJDExR/LYxKVQ0
WXWxgkdrBmKOH6S9H6WiwpCruc3hGbgTXBUnvkhFXd8GldfbZmDb4oPnWZz9
KFI/flOZdQbq9TnVdAX60UwxgsOPNg2eyd/4h0T7UV3G4KF3+TScFMB2Z5l+
vM36q1cmbhoWH3d8F1LqR811LSVmvtOQUG1rGavWj6/K1N6es52GhzKbjqnp
9OMqykJMhcE07Pb8u6rzZj+2q7GmDsM0tNPP11iZ9ePvi20Xf+2cBh81RhDP
s37Uq+3Yx8sxDZoRbsZhrv3YeMBnHTdtCtjZdsse/diPGUEbqr8XT0HGzZyF
qpB+3KN07iolegqssgwKjWP6MdRWPybDYwr2bpt/v5RC1m+U2ST/YAr6bH2v
+RT0owP/D5bzGlPwuUl2j3RtPw5pHb7NQfpjHfnKMaKzH1fDB3UD7ing/Wia
rsfox3Jx+U2X6JOQP7bKdXS2H88854DBokl4fj5cy5WdhtXjz87v/D4Jh2Jg
qzA/DY+VpPUuuEzCEFc7NV6Yhufh918bo0n4du9p7FkpGupzsLzwU5kEg4KN
dj2HaTgd+WWd/tZJ2Lgr7tRTVRpe2MfqnzM7AeUvzvGt06KhtQL/XEXdBLzs
pLdGGNDwYZPpcec/E3DsmGvEMRMaZkXtjur0mICpgJ0WddY0VKi94td3dwJi
ZrMUTZ1pGDfhr+F7fALu6F7jYHlHw897Bg9PbJmAbfGzVf5BNNR4nNi2ODUO
9Xw+gTJRNBSp+FSTVDkOnuYH7hYk0LD9lFK+aNQ4nCwv329A0NAINv0HTuOw
KGnCnKigoX/B0Tj+q+OQ4MZR4N5KQ+kF7ruBcuPwkBr6bgeNhsWhi25t3OOw
W1XlavIkDSPsnTV+5Y9B+9fW3edXaMhSNJkubDUGPstPRvt4B1B7bwLBs2sM
NA02pNkJDWBjq2+PXc0osKf9ebl+zwB6ZvDkPXYchQxBzQvRcgPY7KOzf3rv
KFhZDwgdhwFcmxjIx9k6AnvrXvY1agwg9S6nZazrCPQfEP1jpjeAZ+OMj03K
jUCwV6Yt+90B1F3cJt3YOQyXh/RPBlkOYMjWUPsbHsOw9uzMWjmHAfTQdwj3
lh+GwsgPLcUeA3jhedAR6+4hcODY/83QfwCjzlqNrH0zBIdvl5nPhA+gX3Kv
zx35IRjJuXf0bewAul3vW/u8iwHfRdjZd2cOoL6v2uVr7gy48fxrZVrJABo/
v23LeZABm1qPBWg3DqDMiZQA9/ZBqDzScnuAMoCl294O9r0aBFdfaxnH0QHc
pf7qz479g6AyyT8vsDiArU77lFSb6TCj9TsvhpOO/dedhy860eH377NeqgJ0
DFtjIXdZig7GvDS9VlE6Zk1ovLhUNwAipi67LGXoKOt75rL28wFoLNo+slqJ
jurP+xQviw2Al1hGSrAaHT2f6qTdr6TBaRc9F3kdOr4apd95Z0OD5e6pc+U3
6fgt27qiegcNklS8N982o6Pg5Si3g6X9YP55X++87f/Gf7Qn679+2MMs+fXe
lY4ley8p2gj3Q+cV46fiH+k4z1V94W4RFfwSWVWzQujY+ip+2MuSCuc3hKzR
jaFj19KTj8ytVFhlqdTMSKHjqNPn5N+FfZBV2RTmXEDHl6fXFMZZ9sGTvVZm
QrV0jHB/JsIt3AcyHnwKsZ109Akk1mcV90I/LYZVjUHHfQmXqHVWvRB8Sr2i
Y5aObvphRdqivXA5nOpvxT6Iib3vm5UrKbCWxfkWD/8gHhlh7Ay2o0DhDZF9
YcKD2HeOFvRUkgIOGWmzClKDOKAULlrX1AOHt1zJrTo8iHrXUm3jXXtgxGbS
01h1ENWVay9sP9wD3xveXVm6MIiF7G73jpR1w42De3f6GAxikKXVoRt7u2GT
d/GQlMkguvE0xGZ4dUHlyJ1kwnoQ/5kFq1+f6ARXTRZnPedBvOLUJ3X2Sieo
/PiiOeo1iDtvuyi/zeyAmdWKgq5BgyitSNl9QKwDft9t7NkWNYgW9Kpjx7za
wTjvcUx8Almv6zP/tLk2EBFdZ3OWGMTl7weexN9pg0aHn9hTMYi9rJM6B2pb
watdjfdp6yDqO3NOK2ArnFbsa1xLG8S1sje3NMS1wLL/i9CIyUG03W6nybu7
BZKmtz08tjKIaYeMsqn+zWB+KfVwHS8DZ4TuX7y/phn2xOmymAoxML9W6F3g
yyboXDtRtiLGQOeG48edlxrB76GXn78cA70fbqeLPW2E86VSRjLAwCYfAZY3
Uw2wSqJIukCDgd8FjzxPetwAWa9uz1zTY2D4243Svybq4Unvv5yJOwx8dMHh
5X9W9SCDn9+4WzJwIvpcxJq5OugPVri8w4GB/+k2yDna18HXxfodyR4MrOWr
vlLGXgd6Vy0Z5/wZaHlOkGPmbS3wpaxJ6gtnoOH4f/dZhGqhWODHC7tYBn7Z
INU5GlEDL/47rbE+k4G69+pN8g7VgEINRSC6hIE5nnYFc+7VMCbj2A2NDBw/
31V57E8VRHlu/dlIYWBPrEP/xeZKuDmYbG02ysBPrrJcxzgqYfMZnePsiwx8
HcG/nSlfAdURY9xBnEO4ZezTJk/TcnjN9rZBVmAI74UpO4yHlcFxI8mvxaJD
qO+hVSfZVQpzWQWmhjJDaPnnjbns9lKI3XZLfkZxCNU3Rxevvl0C958t//NU
G0IXxRvh0T+KYUdzYOkunSG8mx56d/1METTLH/FNuzlE7uf1ucqniuD9xzpD
bbMhlNBY+if+qRDOjD+SGrAdQmam43LpSAGsnOeddnAdQpGzhfQd6gWQEhOV
LfBxCNGBeLArMh8suE95xIQM4b+LG+LKOPNB4n6PjmrMEPK8umi23jwPugvs
t7emkPVev9012pgLn3ZtGbQoGMLSV70N11RzQcspKWF17RDq8W1yOBdPAGfX
RcfgziFcsWs6nb6HgJxjo+ryjCGkZ+5WUlTMgaeBbzaWzw6hVa/6xVqZbDgw
J951i30YPTe+8pWUyoIB3fzoeb5hdFhXJSK9NxO+xt+0ei88jBNcguLZhzJA
j39JRVxqGPdzfdhVr5oOfI8CuLIOD+Pe7JMPLuinQXG5fL2O6jC+pHMpbbVO
hRdStcGMC8M4LBxVJeqfAgqvzU2cDYZxl7zErTPZyTBG5T4kZDKMsYK3Gp4O
J0GUauTyH+th/FagZRQgmgQ3Q1VLTjsPY3lgiejba4mw+V/Xxw6vYQw33zkK
QQlQbfD8hlXQMLJt9Mj17Y6H12mbJXmihpHc6m9ZS8fD8c2Jk6EJw3gu+IZN
vt1fmLPWzlIghjH+3RFh45o4iK0bfl1VMYw5eP6o6t44uC/rccm4dRgLLhcW
2ArGwo53e0SW+ofxWY/TQbue39A8lDvwcXIYWd+v876Y+AvenzWMl1oZxtN8
O2qKPsTAmagFe4J3BAU0DplF2P6EFY5PZ/SERjD6Q+FivMkPSLl9aMOo2Aha
PMh/kH0rGiyI6o5XciPYUNB52e9OFEhsN4vaBiN4gAhOWDGPhO7nXP/Fa4yg
i/HTthKn7/CpNUL5rN4Iuv888jjzcwRoKZzg7Lkzgr5H+By/ZX8DTr/OWhvL
ERw85e2uNhgOOZPPvqx1GMH3mh8VHLeFw1NtwfsRHiPI/YTbeMvlMDjwJ17u
mP8I/hHxUev2C4VBXq2l2vARDH3ueONQxlcIMx0qMokdwWPdGodV9EPgavHr
DysZI3i1/7S3DVswrN8jdt2/ZAT35v/peZX2GUpdCHGZxhFcy6uqw+EQBM49
1yfyKSO4svh0/tO5QFAEZsa10RHUs32lTpUIgInPfm4TCyOYn1cl837dJ/jB
lLvozjmKqRPO65DFH27pVW3bITCKx9yUGr8u+cKWpAe0JNFR9BxsnNdn94Xa
DZx/z8mMomq3ycvNAj7gYfmNnMwkr3hbyGP/RzhRdVzNTm0UXQy6mdcvfQDm
3g7+9Tqj+FOAeUP5hTf89bBtj7o5ik92DmTFmb4H0wGBSDAbRZlI65DFfi/Y
efqvZaPtKPZrMG1///cWWsPPHzNzHcW2vmPZMnye8IGFsYr94ygaPxTqGk33
gLOGbjWBIaNYad8zoPPEHVgzd32WjRnFq6obKpZVXkPalhzj4pRRlHNfc1ZX
wA0ePzWQNSwgz3cn2KB57hVINc4tTNeMIr8M7TIP/SVQDvoWenaO4hWHD21W
VBcI9Jb13sUYxcL0jc3Bw85wcbTiWtrsKA7GsjtsYnEG7nOme7TZx7DAKUDp
4XYnyP2xapzGN4Z53N9/6bxzhGec4ekOwmP4H9+1gtIpe5AzBlcBqTGUGvgR
E2H2HAbz2rRiDo9hObOpat38MwgTfbpVVXUM////HzqMX0y0WY7/H/4fCeRh
zA==
            "]]},
          Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[
          {RGBColor[0.97, 0.606, 0.081], PointSize[0.006944444444444445], 
           AbsoluteThickness[3], CapForm["Butt"], LineBox[CompressedData["
1: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
Fr7vwUP5RG3F+hoN6jXW+W2Sad+ubmjDMK4Hq6dZfDkt6nc272/D/RxtnEos
fyZ24/sqsQ0VJ252m7Di4RB2Jb00asPfjnO2p1nxJpQKR8k9bcMjr4SO9LPy
0bLMuznv34ZVdRHdCqx8GZv1dicktuEkjfuvHus+PmXN95tVtOEZoS9th1n3
pXzt7addw23YX9hv8COZBJMr4kZtf9pQViLmNoMggX9smcBb3na0yP4tQm4n
wQn1m13nj7bjvXZa3MtpEvRR/wQvq7ejSmkrs5hjFF4Fh1z9cacddaeDW78J
j4K44nEea5d2TPFJFJWQH4WG4YYW8U/teMCz79hF/VGw9bj3bvh7O3Jpynb9
fTIKOyXXaoU1t+N6M/UVCB6FkpbIzTrT7fjc+e779TmjYGF3un4DZwfWv1/3
zrB3FDYLd3uXiXSg4HHezfvZyJBVanvRUbEDTdJUMyz3k+GaJTfXCf0ODM19
eVJYkwxsW5IqZ206cLXDg/eKz8jwNeuC+zefDmznNHEvjCSDxjWS8s1vHfhs
UU4srJ4MtBWn1QIlHfiOz21b7W8yhMbuLGnu60CZ74XFqgfHANW/O3sxO/Dq
J/HnGwzHYIx65YzStk4cP/ddZ4PXGPgEz/z7I9GJ+XFT57BgDI4pvinIutCJ
u0zbuaPmxqBreN+LB2adOGay2kx83zg4eRCn9jt2ostfnx81huOwT9J4aSCk
EzsKBG2c/cehpoX5PSSjE58qrm7EqnGwtnv/RKu+E83LtejsqyaAV/iIDNdE
J7ov0CcK5SegqLSGVszehQKtpI8WTybgtuWddHuhLjw6cIb8K20C1m9htz4u
14Vi8p6eFjOs/T3rs9S0dhdav6s5kXiIAnrXTs3EPOhCTlKnf44FBf6utCVe
9+xCjk8vDnp8o0BUrPU93uguTLyU5bFpnAKq6hsPNhZ2YfmlGfFzByZhlvpt
3KOrC6+/lXPdZTEJgcFKX3GhC01mPTj94ydBUXHw9q9N3dhuQt4bPDUJI8P2
ezPEu9FyOe78Pqkp8PTgHbmn1I2//JN6pW2mQEoyI2KvSTdyOb8wyMiagraW
Szf67LqxKNFJ5svSFNjbUYSC3ndjrfpe6owia94Ju/VdSulGrT1/dwS5TENF
6Z6Pa6u7Uft4n6J3BWv+WRYY/iR146LVJFflhhng2WLAb7fcjTWyycfOXJmB
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
            "]]},
          Annotation[#, "Charting`Private`Tag#2"]& ]},
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.34398, 0.49112, 0.89936], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1: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
zA==
               "]]}, "Charting`Private`Tag#1"], 
            Annotation[{
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.97, 0.606, 0.081], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1: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
Fr7vwUP5RG3F+hoN6jXW+W2Sad+ubmjDMK4Hq6dZfDkt6nc272/D/RxtnEos
fyZ24/sqsQ0VJ252m7Di4RB2Jb00asPfjnO2p1nxJpQKR8k9bcMjr4SO9LPy
0bLMuznv34ZVdRHdCqx8GZv1dicktuEkjfuvHus+PmXN95tVtOEZoS9th1n3
pXzt7addw23YX9hv8COZBJMr4kZtf9pQViLmNoMggX9smcBb3na0yP4tQm4n
wQn1m13nj7bjvXZa3MtpEvRR/wQvq7ejSmkrs5hjFF4Fh1z9cacddaeDW78J
j4K44nEea5d2TPFJFJWQH4WG4YYW8U/teMCz79hF/VGw9bj3bvh7O3Jpynb9
fTIKOyXXaoU1t+N6M/UVCB6FkpbIzTrT7fjc+e779TmjYGF3un4DZwfWv1/3
zrB3FDYLd3uXiXSg4HHezfvZyJBVanvRUbEDTdJUMyz3k+GaJTfXCf0ODM19
eVJYkwxsW5IqZ206cLXDg/eKz8jwNeuC+zefDmznNHEvjCSDxjWS8s1vHfhs
UU4srJ4MtBWn1QIlHfiOz21b7W8yhMbuLGnu60CZ74XFqgfHANW/O3sxO/Dq
J/HnGwzHYIx65YzStk4cP/ddZ4PXGPgEz/z7I9GJ+XFT57BgDI4pvinIutCJ
u0zbuaPmxqBreN+LB2adOGay2kx83zg4eRCn9jt2ostfnx81huOwT9J4aSCk
EzsKBG2c/cehpoX5PSSjE58qrm7EqnGwtnv/RKu+E83LtejsqyaAV/iIDNdE
J7ov0CcK5SegqLSGVszehQKtpI8WTybgtuWddHuhLjw6cIb8K20C1m9htz4u
14Vi8p6eFjOs/T3rs9S0dhdav6s5kXiIAnrXTs3EPOhCTlKnf44FBf6utCVe
9+xCjk8vDnp8o0BUrPU93uguTLyU5bFpnAKq6hsPNhZ2YfmlGfFzByZhlvpt
3KOrC6+/lXPdZTEJgcFKX3GhC01mPTj94ydBUXHw9q9N3dhuQt4bPDUJI8P2
ezPEu9FyOe78Pqkp8PTgHbmn1I2//JN6pW2mQEoyI2KvSTdyOb8wyMiagraW
Szf67LqxKNFJ5svSFNjbUYSC3ndjrfpe6owia94Ju/VdSulGrT1/dwS5TENF
6Z6Pa6u7Uft4n6J3BWv+WRYY/iR146LVJFflhhng2WLAb7fcjTWyycfOXJmB
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
               "]]}, "Charting`Private`Tag#2"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PlotRange" -> {All, All}, 
             "Frame" -> {{None, None}, {None, None}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[0.006944444444444445], 
                RGBColor[0.97, 0.606, 0.081], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[0.006944444444444445], 
                RGBColor[0.34398, 0.49112, 0.89936], 
                CapForm["Butt"], 
                AbsoluteThickness[3]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> SmoothHistogram, "GroupHighlight" -> 
             False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {All, All}, "Frame" -> {{None, None}, {None, None}},
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
            "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.97, 0.606, 0.081], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[0.006944444444444445], 
               RGBColor[0.34398, 0.49112, 0.89936], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            SmoothHistogram, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}]},
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.34398, 0.49112, 0.89936], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
zA==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.97, 0.606, 0.081], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
Fr7vwUP5RG3F+hoN6jXW+W2Sad+ubmjDMK4Hq6dZfDkt6nc272/D/RxtnEos
fyZ24/sqsQ0VJ252m7Di4RB2Jb00asPfjnO2p1nxJpQKR8k9bcMjr4SO9LPy
0bLMuznv34ZVdRHdCqx8GZv1dicktuEkjfuvHus+PmXN95tVtOEZoS9th1n3
pXzt7addw23YX9hv8COZBJMr4kZtf9pQViLmNoMggX9smcBb3na0yP4tQm4n
wQn1m13nj7bjvXZa3MtpEvRR/wQvq7ejSmkrs5hjFF4Fh1z9cacddaeDW78J
j4K44nEea5d2TPFJFJWQH4WG4YYW8U/teMCz79hF/VGw9bj3bvh7O3Jpynb9
fTIKOyXXaoU1t+N6M/UVCB6FkpbIzTrT7fjc+e779TmjYGF3un4DZwfWv1/3
zrB3FDYLd3uXiXSg4HHezfvZyJBVanvRUbEDTdJUMyz3k+GaJTfXCf0ODM19
eVJYkwxsW5IqZ206cLXDg/eKz8jwNeuC+zefDmznNHEvjCSDxjWS8s1vHfhs
UU4srJ4MtBWn1QIlHfiOz21b7W8yhMbuLGnu60CZ74XFqgfHANW/O3sxO/Dq
J/HnGwzHYIx65YzStk4cP/ddZ4PXGPgEz/z7I9GJ+XFT57BgDI4pvinIutCJ
u0zbuaPmxqBreN+LB2adOGay2kx83zg4eRCn9jt2ostfnx81huOwT9J4aSCk
EzsKBG2c/cehpoX5PSSjE58qrm7EqnGwtnv/RKu+E83LtejsqyaAV/iIDNdE
J7ov0CcK5SegqLSGVszehQKtpI8WTybgtuWddHuhLjw6cIb8K20C1m9htz4u
14Vi8p6eFjOs/T3rs9S0dhdav6s5kXiIAnrXTs3EPOhCTlKnf44FBf6utCVe
9+xCjk8vDnp8o0BUrPU93uguTLyU5bFpnAKq6hsPNhZ2YfmlGfFzByZhlvpt
3KOrC6+/lXPdZTEJgcFKX3GhC01mPTj94ydBUXHw9q9N3dhuQt4bPDUJI8P2
ezPEu9FyOe78Pqkp8PTgHbmn1I2//JN6pW2mQEoyI2KvSTdyOb8wyMiagraW
Szf67LqxKNFJ5svSFNjbUYSC3ndjrfpe6owia94Ju/VdSulGrT1/dwS5TENF
6Z6Pa6u7Uft4n6J3BWv+WRYY/iR146LVJFflhhng2WLAb7fcjTWyycfOXJmB
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
            "]]}, "Charting`Private`Tag#2"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {All, All}, "Frame" -> {{None, None}, {None, None}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
          "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.97, 0.606, 0.081], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CapForm["Butt"], 
             AbsoluteThickness[3]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          SmoothHistogram, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, InsetBox[
     TemplateBox[{"\"essay\"", "\"computational\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.34398, 0.49112, 0.89936]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0.97, 0.606, 0.081]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.15, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{None, None}, {None, None}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->{{
      StrokeForm[
       Opacity[0]], 
      StrokeForm[
       Opacity[0]]}, {Automatic, None}},
   FrameTicks->{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
     Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}},
   GridLines->{None, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.4, 0.5], 
     AbsoluteThickness[1], 
     AbsoluteDashing[{1, 2}]],
   ImageSize->Large,
   Method->{
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
     "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , 
     Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& }],
  InterpretTemplate[Legended[
    Graphics[{{}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.34398, 0.49112, 0.89936], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
zA==
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.006944444444444445], 
            RGBColor[0.97, 0.606, 0.081], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJxde2k0lW/UvqSkUSVDoSilQipKaLeLRCQhQ6QoRaofpZIQyRBCMqWSscyz
MveY53meh+PgGI/jOEcT//Nf632/vM+XZ11r3+vae9/r2Xtf+8MjYvaftjk7
Gxsbz2o2tv//Pmmkls0j2USw/c/zf/G77GSG0bYmoulnyK4OTzto373PWmWu
kch+UDf38fdzeNM2TWvLbSSy5g+5V7x8AYpvsp/cet1ILExw31AWcATqaael
ec1GwiBwv8e/SieIoam8cBZoJK6cK+GwUXEG/W9bljePNhDc6VLrn8i4wAbj
LufPKQ3EqwdHNntLvYIi7sjVEs8biJ1aOi9PyrrCo3JL9zylBqI4/D33arXX
sN/+GJfa5gbCLiexyv6eG3RL/fHu7KonOKivuKXD3OEtqXTzneh6IokjiMjp
8gAM9XlHf1BPDMifl0zd/wboGld5XOXqCft4zmMZr70gbpVwyNbV9UQqh4aC
+YI3GH0fE4ioryM8KnkuWz9+C1usUj9JhdYRJ2+I8Tiv8YOS3Xa7C83qCI3e
rinRq/7wtA2j1CXriLaEgiqFo+/g0BsusR5mLcHOJbhwly8A+k+3fLMoqSVi
RQ7zcK57D+9oYYeYPrVEkaTp4RerA0H5261kN/1a4vXwrI/4+iBYMpKQ5hGt
JZjPjg8+EQyGJO7FjKjpGsLorhhfnXwI3CgvlD36o4ZwIUc/DjYPhe327jk/
XWqI1Q5fn537/AEqpC4raGrUEHfEkXRmJAzsSXxFfbw1BOmrVSKb7CeQCh1C
q+FqoroumLoU9BmGNeJLfyVWE19FSAvha75A0KpHKp5Pq4m1/G/cZM9FgOp3
+Wres9WE2wmvaiuuSPh7b7VG7IZq4vZSqHVaVySk7q5rON5RRSwYmH04lxYF
t9oCr5REVBFu8kWXzPyjge/N9TYtqypi0W/bc63nMVBzer/+oGwVIW1I79e0
igUn2mz3A7Yqwu7u6g0Rd77CsW8/jP/WVBJT4suaHlbfYMzIedArqJKgCG5I
UrWPg1BuNTOBm5UE/7Rsjfj7eNAo30r+dqiSOOMiTLn/PQHY7HvunlisILzn
u5qujSZCllT0ZNnPCsLI4l+xnFAyWJCsHuh4VRBdP8dvXzJNgZ2hMtRh3Qpi
dnZ/zmBaKjRo/HtkvbuC4Hq8+eUu9zR4tapicZlSToyyTejWn0qHE9997d5m
lRNJvc/E4hfSYeKe/p9dL8uJxaseBS2ZGfBp9x6nBLVyQv/F+sEH9pmg1TbB
doqnnPg8yzgTfiELON6ku1YOlBEPOMRSPXZlQ85p+7V68WXEXj872cuMbLhH
O/dm9HEZkXjsit6Oru8g/G3DxsdQRtwvKri4TPyAFqM231VcZcQj0VtuEuk5
4M79eat/aynx4cdMV3FcLsiXmwcKh5cS2y+HhA1+y4Pp51J8yRalxLB65/q4
lHyIkGJ+UDheSmR4Pd+gWFgAuqSfgjX/Soh2WSYlv7UQ1oV6fjGoKiH+GPRo
XaAVQYHGFdHxgBLC3erJJ6eNBDxctTP2yfUS4t6RHTP/ogkQ/T5ygEO8hND9
qq2ZdqYYOu4lJgTQigk2fT+OmMFi8NptKylSWExU0Br6xlxLANoU01I9iol1
hrR97hKlQPVccxy0iwmdy5PRvt2lEHO6IbtOsJgoeEd+t9G7DAxowXJG4wTx
6K+j/4az5bDx2418SjpBbEiZiAr+Uw6EkTjYORDEnZ2S+3PyKuAR9zyx9gJB
XA4n0Z47VcL+8lyloK0E4at2LZmsUgVZCxxvL+T8JKKEL/at4qkGwevBAbcv
/STGeKV7O8jV8LriQKjLSBGRvS33qlVBDUwcyf0c/qyIUBI4sq88pBa0PlyM
zt9YRNR911emPKuDHPa+uK7IQuJY14uWXuN62HP/QcriiUKiLvYze4RKA3i2
L2duqysgBgeHBORkG2Ea/HOPmBYQysI7srR5mkA3TuSnBiOfWC/yb4+tfxMU
bM0ss/TOJ3avU/63srkZ9r1QrnHfk0+EA/d/i37N4DPa3hidnUd0zd7h1dne
AtRLd9uJi3lEu/HX9XwfWsDgx1JP/2AuUVcv3gUirUDs8Rr6bZtL/Fizzaky
sRXEvXaN8a3PJXJ11e4ny7WB/0LSlMyXHCJfOMplurIN6MYwf0Umh3iSKbPe
2bAdjCsaGQ+rfxA98pRCs5l2KDti+tfb5AdxzezET1/XDpD4QFsVv/CdkDHd
EfZvVycEsr/mrPD8Tgg0SSjFfe+EJasdm0hC3wl69nE+D50uuNn+dRtbZjZx
botvzztaF1SBHL+QajaRydyb+/N9N0jHVQvJ92cR1k62KpwneyB0q9Fe/UdZ
RPVGsqNJXw/8tZ8Wt+XMIr6KaZbmufbC7VFHqXefMomV3RUkbsk+qLu0RSbl
aCaxaJTAe7WrD2R+RJyqrcggvqqPL9u79UPonmNnJowyiAjXl0lPZAaAzatU
ec18OvFh8Er4SfIAWCzoXhR1TyeyI4TLMkIGocl47PKZXemEVaQ5TosNgVzF
s6vGaWmEt+ajjjrnIfh0hMvo+fk0YsI4VeNx3xCsOyZbLJGdSui2qb7plBuG
Lg6DujuDKYTOsdyj80HDENdp3xnBlUI8veGa9GNhGOwSPo/0HE8mtnlz7RXV
HgF0JGZ4TJKI46edXQ+kjwC3FmlJ0zOR8O75+6qImwRDoms53mQkEE8FrkX1
W5MgbVF8S2lfPFHWQrZ60UwC5yr1nf/WxhP27nWP3x4bBdWPD8VOHo0j3rsc
GeYKHAX+h++kbYy+EemKtAdji6MwgVkKiW5fiYprp+P5DciQs71ThZwaS0Tm
HP0dlEcGz7FfV3b3xBC/ZFOidITGQCtX8LohRwyxLGnWreI8Bnt8zli8l4om
rvGFRd8mjQHVxOxxvUEUscr1zcdIlXEgjro5cbpGEl/LL+TQ4sfBnyPuzdnk
CCLZVyFZY9MEpKUEHWSmfCFubbyzM8Z6ArR0e89YrQ4n5INe+c20TgD11x69
Qf1PxPGiJ1FCJyng/+XOfZ2kMKKQM6dPPIwC0ueTXlWyfSAMe/uNVv+jADE5
H6pwNYTY943rZ+SNSbjpfzI1NT6IMH940HapeBLYTjiW711+T6wLVOP4u3cK
InpLekO0A4jub2/2RbpNAbqso2345k+8iOBq6x1j2S994mZjviV+nXLLjLgw
DUOhB05PfPEi/N/kfRn9Ng17RjMsm1Q9iPcpOzZ+4pyBm0cgOGfelRgIqdhY
cGcGIuyrSyLCnAlDr1nhU+Uz4OwdP7DVw574vlgksG7vLLCJEidHuh4TpkPL
zsLOLGyTLGJ+9R5h9zHxnE0fCytmf9tAMyR8zrN1Lp6cAzbc5GTSsQ5LCnSJ
yAAW3hrsZ/PSCLflrnt0b3oOnHs/7+AXtMJLy+T5KFEqoH5OuoKiLbYUi60P
0qQCQUQaWE3ao79ZaehaeyrsCSp/eanOGV9ueFJPi6EC20V5HfO9rzG15eu8
biPr/HLKfkd7DzzBf99S/BcVnDP3/g5s9kLbB2ZZFqLzgBah9Univqh2gOq9
VX0enH3dtUZ++qOEjIyd8ON5oE6g/EOrAGySSL3uHTYPWkp/9v7mDcT3jDNy
usXzkPY5e5N7SRDSlh0En4zPA/fSf8ytD0PQOPGtyeRGGlhrHxr+LPAB20LM
dqYdpcFQ0mjNwfIwzG590F1ylQbI+SUr2/oT/lDv1t79nAYRpobhZwXDMXCN
7saSjzRgK9juWV/5BZ+zh099K6SB9IbxnKTcCNyTUECtH6CBhVxZ8iO/SLyh
vOrC0RUahJpHRsmZR+HVGD2RRuEFqApwClmWj8bUuDN1MacXYOmnkU8Zdwye
dHOcSTVaAOkZORevsRj0902gzdgtwM2dvE+1CmLx5ov0POOgBfC/sHCPN+Ar
qv38ffB32gIQtk03+u5+Q73br7XLaheAGpmsG3U6Drmzuw1zyQsg3uilZrE9
HpNDA293Li+Awd+7IEWJxwsTDrOCfHTwPHj+OL0oAd+2yzp6StEhR09UPC8w
ESW02ev4z9NhwnVF0PleEgLH3di6a3TYk963VQWT8cCx1C9R/9FBayB37Ube
FDyQ7Df+wZUOzhtC/jRPpaBb4nRoejAd0uRsqSHFqRjxdPv0RBwdqBlxtBT1
NDSLkTc8k8fyr8Y38+57Ggqc0tuQVcPiH3IbtxVJx4ZTCUkqPax4ntKH9X3S
0YFpPcyYoIPBplt98sx0fFHw9WUZg8UX3dwhZJaBGy5cU05dvQie8tjMVp+B
VQHDUj+2LMKe5pRa0slMPMDVKNG3cxFy7gpVVERlIrfFWnVhsUXQWvYm4jdl
oU9eWquj1CJMBP7O87HLwgGfXVv+nFgE58OW2f+RspCrAR2DYRH4SzpTtTWz
0ftg3mWt84uQZqCSIJubjQnpT8UPqrP45rJi+Pd9x9XOaypEtFh8bnu//PH9
jof8XvrL67L4BAM+DPz6jupD4+a2+iy+TLbA4ts/kBzyT77JkMWn9p9vTOMP
1HJg0DWNFkF1qN/TQz4Hrd6mnptn4aGnGq73YnPw0L0u0RwWttuU73iJOxen
n43UxFxbBO6Yg3bSL3JxRuSmSY4Bi08+9NH2sVzcM5QqTb/K4mte+4ChlYfJ
7l7qhtosvrtP7nbn52FOxvQOyiUW3zLJtGB/Ps5tcaXHqLL4grSNv7zLR0X/
ET3fc4sQd7hY79XffBTcfjH/q8IiYMmRK+Z3C7Bg0CNl7vgidBmEq6u2FGCs
wHjtvcOLYD23UeXw6UK8vEasUEB0Eda5v8DNcYUIZwuvL/Ox+AQn5ee3FaHR
4WS9nZtYfJkGsm2ORUh+y2f/3yoWn1rlkR8TRagCrZ4rdDpYD8keCtP5iX+l
HgTXjdNh3bOYfY5FP1HfRTCmq5sOTe5vtqTxEOjEu7ZErJYOgi2Ej8hFAk9u
uLPlez4dLISWuN6/JPDhbGGedyIdsiyOeHBkExgty8keH0YHtqw7HE8nCWTc
pxzjfsP6vlc+u4zvLsa0jwsJpU/p8Oli+7LB1WI03lS2UH6LVR9BGx1qvIrx
W1e5iYAWHWSGlX4pEMWoaawQRSiw6kHixdPkxWIkRvYeK9pPh7pnGQvCh0uw
T3V7I89WOvCXUqz9b5Zgx+durPy9ALc3i8yuCi7BXwtqRl2kBUgzNLB6XFuC
dlt3cajXLcDfGL+JUbZSbP2wSl00awE0qBXmeidKcaezhoDpxwUIVVgeqbQq
RdNok/D1rxZg1F325qnIUnTXaWAXtWD1l5b7/Qkdpdj4c+37hEsL4CAUc01w
YxneDip3+HaM1Z8sejvfni3DHSMa5wX5FoAna9vVladlqFm3YLHxDw1urqi1
WCeVYcsh32cvWP0u6aLL5ZHhMiyihJx8UEyDpaCcOh2+cky1fytMjqaB6vCc
WrlGOepov+MZd6NBoMSByhOvytFzbPOvp3dZ/feZiXLcj3J8XqBUE6pKA4nS
oGKBmXJsH4x9q3WQBnab68FbtAI574aeiuKiQZkhR8Ff/Qr8WVa0JYDC6u+x
Cqcevq3Ax/kUzX3V82BMffR9sKQCNdiDza7HzUOcQsLxK0sVWPyA1/OsxzzQ
3YfTSiQrsYKpf6rdfB6UW/ilZG5V4ub01XxCyvPgL6SVGBtaie8D/mQKseZR
n4WHOF9DJfo+bovuXaGCeFZRrOfqKgzdTiIZ9VPBdmVR9LdcFda+m1mJymPN
t4uSEVYPq9BKNqghO4QKG4NvC/VHV+HumZDzH2ypYDD8MUyzuwoPJd54pX2F
CjESrXzE5mr8rELcG5OkAv3Z+qCjytX4+vTRrdfWs+Zt6dlt0c+rsYB/RNi8
fg58Nj/340mtxh3n9G9Nus1Bl2HaRvfRauT64067BHOwL3b8DVOgBpf/GtWF
MWbBmirMaXm5BpNflGr0psxCgYLe657XNXjDX4Ft591ZWOfxdpVGXg12PjQ2
N909C7otZU6FczU4tfPOk4JOlt4Q+vtHSqyWVU/rf8n6zwDV4vjziGu1qO5T
X9ylOgOKWfcYW/1r0TcrsSt11Qx4rkQ+di2vxTLb9LnyvGlou9hNpf+uxYPe
XKNitix9E8z98I50He7UWmPZIzkN94cvTHWa12Htyy+es+NTkCPx0kLtYx0m
r20WehA1BRx238l5TXWYx3z/7+b1KdAqnTGTWFuPp68n0tv4p+DTZrGhzwr1
6DpL6Wttm4RpQ+PrW2zq8Y6Fg7XFu0mQi33f4/y1HtU+Jmz6rDkJr6k1+rTe
erzCQ/rssHESmhTY229tbcAckd/2W2spIOhxSrtdpQE3sVnSzb0oYNFi3aji
0ICRjBDH1xcpkCUUp5GT3oBhERNazzZQgM1ysPrgeAPuod7wUa2fAI0s3gsf
BRtRqNf2CLv/BISuXCrbqN2I2TGj/Ck6EzBx0e2sk0cj5gW+5dDjnwCZ4IKi
uYJGtBrXerN6YBychxcUTGmN+FP0lxIRMw53goOMKdubUP/FnbNB98dho+LR
XVFSTUjXOpLtLTsOGcN13dfUmrBhvYdH0soYGHhYhG6/3YSPKny12WrHYFmC
Q7/OqQn5KHcq/ELGIKblyw63D00oJtQGt8zH4KKdQtvprCY0ectFeiUzBjSh
zgBGQxO2Kq4MMzjGILT00ZVUShOWmx58U9FBBrDczG3B0YyLh5Zf/Ionw+jm
hIY9u5vxqKHJuhAnMnhlnX/bfaoZlY59lf2qSwbpa8PqAbrNmCnPVi8pQYaO
FYf16v81I/3msr7MGjI4xPJXr/ZqRqnpc7uJwVEQVc/yKIhpRrQ9dbAzfxSq
qJdVnvxsRo99dS9ffhgF6+ApDqmeZtwtelGwyG4UeBU9SsfozcjnMOQeajgK
BcOir75sacFJs82V2xVHwcyjCA0OtaDj84dHZfaMwjrJayvc51tQtPz8l+U1
o5DSslhYfaMFLxgucT6bIYGu3TuHV/YsLPlra2QHCX4LSSooBLWgP0XlsnMx
CSJKq34tpLbg9RLNeL4UEqha3s5JqmlBfV68ee8TCWY3sz0zJ7dg/Tv6gRc+
JAjM+igrzNaK4pxzazWcSCB/7SS9Y2crch2/f2zQhrV/rbRk+Mm2YtpEya0T
d0ngHvvQRlWrFV0erOHXMSGBhPp66VVWLPtsg+sJfRK0UGNnc91Y9r1eQsNX
SGAXfDb5UUQr3hQ0CdPRJIGwYr/V4fxWXHV73xFfDRJUDNsdGm1vRVFXsVJ/
Fr7vwUP5RG3F+hoN6jXW+W2Sad+ubmjDMK4Hq6dZfDkt6nc272/D/RxtnEos
fyZ24/sqsQ0VJ252m7Di4RB2Jb00asPfjnO2p1nxJpQKR8k9bcMjr4SO9LPy
0bLMuznv34ZVdRHdCqx8GZv1dicktuEkjfuvHus+PmXN95tVtOEZoS9th1n3
pXzt7addw23YX9hv8COZBJMr4kZtf9pQViLmNoMggX9smcBb3na0yP4tQm4n
wQn1m13nj7bjvXZa3MtpEvRR/wQvq7ejSmkrs5hjFF4Fh1z9cacddaeDW78J
j4K44nEea5d2TPFJFJWQH4WG4YYW8U/teMCz79hF/VGw9bj3bvh7O3Jpynb9
fTIKOyXXaoU1t+N6M/UVCB6FkpbIzTrT7fjc+e779TmjYGF3un4DZwfWv1/3
zrB3FDYLd3uXiXSg4HHezfvZyJBVanvRUbEDTdJUMyz3k+GaJTfXCf0ODM19
eVJYkwxsW5IqZ206cLXDg/eKz8jwNeuC+zefDmznNHEvjCSDxjWS8s1vHfhs
UU4srJ4MtBWn1QIlHfiOz21b7W8yhMbuLGnu60CZ74XFqgfHANW/O3sxO/Dq
J/HnGwzHYIx65YzStk4cP/ddZ4PXGPgEz/z7I9GJ+XFT57BgDI4pvinIutCJ
u0zbuaPmxqBreN+LB2adOGay2kx83zg4eRCn9jt2ostfnx81huOwT9J4aSCk
EzsKBG2c/cehpoX5PSSjE58qrm7EqnGwtnv/RKu+E83LtejsqyaAV/iIDNdE
J7ov0CcK5SegqLSGVszehQKtpI8WTybgtuWddHuhLjw6cIb8K20C1m9htz4u
14Vi8p6eFjOs/T3rs9S0dhdav6s5kXiIAnrXTs3EPOhCTlKnf44FBf6utCVe
9+xCjk8vDnp8o0BUrPU93uguTLyU5bFpnAKq6hsPNhZ2YfmlGfFzByZhlvpt
3KOrC6+/lXPdZTEJgcFKX3GhC01mPTj94ydBUXHw9q9N3dhuQt4bPDUJI8P2
ezPEu9FyOe78Pqkp8PTgHbmn1I2//JN6pW2mQEoyI2KvSTdyOb8wyMiagraW
Szf67LqxKNFJ5svSFNjbUYSC3ndjrfpe6owia94Ju/VdSulGrT1/dwS5TENF
6Z6Pa6u7Uft4n6J3BWv+WRYY/iR146LVJFflhhng2WLAb7fcjTWyycfOXJmB
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
            "]]}, "Charting`Private`Tag#2"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {All, All}, "Frame" -> {{None, None}, {None, None}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
          "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.97, 0.606, 0.081], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[0.006944444444444445], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CapForm["Butt"], 
             AbsoluteThickness[3]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          SmoothHistogram, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"], {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Frame -> {{None, None}, {None, None}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}}, 
      FrameTicks -> {{Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , None}}, 
      GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
      Method -> {
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
        "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , 
        Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& }}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.97, 0.606, 0.081], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {"essay", "computational"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True}, LabelStyle -> {}, LegendLayout -> 
       "Column"]], {{0.15, 0.8}}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{
  3.91048626857325*^9, {3.910488382369715*^9, 3.9104883884961853`*^9}, 
   3.9106805715057616`*^9},
 CellLabel->
  "Out[311]=",ExpressionUUID->"b72af82c-171a-451c-9e60-0673b672f311"]
}, Open  ]],

Cell[BoxData["\n"], "Input",
 CellChangeTimes->{3.9104883822096663`*^9},
 CellLabel->
  "In[312]:=",ExpressionUUID->"75a27f09-020c-4ff8-bbcc-6ea8ab443d0d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"KeywordPlot", "[", 
   RowBox[{
    RowBox[{"Normal", "[", 
     RowBox[{"Keys", "[", 
      RowBox[{"TakeLargest", "[", 
       RowBox[{
        RowBox[{"Counts", "[", 
         RowBox[{"TextCases", "[", 
          RowBox[{
           RowBox[{"DeleteStopwords", "[", "webpage", "]"}], ",", 
           "\"\<Word\>\""}], "]"}], "]"}], ",", "10"}], "]"}], "]"}], "]"}], 
    ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", 
    RowBox[{"PlotLegends", "->", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"Normal", "[", 
        RowBox[{"Keys", "[", 
         RowBox[{"TakeLargest", "[", 
          RowBox[{
           RowBox[{"Counts", "[", 
            RowBox[{"TextCases", "[", 
             RowBox[{
              RowBox[{"DeleteStopwords", "[", "webpage", "]"}], ",", 
              "\"\<Word\>\""}], "]"}], "]"}], ",", "10"}], "]"}], "]"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{".15", ",", ".8"}], "}"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"PlotTheme", "->", "\"\<Business\>\""}]}], "]"}], "@", 
  "webpage"}]], "Input",
 CellLabel->
  "In[313]:=",ExpressionUUID->"16960c6d-4dbd-436c-ac05-6554abec1862"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, 
     InterpretationBox[{
       TagBox[{{}, {}, 
         TagBox[
          {RGBColor[0.34398, 0.49112, 0.89936], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1: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
eTUO6NxS6/2/70HCKPratn7T/4f/B2Lknd4=
            "]]},
          Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[
          {RGBColor[0.97, 0.606, 0.081], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1:eJw9e3k0VX/UvqSkUSVDoSilQipKaLeLRCQhQ6QopVRfSiUhkiGEZEolY5ln
ZXbM8zzPw3Vxjdd13auJ3/2t9b7v+eesZ+3Pevben3X23s/+44iY/adtzs7G
xsazmo3t/78Hiu7afjvbQrD9z3PSSC2LR7Lp//D7rCSG0bYmoqkoeFeHhy20
795npTLXSGQ9rJv79PsFvG2bprXlNBKZ84fcKl69BMW3WU9vvWkkFia4bygL
OAD1tOPSvGYjYRCw3/1fpSNE01ReOgk0ElfOlXBYqziB/vcty5tHGwjuNKn1
T2WcYYNxl9OX5Abi9cMjm72kXkMhd8RqiRcNxE4tnVcnZV3gcfk9t1ylBqI4
7AP3arU3sN/uGJfa5gbCNjuhyu6+K3RL/fHq7KonOKivuaVD3eAdqXTznah6
IpEjkMjucgcM8X5Pf1hPDMifl0zZ/xboGld5XOTqCbs4zmPpbzwhdpVw8NbV
9UQKh4aC+YIXGP0YEwivryPcK3kuWz15B1ssUz5LhdQRJ2+I8Tit8YWS3ba7
C8zqCI3erinRq37wrA0j1SXriLb4/CqFo+/h0FsusR5mLcHOJbhwl88f+k+3
fLcoqSViRA7zcK77AO9poYeY3rVEoaTp4ZerA0D5+60kV/1a4s3wrLf4+kBY
MpKQ5hGtJZjPjw8+FQyCRO7F9MjpGsLorhhfnXww3CgvkD36s4ZwJkc9CTIP
ge12btlFzjXEavtvz899+QgVUpcVNDVqiDviSDozEgp2JL7CPt4agvTNMoFN
9jNIhQyh5XA1UV0XRF0K/ALDGnGlvxKqiW8ipIWwNV8hcNVjFY9n1cRa/reu
sufCQfWHfDXv2WrC9YRntSVXBPy9v1ojZkM1cXspxCq1KwJSdtc1HO+oIhYM
zD6eS42EW20BV0rCqwhX+cJLZn5RwPf2epuWZRWx6LvthdaLaKg5vV9/ULaK
kDak92taxoAjbbb7IVsVYXt39YbwO9/g2Pefxn9rKokp8WVNd8vvMGbkNOgZ
WElQBDckqtrFQgi3mpnAzUqCf1q2RvxDHGiUbyV/P1RJnHEWpjz4EQ9sdj13
TyxWEF7zXU3XRhMgUypqsqyogjCy+FcsJ5QEFiTLhzqeFURX0fjtS6bJsDNE
hjqsW0HMzu7PHkxNgQaNf4+tdlcQXE82v9rllgqvV1UsLlPKiVG2Cd36U2lw
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
NzMN
            "]]},
          Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[
          {RGBColor[0.91, 0.318, 0.243], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1:eJw9e3c4lX/4vz3KPs5xNJBkFU2p8Lxv2SWKkpYoSRSliJIUKRTyoWSnjJQi
oqzsPc5eyMjKKGSPfM/3un6/7/nnXK/rfT/3fL3v+7n/eDZd8LS5xMfDwyPL
z8Pzv/8/vl/2zTCkVPD8v99a+5HAg8+q4f/jA9mvHEbjqkHh2rONjzviMbdl
c/2Yt9Xgdk2HT3tfIhZvNS9vkFsNmF8yjedtEtaUmjk3UFINl3/1pz9STMEW
p+zoEfXVoFNs8y3tRCqmYSKUr0uthtpmotTg5tfYqZdfonp+VEPm31v6tMXX
WOgvZ4/QkWpQufgDV8hJw77qyVrumq2GP7bObHr1G2z4WbVGB28NlI9EHbhf
+BYj9ngJB4vXgMrGH4dXP6dj5ruUB7bJ14DawbLgt98yMN9gchVdpQYWLu4q
KW/KxDIZgakBO2pg63cBxZTBLIypviNATb8GPhuF7IkTz8aE7nafIZnVQPG5
6bYV9B7b2xqx38+2Bma/3VqzJeAD5qKIySmfrwENvjwT54Yc7MWN8ekmtxq4
huHX4xQ/YXXViZSbPjUQe5SzzcQwF5vBW+ZueFgDWclj/54v5GJbXJee1T6r
gdz3r2OSvuZhJ4qz3T1e1cCzugjxFwGfsWCx0xZy6TVAKqLjsg/nYwUOomoV
uTXgjzqZIkoFWH/uV4Erpdz4VwbX9i0VYLL8rn3SDTUQrZDQfan7C2Z8Qq6i
mFoD6467LdU0FWI3M+uSLnbXgCRz7O6O8iLszYL3XbHRGsBbaI2zv33FqIe3
nPoyWwMWPiMmf8u+YXzJtL0OfLWQT6D2fWwqxnZNBMkKS9RCfdv3B6inBLtw
cPfUJ/laOPTljz7rXykWHdPXbr+lFnwYh0M+qJZjVYPPc3h31oK4TKHyxMnv
2OQ+w/Bs/VrQnsiPdreowDaFT7jamtdy4/s80zRagR3rSjFdtq0FfGtw+I7/
KrHA7dYq6edr4dszZm0hqsJyH/zjtXKvhf7Csj2+k1VYDzWne9anFmJqM4Mj
s6oxKdVzZSkPa4Fz/oa/3KUaDHzFEswjamG69tGSplot5tlU4jv5iiu/e+N8
/+9aLGWDu118ei0M8MXecyytw9o81u0xyqsFY/3+7K+R9di/ikbpsdJasNms
nSdypQHTxvn9iWmohUCVWxR380bM4ZJ6qwGtFtzPuTquaDVhEUXM7MHuWtBs
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
bVu3yf/D/wNtBFkE
            "]]},
          Annotation[#, "Charting`Private`Tag#3"]& ], 
         TagBox[
          {RGBColor[0.448, 0.69232, 0.1538], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1:eJw923k0VW/UOHDlmySlUEkRIhVRKYpsuzJGpaSBVCplKqTMc2RIkmgypLhJ
kTHzcMyueZ5n13hxzVPSe961fr/3/nPWXuc8z+fZ+551zrP/OIJ3zS4brGVi
YtrAzMT0v8eu3Ic2307XEUz/7ye5kYvpWU3Z/8X5Z1Ozyz6XEQUpbtGm3HZw
xUHXXsCsjPg41c168509DCb/O2EFZURkIVekorgj2IxHzJdvKiMo57omNzQ7
wcZ9qsmCnVRCKso0tlzdBUJvjVlYx1CJ97Lnpc1lXEHyvb9kpT2V2Dm8xmFS
wg3yqo+NC6lTiVVaXVjV0edwhbX1hw0vldCQ8dnw5qw7DKKjYdVIKaEewOqe
r+8BNraC+4TTSwkf82NK069ewMbEon5br1KimVXqv+RSTwgdNfpSfa2UeAdt
rOGc3iC5d/NtEdFSwlb1nJyWqQ/k6Sbutp8vIR4+Cj1q1vQSrgRebaspKiG6
s4PPfLr0CgYrlt/vCyohLjy44+Xc5Qc26z5rO9wvIV4uTdgNgT+wwVmuOqkS
4sWxHb/4ed5AqNVQjShzCbFm7QXZM3/egGTcSz/HumLCzV30acJwAOQNSWrU
fykm5DyUxap63oKWQMOGAxbFhFlbRsxKfyAMXrcpccJiQi0isDBiOghs3uz2
aOAoJm4pf80R3/Qe2MqIMwe7i4hFuPiA+dgHCF1rwOTyq4iALx/XvXv4ESTl
NuQ0OhYRsebc97S/f4I8y1h7sfNFxFjJWE7yfDBoxVw66bq7iJjiHK46oBUK
g7S5+SZ6IWERcCldPCcMbPg+JYtnFhIRdQ/W794dDmxX4YmbTyHhleiuT+sJ
hxC/PsmWG4XE5RR+zrjYLyBZ8mL80IFC4oNB9nCW21fI+3fw5/PFAkI6vaP5
4p0I0DpRbdhaUkCcbaue+KEcCQPmlvsk3xcQDbf+XuaUpoBN9A6a+4MCwm+f
+YlyiW/A1pf5pe14AeEjnt6660gUhPDeuX14XQFBb+Y3U5f/DhJa//G9aMgn
1gdsF/mqFQ15L7+3tUfkE04R6ziNnv4ArUKND0cs8wm7cGWx0c8/YWBlUtvz
TD5RNm5+0rwpBmyOB3F1bs0n+mR7ypV5fgHb45O1R3vziBROO7EMgzgI+dbp
5xWfR2xguv7t5e14kOh21ehyziNavG/1aHMmQN6OfWzHLuYRtX82198tT4DL
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
ZSW0jKf+L/4fQcPbSQ==
            "]]},
          Annotation[#, "Charting`Private`Tag#4"]& ], 
         TagBox[
          {RGBColor[0.62168, 0.2798, 0.6914], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1: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
G655DJ/PEB/ArVoCIZImbKi4STHfdHIAK91WFR56wwZ5ob5k04sDqL35psIt
CzbktXaM1N8YwDXjZULJH9lwwrd57xGdAVyZ2d8h94kNCXfrHnw1GsCz3jel
Fj6z4cC2Sm/6hwHccyfXlunAhtDuktrLXwZwn9V0uogTG7YH/eaO8hvA1IE6
zg/L2ks7B1dHLfMG3Uu3Luv1e9Lf6WUMoJwUy2R2Od+RlJhSVDKAfhKzPpvs
2bAyLIa+u2kA01tHSa+X6394Ei72cWAAtx0/tGWbNRumxEO0esYG8CA3Q2jt
BzYY0fx9ZJcGkFAXrVZ4ywZatHedHx8Jg9YcUqh9yYZHz9145raSUOmHl3/0
czZ0S365cOsgCRebOpc69Nigwfz8Pu00CRPC+VMeabGhNtE6VVCJhEL/ea66
pMkG5ZcWoyYaJPxxMO2usyobiqTf7Kt7RELqt4fbj15kg9yUycPDL0nIw5Ff
LnuGDWnpz79/+UhCZ5vO/qTl5y31Vr9++CsJG7kvznjsZUOUjO4a5QASRrdW
mw9uZoMo+758RAwJPXe+lIvjZYN/7i0LrmwS8nk8ZIwszcMmyxtpj8pJqCrX
sjl8fHn9gSqDaCGhtLv8k17yPPBwXBLfRSFh68YnF/2X169t4QVtywkSPtwZ
2tldNg9sWznfLg4yytqKekVnzsNrhdMNZzaQce+nuU1cUfPAXCW91ncHGb+O
qlSNfZ+HZ+WSF2ckyNiZVZVh4jAPJMf9HzTOkvGhZcRl5zfzcE9FND1FmYw1
AVrc+GQemnl3MPlvk/Hvblkz75vzcK1m837jJ2S0AmHq1wvzUOEqqFPzioze
DTVLksvvt7zaOj8JWzLauU5NmG2fhxwBnkYnNzJesfsob7hmHk40reSlBZHx
uVbYpo0zc5DgtXhRKZ6MSf/2/HtBmoMDt+Y+hOWSsanp+dTH2jkI2TyZvrKS
jEP521lXcuZgaweDqdNORoUrspPN4XPg5U/b/5tKRk5PMfoO9zlY/4Css2Oa
jD3f05IOfpgDxx29fhacFJSqfMe9oD8HHH3tjR0CFDSZmgzwujEH70OaeGV2
U5DW2ss9LzsHU7q1Cj5SFBRKcSw/JD4HRnv/WE7JUXAT+8RFSf45oFGKM9Sv
UPDe0y9//s3Pgk5EwVjSXQq6jzg6R5JnofNp9oENzygY1LPObF/NLGgcTNN9
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
            "]]},
          Annotation[#, "Charting`Private`Tag#5"]& ], 
         TagBox[
          {RGBColor[0.09096, 0.6296, 0.85532], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1: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
YdA=
            "]]},
          Annotation[#, "Charting`Private`Tag#6"]& ], 
         TagBox[
          {RGBColor[0.46056, 0.40064, 0.81392], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1:eJw9m3c4lm/4/42GlYw+URoqIS2klOrsrIgolZFZpDSkFFGyiczMENmykuw9
btnZe2Q8tsd6Hnvz9T2O3+97/3Mfr+O87vM6r/d1H+f1vv+4D+kYKOjS0dDQ
MNPT0Pzvvbvg2Yeoqw0Ezf+79JYFkma/1f8fP87c0X/fsp5w/lG2ZfqoMWia
zOzK0qknKoLJHf3SJqAk1n6DR7qeULjj2hr5/j3cns7/YHG8nshlXaosSvsA
NxIj43p21hOn28bGGuk+Arx27rw6W0dc+tvTpa9lBudOvGGNbKsjRugj/gpV
mcPpUWXclldHHA49rJ9w0xIEYy4aPg+rI+b3avEEtVkB79NDkX/t64gbfrmv
63KtgZtve8sJvTriP5N+8VRfG2DvG9/uLl9HhF14E6v40RaYQhsuTInWEdEN
N0eZntsB3cPMl4pcdUQM6b7ree1PMC9+6eLLhVpi94Skx+XH9jCcsj3kNFFL
3NWMfW7x1gHaTjfSzTrWEo7GRqsPXD5Dxc/gp5n3agnl+KgY6SRHyBbQ+2u+
t5Z4Yax09Ue/E/yMOHvqan8Ncaenin3gsAt8P0jrtTW+hug4vPbPyMAV3AKr
5ire1RCXHGdaSivcwJLLX+3L5RqCd8wq/p6oOxh4P85T2FZDNAnMZpcoeYD2
ztOHuGqrCV/Xpn/zXJ5wz2X50z+/aiLk+r5Ty32ecG176UiIdjWRFNfXwpru
BWJ2nreeHKsmnsI7AWNPb+Db0EwUnK4ingkd+vba2Ad2mwnumsiuIswKLMov
63yFbQsz75Psqog5MfY3/Kq+sGhY8M/4VhUxcdpA55WKH4xMOl+R+K+K+Jad
aaeq7Q8devcj1rsqCWNnmz+njL5B1dCh7UVRlcQ5391s5z0CIFdnQu+zQSXh
I3ZENS8jEBK6M2vkzlcSpleS3zOMfodg9U+ibLSVhEWn45knAsHg0XLHt6ni
LxHR33Zy35sQsFbgWfb3+ku8tIt8BTqhYFgz9OCBxl+CNiAm5wVHGOjIJhce
4tscvzC7kl4eBkqlFkeHxisIt+Yb1rftw0Hy2k2nuLQK4lee1KiSTAScy981
8dqygrB7qsw3xx4J/BKku2ekKwj2XWzq9/sigTv9Z+rCzgrCOP4FNTTrBzCJ
vufObSsnEtvNLNb8omD51zVz67BywqlspcDHIhrGj7GSJPXKCVlxdV93vRjo
/NF+nfFMOfGg48vcbq1YqDn0I7p6pYxIZPfoUdSIg/ygN8xexWWEzYsPagZa
PyFxzyWD+25lRLaaxiOvl/EQ+nV74977ZcTDHZX9g1a/wIu98VzPgTJC9RB7
ktf3BLB1Cw6IGC4lJl33GRYW/oZ3jHrrzxJLCW4nb/nq94nwxP6szgnTUuKt
HtPZI5xJcJ+WtpR6tZQ4byTzeD45CWQsqo6lMZUSYuTZSHWVZDi/5Odm2lhC
/E5V9XlMkwJCxo+nLn8vIdjD2X34ElJg79QpZTrdEuJoU1x5onYqsLxaziw9
WUKIqe7j4OFOg9WRkn0u88WECPnMVpOmNJh84ml9p6CYmKUnDzR+TYdukuYA
p2MxMeYSHHhDMwPqNAVl2u4WE/rKSqk9AplAtM38/L6nmPizpVIxcTETkpUK
dj7qKyIOF38XqajJgsg6Z6OjP4sI5Ze3PSXissHn1v1WslERcaBM6eIulxxw
KD90MeFSEWHz56iJ7ttcMJGcCDbcWkSoSJ7duPQgD54TmXTiNX8IsWj6LbHy
+aB66dPTFd8/xJP84zwZUgUgm3nnb4HWH6JJLO+AxCECJMR4Tn0S/ENU9jtq
mYQTcCJxyFNmqpBocbvN58tfCPtOJM+xZBcS8TekRoJ/FQJrjIVavW0hMTV9
8e9X8T+wfuRm3le5QsIvX9rJqvgPUEN2HVLfVUjcveZuo61UBH08pE8Hugii
Z+pA7KXhImjw+znS94MgIvVrXbksiqGY8/2t6NcEcVYabs/+VwKp7tcSX4oT
RHR/R2BzUglEMbPuEqYhCI1Rhsy8u6VwYmcKZcSzgJCkquknTJcC23bZjLdH
Coj2+h7mWL8yoK6TLJdT84layW8GCVfKoWn+/Q27G/kEG9fyTP5oOaROsrKy
tOURkW4eJh3+FeA/9KPZ50UeoShdoUgj+xc+dF8K2r+SS/xdb3hyev0vaLY0
PolyzSU0Pkas6aZVAtbonTh9IJfwHD0wFmZQBbyltLMZv3OIlVGdt6QT1bAl
3z8Hr+YQg9LnZA9MVMNA2mm7ioZsQud7cIRKYg2U/yqVVXiSTZyu/H7A0aQW
Yn484Pg3l0UEhjI8az5YB65Bs+2PP2cRIVbNP7vs60D/q0vYOHcW4RhD1VOb
qIO7bodfGMdlEqHvKr9J3q8HYfss4fWLmYSEkNil70Q97LK4u+hQnUFI6tAa
aZ5ogNl3wwU7tTKIA9cf7bb51gBt+paf/anpxL4pUtpWhkbIffLfnUO26cTj
U87+g+8b4btm/O44znTi5BWuPB5yI1grXe8W/ZFG0PNc7gjXaALtWx0/cs6l
EcNDzFrGtU0gKfn2lWR5KnEuRtfITbIZ+C4xnK1WSyU8OVwWB7KbgUEsZFV5
LIXIuJHvZCzaAiPHzxV3m6cQUrdWzM//bIGqI9Uuz1hTiGra0n7+o60Qz/NE
kRqSTNCI7XC9ENoKHpwre01Fkom/lodpX+xrg81u0kdblERQ3Etdf31rAyX6
Y3HOSkmEhvLN8xtc7XB+peAt51AiccQvr1rZrx24Z+5f+P4+kSAZXGmP4eqA
1dEJmqOMiUREuHgdxb8DMksYPTXO/iYCmbI8D/P8A+s0cd5XqgmEXIz0jnPB
/wB/6P62NPtF/FBn7Tt0uBMYvnqDR3A8kRHAad4Z1Qnlnwqrwwp/EoKsHzk0
T3SBxzuKZspAHEGyPR/rm9wFd5/sHy/eHkf8t9TNYXuhG7iV5MxahGIJsc5n
05yF3dB23ZRp5HYM4W27K+/qzR4IPRP9belNNGGzXSmXpqEHnh9pFmT2iSLc
S9u3R5wkgSAnfea+jB8E3YeXKnaGJKDSiUif6ogktprmpgVmkCBx+mHLlbUI
YoCSaTq0SoIPfa6693gjiN9tj8gPrvXC+YbsWZ3r4cRzxWaJ1c+9QPNnxO7d
0zAieUmHnFPdC0TSbk4Hp1DCJ/t9ui9nH7Bdd5I8rRZCsAZrv3VQ6wOPw4M6
CiFBxK4PZQ/sQ/qAl+6qjfFgINE0vd/QbbAPQnu/h/gfDyCWvghxfjveD8KF
i3k5b/0JqfnoJ2Fv+4EIVerszvAlFCrfvwzN6Ae0TlymXfchBG87HfRY64c6
LZY9RyW9ifcpiff0rg/A3SvPxWWcPQn51Bs1gk4DQFx2/NkS6k48VOF/WFKz
yatXRvaddCV2s0aXXdg1CKScBb7HWY7EwRSvWiu1Tf74+1GslD0hz80l4Rk8
CDQSz4Ip9TaEZ11y5bP+TZ6+nP4y15zYzCK7JjAE+ObX6cUmY0JQSsBCTn8I
rDsvKDD+e0WovAo8fStxCGjauaUOs2gT10YbgpdmNjk+v6CdLEI8JYkv3hIf
BpoHCnEqR1SwsMP3MH7cZFHZPi/tF8jZNMBfnbvJgWkLuX5GyGzBNj2xPgzE
vhuWwlYf8VTlp6XvOALad17SKaRYY4nPKk+jzQigR0oJs8AndGz36nX+s8n1
K44lAZ9xltKukE9HBl4OyVtWrC7Imhtt++zaJiu67rxg+wW7X58UsLEhA42s
3oulZQ+M0T7wcytBBms9VrmWVC+0eyAbMLFGBqpz8omU1z7IqLsYfObiKGj/
vM/qIeiLAmRxo4b3o0CqXKbo9/mhC8cOt+KUzfh4cP3N799w9LR5zBbKKBAs
11P47wfik2p/DddjY4Anh33o2YLwmXnvj/uPx4C47WJCqgjGuaa2/Q+/jwFv
Bld899VQ9HK2eRHUNAZ3y8j7qg+EoZdgFuxkGQeP1hy3nJUwHFz98jjh2jjU
Dbutx7aF46ybX4Lxh3FgW9Qy8E+LQL3VS9u1f40DMoiSHLwi0SaV5enz3nGw
5t5yz9jgB8400zU77ZoAQrCl8PGtKNyoizcquDEB1PMxogrHovE+z8v7Wz9M
gPDNjxG4LQZDLOCqcswEvFG7tet0fwzym3O1x7VOQOKLA/b7iVi0q5kopt02
CSRT6hxzUBw2FH5KVD4zCbzOf54um/7Ezx41p8O1JkE7wKd15H48pheQpfuc
JyE07qlM65lfuEfcZAdH2iTUZZ/PKmFLQH0DF5mT3ZPAVskklDqRgBxVzc2n
t1Hg7r/OgPC/v7GePBz130kKEMat9uWKiejC4v6nQ4ECJAvMv/InEZkZjkuZ
vacAjUPsfLpwEvo1Hi+aCaAA7xeO06dCklCxwvYz5lHgvK/Zsx87kvFg5q5l
zW4KqAYPhOwzT0Z/Ca+dN9Yp8CHqdpv3aDKu5wafM2elgn9COhuzWgpyxQRr
nt9PhcT0gzdty1Kwkn5Pu/JxKtTlO9osnU3FYyPtXI3nqUAtncp6E5mKve9f
eiZIUYGtVn16mCMN3/arVw7do4Jga5GQlk0a9j+yVv34gAoyPScet1DS8NRR
2fZnz6nwfPhr4O2H6dghx7T6y5AK1pT1xuKqdAzZOWwpZ06F0IVnLJcuZmB1
qrXJFXsqEBt1kimxGcjiX37c0Y0KpO0SFkLcmRh0RL6G7ysVFndGpIU5ZGLR
93/3d32nAjc3yyT3XCYerReuUQ6nwnleY36Px1n4dXH97kg0FVQFux9ub8hC
n9eDtyrjqfBGWNrPErPxuZGf0VoiFTzOJ9bOJWTjX1uJYMvUTT1wD8Or/TnI
ZVUceDuDCuUytjjgkoOdCVuO6GVRYeTu2AeN5RxUms3IaMymAoOaUlLD81x0
De+gOuVs6vEoj3yzNRcbI7lNXTcZX/AfLpTKwxdGsPPf5njtt+7q51PzMMgj
zsF4M5+16aLX78P5WH2joExjc75Qm0eV/J75+EVTqc5ts55Mp7/0wRv5aKRq
t8ycRIU2zzOX/ntdgA4tJ7Blcz2L376/c+0swNq1HZbjm+tlqbdtsTlKoFnX
W407m3pwK2cY5mkSOD8kILMRuFlf+xjrkjeB0XLOtGs+m3o94P0pVkng6wK3
DplNvSV7laTf0BXiDfODX/o/UUFJ16n/54VCPHc46XiNGRWekPOsht8U4uB+
H0vGzf1892qa50hMIVq2G3zwfba5nin+zIc9hXjsuFu8ieamvsYaSgG7/+Ct
t2atcXc317fkTm2+/QcZaj+Jiklu6m1R7Mpu/wd1bxyw2iVOhVzaJcHbuX/w
4n/ycPsYFarsT5Y4zvzByDuloz17qdDJqPOoWKgI+/vks2qYN/fDzXdt41ER
Xq4mTp1bpMAie+W3i9+K0PN+i8OXVgow+G6cfV9XhP5MuvxxaRTg3ivWkLy9
GBvUvh384kUBvuDnryehGJVpx3vgNQXEDgcxCZkUY8dJ9glChgKSUfVRur+K
ccM3/NeewxRQEtp2PWygGGF3trH88mY/SJDo6eQpQcnXDI1P6ifhjaiBGbdi
CQrzX6rQiZ4E6/QILiXnEqyn5ZKSN58EV4m2FPfCEnyQy05z8u4kfM9nuVu5
WIIGac+Ktx6ZhPhrV8e3CZfi9R2vLvXMTkBuqbHjtWelGBpxVpYomYBy2Tg+
y+BSRMvt2xO/TkBbTTeR1VyKSt3Zf9KeTMCIAueDOZYyZF/ZTt8uOgGLLdJL
wpJlOKv9x/YQzQRs0TD/qm9Whlk0dCJ+VeOwqydRJCa5DI3pJYSv+Y8D3+PB
6n5yGbbZXW4WejwOYsN79A4eKkcJFdEotZOb/fil/DYN1XIM4jFUa53f7O8U
23Bf93JcrFBrii8YA22jDGgoLUfz3QxC/Z/HQH9hrGPHejlenGYKsLszBuZm
vO9vnq1AO5fVL367x8B1Q4nTXr8CP59hCxLsGoXvdk6/iYgKfP7N3RojRiFm
e77cakcFUhtk9pGfj0Kmy/SwOMdfzE6deH/i1CiU7xT4ZHTzL/rR6ebvmiFD
m7cG72/rv1jGyHopPoMMA1weuaMZf3Hr5QXNNTMyzAYWq/JT/uJRQ4afHEiG
LbxLs4/4KzH56aGqeXoysEWe9Ax6UImxlqK1qWUjwCuoc7LdpxIL8quuqbiM
gHC8b8Wuqko8ePRZxYj85nktXKl7l74K0wofx7/jGIFbqRu0rhJVqH1xZmNr
yzBonhcLLntbhbL0giPR34ZBP/e5BH1sFer/bfHVfTAM5hjUAqQqtNr39qbs
oWFwLK43/MhVjZyjHTceDQ6Bv8y2neny1firVF4/PXYIYqokfk7ZVyOLHz+j
0ushyLxrIH0yrxrlHNm6pM4MQXFTRP/z2Wq8On1dzm9xEJpU26wij9fgP6bj
OYr5gzDQybKPpFOD/isrNz9/GgSq9tVMnoAa9K2yfnRJbtMvDRorqdTX4HpG
jKMFxyCwvYijejHU4jt38dz7HQPAO9HtWnOlFsubswUbwwfgxFvOY0zva/Hb
cVfp9ZcDcGlOukQqoRZjXvpn9J0dgFum5o9sBmvxCY+TrAvNACRYtlk+ZK1D
h5FsXvqqfkglpm+tHqtDFpmA7cr+/ZBLt4MnQKoO95ddTHHR7YdiyU2n8qgO
XzxSyE060w9/Ha5mNJvX4RzTqeB6un5oKNewN/KvQwOaotS5hj7oYDJRZE+t
Q5GX2RKCkX3Qd8vj0O/aOkzqdpU2MumDkS9xlFtjdTh6KrqadLMPqHXFeaPb
6vEjV4D/xwN9sMjR4+J4uB6/cpIbZGc3/bPykho/1CN7NM929cpe2ObHKVis
Vo+qWodbkiJ6gbX95Pwj43rklQVDDYte2M0jU7zhUY/6P4UrtVR74cADHa+g
+HoM1FkMKRPrBb4Qc+2L5Zv5eVUtAjl64USv76n2/npsOKqX2z9FArEjSasm
G/WYlHfVJqaBBBK6lX938TQgJSIgayqVBNeiB/2TzzWggpkvT5k/CWTJG0/v
KjQg6ztHPmFLEigc33t28lUDvpao5RLTJYHqKzF6V6cGbIa8tfbbJND+LV9/
7EcDjj9yDxc8T4LnU89DyojN/AyGX/n5SPDmjN0r3c4GNPL3EehgJ4GJcdBF
+sUGXLkl9/ImLQksMzIYwzgb8Vi55dPZgR5wWKpvhdON+HyLxpGBvz3genH8
R6dsI3qaPvmtn9oDPhbb3n182ohRyjeP+Yf1wPcC3mvcto34OWVN6I1XD0TS
XmRLD2rEXRvR5WsOPRB3XblbMasRTS1j3G9a9UCyvUH8VFMjXg3Psdcw64Hs
MqeP7tRGtMw8J3hxk/8wRsqcZGnCXt+HLymWPVAul7+7UqAJgypbsyw389W5
tQ08v96EFV2nZyc9e6Ctdjp5m1YT6h6xeiO1WQ+JfYdN5McmjI8/vOywWe+Q
osCda75NyFvkVp9R2QOTX6/uJyU1Ya6xaPy/oR6Yb9UYs6huwmhl7FimI8Hq
HpMsHnITrvutSX7aRYItmh6fs7Y049KeJF5mQRKwBMcpq/A248J9U1GPyyTY
RSo+MnexGe8zP1jmVCbB3sM9U14qzZiwYJni+5oEh58sFQgbNaOzpIYStzMJ
hKI4v9R8acZnyOruH00C0ZGTmvpxzcgqFlm/u4wE54VkhJhKm7GawfCG1wgJ
UF9nMbq3GW9YmjQxsvSCTIJ5qdRaM4b9KjpoLtIL8lRfn37uFjQMoDoNb76f
90WTdGzEWrDG00tU1rYXHr6rFD54twXJe/MXwn71wtP0wfXcly2YecndZLyj
F/QXN6rUP7dgcE8mswBTH7yT2Bu4GN6C/3HwNMlf7ANzc7EXvvktGLOs9Uv7
dR98ypcXF+toQe1rIefUIvrAmebF1oa5FnQo2V4v1tEHXtfsGg3YWzFQzT2U
wtEPAZ+CwnacbMWPH2Nc7W/3Q3hphsFPmVZkTVrDaad+iGFouHzzSSuaO4me
Einvh0TZceZhq1Zcn4x1vswwAJmu2zo+BbaiQ+k9RQ7ZAciv4Y05nNGKEuFG
t+LcBqCU7aIJ0dCKp/Sc6WgaB6BGQVny4WQrfmndV7lj7yC0+BhwrDK2YUzY
95JqnUHobHEifTvahpOXZDsv/Nrsn9yRCeJX25CJdX+J3NIgjKvnmzdrtmHg
zG+6tRtDMPu9TdboQxuWMIkO3vAdguXuaW52nza8463hcnh4COgO7RhO+N2G
Ku1P+x0vDAPTY4G0W5Vt6M60I97QbRjYfly1Gx1qQ69uB+O2vmHgHta450jX
jmJLHuHJFzbPo2MmB/kPtONJitGLJc8REHzpMVF0oR2dm3Y2R46NwKlfcTmP
lNvx3eWxkvgbZDhHKXbaeNOOI/5SMwwRZACRHpUg13ZMrT4xnkgzCjeMlo5e
jGnHHhpf7u9ao3ArjXO2ragd8ZVpdmHBKCgtnPxj0tOOvqJTk9yHxkDzgozH
rpV2TKTT+O1vNwY6ZjoPk3d3ILuXeYP48Bjo5ZmfuCvagTOJcTsm5MbBcMN3
eeJ2B8ZQp+cSksbh49WkcpcXHfg5U5r2HfcEWNtV+h6z78Dk+ITPotYT4Fgy
+KQstANHpN8Wk0YmwGM7zRnd3A5863in9Z3CJPjf3EtL39aBne6pJQO5kxDs
IlYbOtOBvRwTZvyCFIiqlg/adNqo9l6r5rQPBRJ2vnjZKfQPU/J0LpvRUCH9
nt2Fjzf+YXpoyq7z/+s3vYO2c+v8Q5rq4+I3X1OhuDmjOc3iH8Ykq+rG/tj0
n1wNEYrf/qHV1Oh9xS4qNKiNv51K/YdcA8o5V/+bgo7Abehe9w/1PxhIGNye
gr4uXtaT4/9w31U24xb7KRg9eLHz7/ZOZIlN2WqYPwXUR8pxz4904tcz3DaX
FqZgMcLgw7Yrnfg+ucdEWHgaaIacbkSqdyK7xmlDmRfTwCAYueuaSSdmRdxZ
tgyfBla9/L4ez0683iDnXfNvGnbHtyVa/OrE+3ye+SL/zcCByWlLnopOfPHR
bSVcfgb4hHfczhroxK2vb5fvc5yBE4YCPCo0XSieuyf8W+EMiKVeJc/ydOHa
OOe2XSszcGleI8NLvAvbeBveOojNwrXzJvbCil1YPbH0eOzVLMh+9FCsed2F
rmc7NC9Hz4JCbtwhfecuDO+m7zEhzYL6ejGFMaoLL2r0GnjtmQNt7MmLLuzC
cyO3/J0V5uC57ZKLVFcXSrw5OqjmMgdvijnV+xe70H69d3i5aA4+bDslaLOr
G58lHBF/vjoHljIy8weEu9Fryw2D72Lz4OCsU5wr141OoROiXvrz8KXK3Ev9
WTeSxb4el4ycBx9WP+1F2240Sedm+vVvHr7fTTrlG9yNd5PhcxnHAkR6Va6e
ye5G5rwrT77cXID4psG/9c3dODIu93LVagGSd9N8M5jqxlwF1jcs6QuQrbr3
2Y4dPZine+pu1tgC/AkQO/tTsAfbVWpn1ngX4W+nPP1NyR6MkNkh36y8CHUH
XtQPafWgr/yHBxLOi9CmbRfyyawHR+XdTgjmLwIpPOjVYb8eDAo60fBtahGG
BjIuEsk9uKzFaujMtwST/A2MD2t6UOOX2OW5+0sw/3y8dYXcg9Z6GobNjktg
pUzfWEVHwrlO3Yf82Utga8KWHchGwr8ZAor9o0vg4Lc/TO8ACYtFxj228yyD
c6aQ44UTJNzn7c/gLrsMX9rFDRgkSNhhvZ3G2HQZPJcl77dKk1DZcGVHWvQy
fOVRuBylTELGqw/9ZZuX4dslLT7jxyRU4yIlitCtQNADfWbJtyR0PjJ74emp
FQi1NJ3msCKhKuO1r/1qKxAZ4tDe60pCNmkRpahPKxBDeBOJASS094jUj0tY
gZ+9odFWMSR894Qmdax1BX7TJXyRTydhY+1lhac0q5ByJMd4fzEJTVacbXcL
rkKGZLnmeD0JbxJ+3ovyq5Cj23w9p4eEpSdIwwzGq1Dg0CfkPEFCTvq5uesB
q1AYTWFXWyHhF/E/MlH5q1BSvroowNiLd943Wp3oW4UKMiNpfncvKuX73mnc
sgbVTFxlJXy9aLAlyMaPfw3qj/Ml+Ij2ojZD+6yx9Bo03xL5+hh7sfBKZ9DL
Z2vQ/grMReV70Wia/bOxwxr8+yL3mFazF2Obz5d5RK5Bz29V2boXvfhdQ/5l
duEa9NfpioS878WbjXfEqV1rMDxlyP3avhd3bQmUO720BmMc1huXvHvxrfP+
I8ac60A54zbEHNaLB3z+3Sk4sQ4zSgHVHQm9OFpywIxZah0WjKNTY3N7sedV
hK6K5jos+aYGfvjbi6foi4dDDddhLaPQVrqtF51nw6cGP68DbXvNi91DvRhQ
rODC930dti7/uzs404tFRqtN6r/XgZGHLJ5K24caZ7ds/1y4DjsuzR+w29mH
o69OGEY3rAP7A/ptCvv7sH8+3Sq7bx04LdkmeI/3IUvkp6T8qXXgCtnfRDnf
h6pbz4Qnb6wDDyGUk3+jD3u1zm/9yrIBB3vFw92U+vBa61rUE+4NOEIn5aSp
04chxII+75ENEDii8Ob4mz7cy5WrXHZiA45LaqksW/ThH0YuU9WzG3BaVx8q
XPrwzbf9DI2XNkDEwfSo/7c+fHAZbp+7vgFnox1YnkX34ardnXgbmQ24UO49
czatD2N/fA9PvbUBl8mhHVuK+lD37K3AmjsbcJUpobCxrg/tCE372nsbIHU8
Jya8uw+33Bg4m6GwATdvlbu/He/DI3vC3tpvstyrZhNc7sOpvaFnJTbH3/nS
92AnQz+Gzlr5N8tvgOJvimT3f/0oxvz6r4rcBqjUrR7/daQfQ7Yc+q/wxgZo
TDFymov04+6Gun/sVzdAi4NrWfZKP947cyJQVmIDHp/h691zux8Ho+TIL0U3
QFdJpHxEvR//5oQZmxzbgBfG8DvjeT/OZo4wvDy4Aa985XwdTDbj7jvsZXdt
wNsMVQvlT/04yco9+B/DBhi36T7h8+pHCzm2yzXL62C6ZCg3E7JZr+r7hHfj
62Cx11r0z69+DGi7q87UtQ42F932eOb0Y9m8Mptn1TrYaQbQaFf0Y468xVam
nHX4bBE9fKq1H1W+DpWbxKyDS3BqzdpAP17nb6Zt91kH94LCtKrpfuTltDEQ
tV4Hb1LN90CaAZwXHhz5pLcOfrSddnqsAyj/wIG3QXEdAg+T9S7sG8D1ny/c
9l1ah6Dr8/cYhAawQliQ/umRdQh7Qn+hVXwAPeZdShIZ1+GHPRtvlNQAik7u
v70xuQaxUfu3GysO4NrRLXWKjWvwq0xo8vqjAbSxFSxJTF+DpBHxZg6DASxg
lsji/rYGaYxSub3mA+g5uXD9y8c1yBJSiEh0HsDjZeOznBprkCOn5WzlP4Av
CxMm4iXWoEBf/6181AD2PLgwoLFnDYrcTFX3pw5gfgEvDd/CKpQlOFwZL9yc
70PufoamVais9ebPqR1AsXeH1JgTV6GWGrrDuWsAnVoMeoVdVqGRPWFWdWwA
b5kZLJrprkKzaM4/gaUBtGg7Nk2BVWhXLP8zv20Qh+7aiHlwrULXu+bYkl2D
OPtZiFGbsgK9X/s8fA4P4pNzZy4/Ll2BwXTK+8fCg7hR+u510PcVILeuPhSF
QfxQrXWMw3AFJhYZb9DeGsTjrZH8JTdWgLKH62Sd2iDu8eM/lb13BWYk+HaF
PBvEO2Cze25iGRY0RFZeGQ9iv9tFL1NiGVbMoe+S3SBO6MGwnNcybATJVTB7
DqLqkMiUweNloC9QTewIHsRYHLUmn1mG7SRdv9j4QeRa6TibR78MzLRGlh+y
B3GXWjIDpWEJdhy21pUuH0SkuDPYhS0B+3W3W7tbBvG0S4yYhcES/Pck4Mxg
/yAeOpWi3ndpCfbYR+9NnRpEvScyVumMS7A/KpXWbmMQj4XSLK81L8KhssKR
ezuG8FE7zfG8sEU4OlJTy8szhDMdrz8u6i+CAGNnOkVwCPOSBlRSxRfhuBA5
KP/cENoo9V+Yo12E03Lzn9wkNzlQMqigcgHO6NPrayoMIX9w/Bburwsg7sam
eFx7CM+6LS/QPVyAiwn7JZZfDSFxMIvenn8BrtQKHaowG8LUmC+Z4ZPzcJ0q
zuDvNITdo/Fx2unzIMUuRXnqN4SdBL4tspiHm6IKLWd/DOHehN4ftZLzcFtR
K29Lyia/ph1wYp6He+/0IxuJIbTz1Sifr58D5a+mLuE1Q+irrUvd6z8HaukO
hm87h/B0Qt7S8oM5eNDqrYajQ3jzYZBN4JE50FoMxZ2LQ1i3RYaPljwLj/ck
CHRvHUbWPRbmwgmz8Ewih/UX5zDuSyAfPmU0Cy81yufMDg2jVHnAr3XxWTAw
b+6UPT2Mp3Xe/I5anQGjoL6iPZeH0VTMM0No0x++z6fEjcgOo4BCz113+xkw
61n1zFAdxsvxr2jbb86ABQ2TqcPTYcz/Mn+ThXUGbA5xaSu/G8ZhQcUfJxum
wf4anzSf7TDWiM5+vuo7DU6PRU7NuA/jkT8aWrfUp8HtE/z3J2gzruXvqXBg
Gjx/yK16/BxGhTeF5qp9U/C1VLVfK2sYP9IYm+hETYHfsO7fU2XDeIBBpfKd
3hQEMhglrTUNY4qYV773qSkIOWbtX9U3jDdvqzsVTVMhQtbNKpA6jEVX36gz
ZFAh+mXAU731YeRciFZ+akaFn67Rty+wjOCZPgPv3itU+P0rVYxh7whO26nz
Wm6hQlJNIU+rwAiaJiguWXlRII1SQxd1dgTlHLPE7++jQBZbJ/nd9RFUVLQo
d4iahDwRct31eyNowDutuUdkEgoV5jM4tEYw9NQd5/9yJ6DEiD6kV38Eu7U7
y22lJ6DCh80h8eMIrhkeMXreOA7VaftfWTmOoBoHf0m11jjUtggpyfuOYNO6
/7+s8TFoXBC/uD9yBEdV+VLOfByDVm6pw+NJIyhzNVbgGsMY/LugwJhTMILG
k64zY76j0KOuRXWqHsEyTcbf4vyj0G+m36r6bwQnc+1qj6eTYfi7ab4AeWTT
H4xE1Wx+L5LzHH7Mz48gz9adj/nbRmCi29u1ZAsZHfUO7rigNwJTG6FGPhxk
DNm2xYllbRjmeBPUH/OSsVKmyyfKYxiWruZcFT1Fxo1ii3KWo8OwplMuSHuJ
jN2x4z6S2UNA+6l5Z91NMq5upVxXvDsEW3/0zQerkHFt2W/h8vAgbC+ldL3S
JePn1Z5YRqtBYB5eLb5kRMb34tdP5HANwk4GpnhmGzKyX34moJI0AJzHuLw7
vpBRnKV8b5/cAHDJ8n2M/U5GTU99Te3hfuB5KfLoQxwZn6WGc7fY9cNBV5CR
ziSjClPRPelD/XDol9zp3aVkvAGrPRkFfXC0RnX3YCMZD0vyvz2u1QfHKLpr
Kb1k3Kcb5PhjoxdOshkN2FI25xM7anUsrBdERKwr762Rccv7Rtvs671wVsEt
mZd5FO1Z6P00hklwwSjgG4V7FKfb5X12upLgok+0dT7/KK798RFsFyHBlbTU
Z25io5iuTZtgnNQD11sK5TWvjeJ2uSvUV7Q9IL1Qc/b43VHsLZ0zClHsBjnu
zn3LD0bxoaAJssZ0wZ0LZPqKl6P4HzWKIX+9ExTV50f9TEdR5T+948kqnaBi
Rt/w9PMo2gpwpk4k/wO172xZZ79uxgUn1I3Y/sGDvP2hWyJG0Xul1l7qTQc8
6hb63Jg4ignXSmSeNrSD7ob46/D8UVQyyX3aeq4dXvBKKb+tGsUTjPIKAUFt
8OqqwiXsGMUidbdTidva4K2O1pGdI6NoeJFcu8ewFYzs9Jm650ZxIndvXmtP
C7yPNJ2Kpx/D9q2HhUfvtIBZiUObGfsYVrbf5br3pxmshrwLZA+O4Ucbnd0s
4s1gtz0sas/JMcTs0M97E5rgs2CC24jEGErd+c/CTKAJXG7mvMuQGcPkpbLC
kxGN4K5XruFwfwwzeRn+nT7UCJ4uzdeUn4zhQdY/jNZhDfA1vu8Yn+EYBgv0
yO3ja4Bv1RS2Gasx5M5KfEAXWw9Bk6sLhW5j6Nf2JOe0cD2E7WTq8QgcQ7uR
T+FhWXXwQ5irVCt2DNcuWHAqS9VB7D2+X6cyxvBioHqUW1Qt/DQU8VkrHsPP
mjTtQ6U18NsbzKoaxtAij/tJwlg1pKTK6QSSxjAm3Niqc1c1ZDSr3tSbHEPj
7JHF59eqIGdeV/jC6hi+kY0Tl3tXCQVcRlwMTOP4lfh75WPcXyg6b73ewjWO
0uRfaeMDFVCm5jb44+g4Pjpg3+p3pAIqPgZUvTszjirpF5wNn5ZDdWB0yvWr
41h32bPC6FcZ1OemBnDcGUeHUecv7oul0NxVaNOrufl8QnxTtnQptK/XPE/U
G8dvZedvjwaUQNfBzjtWH8bxzkqVDsd0MfQi+Zy8wzgya9BdFrhdDP2P5vfv
9xnHC6Ysxfvii2DYln7reNg4Ks7ejxxiLYKxCLbx7N/jmHGNV+GD8R+gFO9v
dMobxy2/2XaU9BTCzKBQtmrlOFZ8qOovuF0IC9vOhwm0j+NDDusMjQICVgSk
HOeHxjHgo+4VFzEC1mQUDEpmxzHMwI7bVr0AaPW07vvQTeDSWjJXj0I+bHXR
v/yYbQIfnsnk5lDIA8Z4Uz7RAxPocvOz1YZKLuyodmCmPTGB656Kli5PcoB9
0nu69sIELpzk3RfwPhv+2xnWHiw9gayG5y7u9MyCPcIJxCvlCVSaubOrJjET
eO7lRF96vJlPNdM2oyUDDhqWf2F+O4GNQSlEOl0GHPFuNu6wnMBJ+tSdP8XS
QSC1TzPWdQIvUHoX3uunwfFmyvUPARMod22ChjYuFU7PrwpJx0ygzEJkxrGJ
FDjDxcSxO30C9zDrpTSfTYGz57mWBoo26ys1DxyxS4YLanyklPoJbHM9cuJG
axJc/ihSZtszgbWacRcbTifB1UBIuDcxgScfShS8cUsEqVy5r7wrE8gUwB7C
TPoNN7tUzSkMk2j2MUt9LCEBbq/rPs7fPYnvP7RsSvQL7h00knXjm8T8Fo7X
lOfxoIjWIpqik5hl9zwqSvEnqDxy4z6Ok/hVrfGDmHQcaNgGbCzdnsRI+XCl
F9djQSsieqhcYxKr9lYlccrEwOPi1Gq/F5OosnI0aFkpGp4NFqY+fT+JUn1u
50dfRMHLbbWBZ+0n8SCztEqMww94JdBpu8V7Eu3Sh6xYf0bCWxnyi8bQScyO
XbYcbokA4xfzd8MTJpE3vdZ/gzECTJ3pz7/NnUR1M6DnlwwHi59sB/HvJN7V
Xg0Rsg8Dm6r923a2TWKmQgZNd1Uo2E8ITXQNTmI0laTHzhMKTqznm+JnJtHc
Uyn9ZE8wuJyWyjGjpWDSiA67rU8QuN9VCJfdScHLRcW1pcrfwfutltOe/RT8
7cCtHnk4EPy89N+MCFHQX1o9qHj5GwSmmKpknKegzstR1sYufwhpcgCHGxRc
kdRdMaj0g4g576PKShScF9kioFXkCz92h7Hw6VBwx9usmtslXyFWPGFm2oCC
EZr7KMN1PvBLNaej0IKCV+WW6UiD3pBkWl7o4ULBmoNfTP7Re0NaQHOM1jcK
useKe6cIeUFWTp/7qWgKyrisZOxQ94S8TorJWioFVZ+9dozw9ICCtdUHVX8o
2PCA0VQ73B2KDjBJBdZR8OzR21fzhb9A2RWuE3rdFGx7p7inqdoVKrX5OC+M
U9Azrc7OxdQFam1ElrcvU3D65zDHjTPOoHcv5M0YPRW7znb+0l92hPHeowMN
TFTs2d/oZ1vzGV4bxqtks1ORsvT1Ct1vB5ikO1MZxk3FrINPppMD7eGNdxY4
HaSioP3Oo9t8PsH0EUx+w0/FpZjaWQ8/O3iXWnpU9SQVyU6yT8d+2MK85O1v
V8SoqPDASjMx3wY+NDeyCFykokjRdXeLXmtY1lW3Zr1GxU8iGjYzO6zBfJ40
MydDRTFP7XG9z5aw7vDsWdcdKt4mva5p2GIB1lyTHcX3qVgjtWXawNsM6GLe
ycc/oCJH0I59fqIf4dP5lULvJ1Qc+rNqKNH7AbZV2Jw1e0lF4TSbL2Yh78FR
jSFWx5CKLYJsSm76JsA0+mWfrCkVdWuYGtKljcH5438eItZUDNmhxnZX+B2w
MH+n3/OZiv///4N39RKnFPWm/o//B8YB9cw=
            "]]},
          Annotation[#, "Charting`Private`Tag#7"]& ], 
         TagBox[
          {RGBColor[0.94, 0.462, 0.162], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1: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
Eo9P
            "]]},
          Annotation[#, "Charting`Private`Tag#8"]& ], 
         TagBox[
          {RGBColor[0., 0.7, 0.7], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1: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

            "]]},
          Annotation[#, "Charting`Private`Tag#9"]& ], 
         TagBox[
          {RGBColor[0.827051, 0.418034, 0.0243459], PointSize[
            NCache[
             Rational[1, 360], 0.002777777777777778]], AbsoluteThickness[3], 
           CapForm["Butt"], LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag#10"]& ]},
        {"WolframDynamicHighlight", <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
       DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
         Slot["HighlightElements"], 
         Slot["LayoutOptions"], 
         Slot["Meta"], 
         Charting`HighlightActionFunction["DynamicHighlight", {{{}, {}, 
            Annotation[{
              Hue[0.67, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.34398, 0.49112, 0.89936], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1: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
eTUO6NxS6/2/70HCKPratn7T/4f/B2Lknd4=
               "]]}, "Charting`Private`Tag#1"], 
            Annotation[{
              Hue[0.9060679774997897, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.97, 0.606, 0.081], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1:eJw9e3k0VX/UvqSkUSVDoSilQipKaLeLRCQhQ6QopVRfSiUhkiGEZEolY5ln
ZXbM8zzPw3Vxjdd13auJ3/2t9b7v+eesZ+3Pevben3X23s/+44iY/adtzs7G
xsazmo3t/78Hiu7afjvbQrD9z3PSSC2LR7Lp//D7rCSG0bYmoqkoeFeHhy20
795npTLXSGQ9rJv79PsFvG2bprXlNBKZ84fcKl69BMW3WU9vvWkkFia4bygL
OAD1tOPSvGYjYRCw3/1fpSNE01ReOgk0ElfOlXBYqziB/vcty5tHGwjuNKn1
T2WcYYNxl9OX5Abi9cMjm72kXkMhd8RqiRcNxE4tnVcnZV3gcfk9t1ylBqI4
7AP3arU3sN/uGJfa5gbCNjuhyu6+K3RL/fHq7KonOKivuaVD3eAdqXTznah6
IpEjkMjucgcM8X5Pf1hPDMifl0zZ/xboGld5XOTqCbs4zmPpbzwhdpVw8NbV
9UQKh4aC+YIXGP0YEwivryPcK3kuWz15B1ssUz5LhdQRJ2+I8Tit8YWS3ba7
C8zqCI3erinRq37wrA0j1SXriLb4/CqFo+/h0FsusR5mLcHOJbhwl88f+k+3
fLcoqSViRA7zcK77AO9poYeY3rVEoaTp4ZerA0D5+60kV/1a4s3wrLf4+kBY
MpKQ5hGtJZjPjw8+FQyCRO7F9MjpGsLorhhfnXww3CgvkD36s4ZwJkc9CTIP
ge12btlFzjXEavtvz899+QgVUpcVNDVqiDviSDozEgp2JL7CPt4agvTNMoFN
9jNIhQyh5XA1UV0XRF0K/ALDGnGlvxKqiW8ipIWwNV8hcNVjFY9n1cRa/reu
sufCQfWHfDXv2WrC9YRntSVXBPy9v1ojZkM1cXspxCq1KwJSdtc1HO+oIhYM
zD6eS42EW20BV0rCqwhX+cJLZn5RwPf2epuWZRWx6LvthdaLaKg5vV9/ULaK
kDak92taxoAjbbb7IVsVYXt39YbwO9/g2Pefxn9rKokp8WVNd8vvMGbkNOgZ
WElQBDckqtrFQgi3mpnAzUqCf1q2RvxDHGiUbyV/P1RJnHEWpjz4EQ9sdj13
TyxWEF7zXU3XRhMgUypqsqyogjCy+FcsJ5QEFiTLhzqeFURX0fjtS6bJsDNE
hjqsW0HMzu7PHkxNgQaNf4+tdlcQXE82v9rllgqvV1UsLlPKiVG2Cd36U2lw
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
NzMN
               "]]}, "Charting`Private`Tag#2"], 
            Annotation[{
              Hue[0.1421359549995791, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.91, 0.318, 0.243], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1:eJw9e3c4lX/4vz3KPs5xNJBkFU2p8Lxv2SWKkpYoSRSliJIUKRTyoWSnjJQi
oqzsPc5eyMjKKGSPfM/3un6/7/nnXK/rfT/3fL3v+7n/eDZd8LS5xMfDwyPL
z8Pzv/8/vl/2zTCkVPD8v99a+5HAg8+q4f/jA9mvHEbjqkHh2rONjzviMbdl
c/2Yt9Xgdk2HT3tfIhZvNS9vkFsNmF8yjedtEtaUmjk3UFINl3/1pz9STMEW
p+zoEfXVoFNs8y3tRCqmYSKUr0uthtpmotTg5tfYqZdfonp+VEPm31v6tMXX
WOgvZ4/QkWpQufgDV8hJw77qyVrumq2GP7bObHr1G2z4WbVGB28NlI9EHbhf
+BYj9ngJB4vXgMrGH4dXP6dj5ruUB7bJ14DawbLgt98yMN9gchVdpQYWLu4q
KW/KxDIZgakBO2pg63cBxZTBLIypviNATb8GPhuF7IkTz8aE7nafIZnVQPG5
6bYV9B7b2xqx38+2Bma/3VqzJeAD5qKIySmfrwENvjwT54Yc7MWN8ekmtxq4
huHX4xQ/YXXViZSbPjUQe5SzzcQwF5vBW+ZueFgDWclj/54v5GJbXJee1T6r
gdz3r2OSvuZhJ4qz3T1e1cCzugjxFwGfsWCx0xZy6TVAKqLjsg/nYwUOomoV
uTXgjzqZIkoFWH/uV4Erpdz4VwbX9i0VYLL8rn3SDTUQrZDQfan7C2Z8Qq6i
mFoD6467LdU0FWI3M+uSLnbXgCRz7O6O8iLszYL3XbHRGsBbaI2zv33FqIe3
nPoyWwMWPiMmf8u+YXzJtL0OfLWQT6D2fWwqxnZNBMkKS9RCfdv3B6inBLtw
cPfUJ/laOPTljz7rXykWHdPXbr+lFnwYh0M+qJZjVYPPc3h31oK4TKHyxMnv
2OQ+w/Bs/VrQnsiPdreowDaFT7jamtdy4/s80zRagR3rSjFdtq0FfGtw+I7/
KrHA7dYq6edr4dszZm0hqsJyH/zjtXKvhf7Csj2+k1VYDzWne9anFmJqM4Mj
s6oxKdVzZSkPa4Fz/oa/3KUaDHzFEswjamG69tGSplot5tlU4jv5iiu/e+N8
/+9aLGWDu118ei0M8MXecyytw9o81u0xyqsFY/3+7K+R9di/ikbpsdJasNms
nSdypQHTxvn9iWmohUCVWxR380bM4ZJ6qwGtFtzPuTquaDVhEUXM7MHuWtBs
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
bVu3yf/D/wNtBFkE
               "]]}, "Charting`Private`Tag#3"], 
            Annotation[{
              Hue[0.37820393249936934`, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.448, 0.69232, 0.1538], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1:eJw923k0VW/UOHDlmySlUEkRIhVRKYpsuzJGpaSBVCplKqTMc2RIkmgypLhJ
kTHzcMyueZ5n13hxzVPSe961fr/3/nPWXuc8z+fZ+551zrP/OIJ3zS4brGVi
YtrAzMT0v8eu3Ic2307XEUz/7ye5kYvpWU3Z/8X5Z1Ozyz6XEQUpbtGm3HZw
xUHXXsCsjPg41c168509DCb/O2EFZURkIVekorgj2IxHzJdvKiMo57omNzQ7
wcZ9qsmCnVRCKso0tlzdBUJvjVlYx1CJ97Lnpc1lXEHyvb9kpT2V2Dm8xmFS
wg3yqo+NC6lTiVVaXVjV0edwhbX1hw0vldCQ8dnw5qw7DKKjYdVIKaEewOqe
r+8BNraC+4TTSwkf82NK069ewMbEon5br1KimVXqv+RSTwgdNfpSfa2UeAdt
rOGc3iC5d/NtEdFSwlb1nJyWqQ/k6Sbutp8vIR4+Cj1q1vQSrgRebaspKiG6
s4PPfLr0CgYrlt/vCyohLjy44+Xc5Qc26z5rO9wvIV4uTdgNgT+wwVmuOqkS
4sWxHb/4ed5AqNVQjShzCbFm7QXZM3/egGTcSz/HumLCzV30acJwAOQNSWrU
fykm5DyUxap63oKWQMOGAxbFhFlbRsxKfyAMXrcpccJiQi0isDBiOghs3uz2
aOAoJm4pf80R3/Qe2MqIMwe7i4hFuPiA+dgHCF1rwOTyq4iALx/XvXv4ESTl
NuQ0OhYRsebc97S/f4I8y1h7sfNFxFjJWE7yfDBoxVw66bq7iJjiHK46oBUK
g7S5+SZ6IWERcCldPCcMbPg+JYtnFhIRdQ/W794dDmxX4YmbTyHhleiuT+sJ
hxC/PsmWG4XE5RR+zrjYLyBZ8mL80IFC4oNB9nCW21fI+3fw5/PFAkI6vaP5
4p0I0DpRbdhaUkCcbaue+KEcCQPmlvsk3xcQDbf+XuaUpoBN9A6a+4MCwm+f
+YlyiW/A1pf5pe14AeEjnt6660gUhPDeuX14XQFBb+Y3U5f/DhJa//G9aMgn
1gdsF/mqFQ15L7+3tUfkE04R6ziNnv4ArUKND0cs8wm7cGWx0c8/YWBlUtvz
TD5RNm5+0rwpBmyOB3F1bs0n+mR7ypV5fgHb45O1R3vziBROO7EMgzgI+dbp
5xWfR2xguv7t5e14kOh21ehyziNavG/1aHMmQN6OfWzHLuYRtX82198tT4DL
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
ZSW0jKf+L/4fQcPbSQ==
               "]]}, "Charting`Private`Tag#4"], 
            Annotation[{
              Hue[0.6142719099991583, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.62168, 0.2798, 0.6914], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1: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
G655DJ/PEB/ArVoCIZImbKi4STHfdHIAK91WFR56wwZ5ob5k04sDqL35psIt
CzbktXaM1N8YwDXjZULJH9lwwrd57xGdAVyZ2d8h94kNCXfrHnw1GsCz3jel
Fj6z4cC2Sm/6hwHccyfXlunAhtDuktrLXwZwn9V0uogTG7YH/eaO8hvA1IE6
zg/L2ks7B1dHLfMG3Uu3Luv1e9Lf6WUMoJwUy2R2Od+RlJhSVDKAfhKzPpvs
2bAyLIa+u2kA01tHSa+X6394Ei72cWAAtx0/tGWbNRumxEO0esYG8CA3Q2jt
BzYY0fx9ZJcGkFAXrVZ4ywZatHedHx8Jg9YcUqh9yYZHz9145raSUOmHl3/0
czZ0S365cOsgCRebOpc69Nigwfz8Pu00CRPC+VMeabGhNtE6VVCJhEL/ea66
pMkG5ZcWoyYaJPxxMO2usyobiqTf7Kt7RELqt4fbj15kg9yUycPDL0nIw5Ff
LnuGDWnpz79/+UhCZ5vO/qTl5y31Vr9++CsJG7kvznjsZUOUjO4a5QASRrdW
mw9uZoMo+758RAwJPXe+lIvjZYN/7i0LrmwS8nk8ZIwszcMmyxtpj8pJqCrX
sjl8fHn9gSqDaCGhtLv8k17yPPBwXBLfRSFh68YnF/2X169t4QVtywkSPtwZ
2tldNg9sWznfLg4yytqKekVnzsNrhdMNZzaQce+nuU1cUfPAXCW91ncHGb+O
qlSNfZ+HZ+WSF2ckyNiZVZVh4jAPJMf9HzTOkvGhZcRl5zfzcE9FND1FmYw1
AVrc+GQemnl3MPlvk/Hvblkz75vzcK1m837jJ2S0AmHq1wvzUOEqqFPzioze
DTVLksvvt7zaOj8JWzLauU5NmG2fhxwBnkYnNzJesfsob7hmHk40reSlBZHx
uVbYpo0zc5DgtXhRKZ6MSf/2/HtBmoMDt+Y+hOWSsanp+dTH2jkI2TyZvrKS
jEP521lXcuZgaweDqdNORoUrspPN4XPg5U/b/5tKRk5PMfoO9zlY/4Css2Oa
jD3f05IOfpgDxx29fhacFJSqfMe9oD8HHH3tjR0CFDSZmgzwujEH70OaeGV2
U5DW2ss9LzsHU7q1Cj5SFBRKcSw/JD4HRnv/WE7JUXAT+8RFSf45oFGKM9Sv
UPDe0y9//s3Pgk5EwVjSXQq6jzg6R5JnofNp9oENzygY1LPObF/NLGgcTNN9
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
               "]]}, "Charting`Private`Tag#5"], 
            Annotation[{
              Hue[0.8503398874989481, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.09096, 0.6296, 0.85532], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1: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
YdA=
               "]]}, "Charting`Private`Tag#6"], 
            Annotation[{
              Hue[0.08640786499873876, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.46056, 0.40064, 0.81392], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1: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
MH+n3/OZiv///4N39RKnFPWm/o//B8YB9cw=
               "]]}, "Charting`Private`Tag#7"], 
            Annotation[{
              Hue[0.3224758424985268, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.94, 0.462, 0.162], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1:eJw9m3c4lm/4/z3ISCQlkpmMtpRCnM+phJYRFe1lVNIiI0IfmwpZIZukFGXP
26bsvT2P/dh7j5/fcXy/3/uf63gd5/u+zvO+/7jO8/3HJXL/2WV9ejo6OgkG
Orr/v3bmGlrEKNUSdP/zPH5ruH/Lk7L/40veihkj8mVEycfuCO4dpnA0Zvv5
is1lRLQ5o1jxJTPgzqC1xLeWEuuTzXX+Aa9hsSL30Ye4UsKMNiOtO2sOHVTf
RROrUoIrYEWj/aEl5M0+cdU4X0qE25wYohu0gmjW07uk+EoJ/6Pcn+NsrcFV
gPcb51AJYZLmM1l08C08PTomO5leQtj+VolTnbAFrbOFpTWuJcS+P9O3/frs
QEYvUPe3XgnRdGK/imKXPex6+nzQe18JcVGz0zq07x2s2qlYvFosJmjV42fV
Fv8Dqg8/i05ZMVF68PPpEj5HKIqd8j/+eYMVjUNzzzvBt6xSCe5HxYTC2JRB
n6szvK8OSZ2VLSbO6RlpxjW7wIteU9VGlmJCJPiC7Z+TbnBl4XxTSnMRUby9
acjqqzvIbREx9I8tIhY6j3D1S74HAeH5OXOLIqLh2Bffn1kfgHS8wklXrYjI
8solpRz1hD7VyJ1yvEXE/lJ2CRqHF5TdsIzZNVhI7OKyUH8w5wXxzzROLKUW
Eqv/OIsNB73B6z+x4lbnQuJiTLioad8nMPNfvpJ5rZA46B9+vWrUB/S+1/QF
SRQSuy/pcMyQ/EAx96uZ9XwB8Z8Vg97FPf4gUmez6VZJASFdXO+qrBEAmwa0
fRX9CwjSj9XdF1w/A21pn5igYQGR2hX6o7o6ECo46JLXThQQ9wXPjKuKB0Pi
nkblLqYCovUrNUzM7Qv4nvhRn9uYT5ybsbakrISA5fl3D8Ni8okjV3k/WJDD
4NZt3Rm71xvx/R30j1jCQenlYYd7KvmEsFZKlm1LOIg5Me44vTOf8KU7k7L8
OwJYA1sj9/TnEY6HJ1P5fSNhND7hGENKHhH8lu6iqF0U1OQ5FfQ45hGU8e+J
mqbRkNxwU7vwSh7BubSndPRFDATQpHuixPII1lwHqqLlV7BeZXnlOEsQz4uO
81m7xcLdbV30BkUEEestGkeL/gbKYsneKr4EEUjQ7Iv+xYGknPseCX2CmE2+
2nV/5TtsuXTvN7MMQey+Hxy4fjIeJu6ePD3ISBAP4xLN+t7+hFgaX5TXt1xC
LjScT73mFzzfVlJw+VwusS+Zxl7snwCycq96ttNyCEsxd/2Ri4lAd0+IocEl
h6h8WdAALL+h1OXfHj/JHOKpwupYW9lv8EwwP32tNJuYZT6zPOj1B3SbRe/z
GmUTldknKpzvJoEwXbV9C3M2sf+l3GSLTDIMSliHB37NIn7drgql40qBBA3J
vBuqWUQsNeYX/2wKWJjXU/gHMonAhyrO6l2pgKF2dJ1OmYTQM32OlOo0YCk5
KBwqnklIOs6GvCxLh+qxZvLd4gwivr5rNqIsAwJ2Ot4RMcggeLbZiOrXZMJd
OGrbvSmDUCdXvGmkZIGkQUdIZHQ6weBt5rR9IRsm3rvmPDybTkjUu42d5MmF
tGSZTrG+NOJ1GI/cESEC7Dqoq/0OacSs7aZH1SkEqG36IBC7N43YZKJNcb+c
B5yH5BUfFaYS1zybjZ5O5UGzTv/N/Q9TiVsvAo/b+eVDmLW39TBDKmEibtBQ
CQVgFAXBPyJTiF/vDuwxGC4AqfKhzKdnUgjjH/wtl4ILYWHar+1wTzIhdtHQ
w0OrCIjdZ5bH3yUT/6y2mhxgKwaXM+N8iXuSiYxZS8VDZcWg+SRI/mV+EmFY
99E4yL0EeD+pXj92P4nINn1w9c3lUqBkTFvOkJKIggAZ/RqBMojtDv2cHP6H
YCy8xxc+WgbPN19Mf630hzB2n2AazfsLstILzSepvwnFpjuFKYH/gO561MKC
3W9CsDhmdM28HErtNXkzhH8Tmj1WvEV6FeD5beXkGyKR2P6ovZIZK0G3Jvaa
wt1EwvLCuEvh/ioQXtQxX11PIIQefKpb3lINg8Ik/5zQBKLE6+GJSqdqSFCL
T7ElJxBmSUY2jfQ1MEH5/cM+5xfxRTlQbJt9DdhJsY0wrP0kdjWo7rQi1QKn
3YMDToo/Cdm6tzfZHWohrCrzMYtNPLEocb+8iKUOpIR2xLll/SB2V1C+BX+s
A8LEmLZl5TsRtz9gvwdvPWjmFEp+PPWdmBbYK+0RWQ8UdgGjbW/iCMFAEw4f
qQZ4fsvs66eMb8TdeHJKcG4D0MVX9HMvxRI6dlHHvmg2gueKmHiAXCzR9y5s
yr2nEYQvvtXns/xKdPGE5d22aIKEoMao4LQYYrZGrnbz1mbA4cO9ggvRBMyS
Mxy+NkO1vLNo+MlowuOvqBmh1AK6bl33Rc2jiKn9P/QTO1pgsOVkRHRKJDH/
lk73/JtWsNjnSZWYiyCyT7M62PC1AYvloHCcTAThPinuqZDZBgGlePegWTgR
sgV9LG61gyTv59CfSWHE91xxgT2kDnhe1Z19bzCU6Hl5VWpfTAd4mnxSMDAM
ITL1WTVtLnZCArty5uP+YCJfNsaWfaYTqn/MyD3TDyLqdjiqlQZ3wcSF6LRX
vZ8J5WnHrkuiFOAcvnLS4kEA8dGMszDDggJSbkwp1t1+BPs5y2fhlRTQ3Jd6
3P6eLzGT7XppYS8Vnpca/nGkfCIuV48opLyhgqchr7TbHW8iNiykv7qWCglM
ZQkfOj0JDj+lEMX93RB2Yfq2eOYHAk7nwpR9N1BcdW4eSXcnHmR8yOpt6Qbh
0mQ92VQXovE5Q8Rm6R64y8RzTSnZkQCJm/f03HogTNlC5/yfd8QBgTXd4u4e
IDb9iYy5b0u4+lU1qZzqBXxnFpJ225KInP4lUv2pF4i1k5//Xn9FcFqwmV4b
6QW7uRmJ9PjHhFC+y+Za5T6g65qWz7hwi2BtqRCV+bLByvP+LBPHCVLIdabX
sxusuDCWXHcZYy+/3uR2qR/sxOZJqS/0kbnqkJNBdD/gTjmnsqznWE+7w0ha
7Qfi82v3VOI1Xrdt4NHQGQAUSPKMLrRGHZP7lirfB+Bu9cLfcw/tsbhyC0sH
aRCEvf0r0MABMz6drGTRHQSK9onqk0bO2J5WwUTED0IYd0Pt4cduuJX9yZ5F
ehrcbXrVIGb8HgO/2JbHXaOB50VWY46TnpiS/nji33caPI/XHWVN88LJN245
2us00OSINdkk9wm9cxQS5S4PgdSz+XG6DB9M1av0MosaAs5qlRcr8n6o4XjF
Zn12CCak/KbmM/3R+oQprUplGKq9+l5NK3zGFI312C6/YUiYOj47lh2IDNbO
ExL9w+Cp7fB6CIJxxIu4HnF8BJ4n1c335X5BgbuFI2rvRkCTW9SSiqE4WnGI
b2fVCPCekrMZuxuG7MqsZYy7R8FlmKJoLBKOFbf8r3AajMJCkMsajRqOp6Y6
fY8njILRRalcw4gIrPFh63i6OArNK022ffcj8Qnhu5amNAZq8bb4QDQK5WaO
am13HYO0WxIkak8Uxog4JFpVjYEkR1Xe7ahofNvj4zC6YxwCcl6/a38Yg1u5
mDIe640DyzPBM9fFvqK8PmPlZPA4WAgVMzT3fUWL2em/77rGYbDqaeGVmFiM
LX4s9pFzAnTtuB3rDL6h0/OjWd1SE1AqlX1WSyIOTabHmbM1J0CW+pCpaiAO
LzdXHRF6PgGxXltKLsZ+x6xYgajNHyeA93SS81+jH6iSpyBoHz8BLlM31NT2
xeOn6ZdhDv8mYCGCgbWYFo/1reYED20CjLS/l52J+4kG/Kb0ikyT0Myg7Zb3
+BeKW9G+zu2ZhL3XbaJDuROQVYaVX408CTelaxw7zRLwU+pY8/Ebk+CzWcxA
oDEBtV2EXInXk1DebaFy80Qi9p/g5Rv3mgTGzHLxIL9E1PWryCj8MQkKn4SZ
W+cSsWCSsfVsySSYPjEd4L32G3ki/ttrTp2EH2dKS66l/sYkX47AW8uT0Lub
P9aP5w8GsJHc13ZMAf/MM5cG8z84dGAq6/bhKdApLzDa0fwHXyRFcDqoToFH
FM85bdkkfMx8Tc307hQUWj/Z5x2QhMu5SldlLKdgRSeXtWYhCfnX4vQqvKbg
+KHtQ1v1kjF+cTbodNwUPN9k+Fc9PRkH9zu9D8qfgtiOjLj3u1Iw8Kljfmfr
FFCSOdzLLVOQLdhjnGt6Cng/3H/C1pqCQ3PqdGS2adA0SLlwXj4VrX0vMz4W
nQYX2HzQNTAVmZnfPg88NQ3EzttbSpdSUVOLFNOkPQ0LY4kjTDfSUIKfsVjS
eBqkSjZVnM1MQzpXxhUfh2kwCtWLd9idjjfLqJaiX6YhzDz+fcGbdCSNNb1q
S56GZg2SCX17OppxPeMvrJwGTskr6koKGfiA+25Y78A0qNF9O2wXnIH1u17s
USbNgF3zCkfuSga68lxMpfHNQFqC5vjqzUxcEXGJbz8+AxMuUVUK2ZnYR179
KqoxA5L3Fn69EcjC9zFe9kWPZuCu3EXPDJssvJ3rHFzqMAMB28KeL3Zk4fyR
fZXHwmagmjatKQvZOBUibMueNQMs+apHzUOy0dZldeRG8wxgYNC2lLVs/KUv
JS42OwMWL8cnZ27noM+JnUzPuGYh4fyZ2mO5OThayn2ULDULg3v8f78UysUZ
9hrOIPVZEF4e8k60zUWxv8bVzk9nQbcOXk105eLVrgndze9nofRK2TceYQI5
drO9loifhV6l6V0nNQmMoLrb9FTMAt1hAberdgQ+tLy76/T4LPDzqS6ZJRB4
ZsX3nOq2OZBlevHYl0KgW95Vq7ljc6AzFdiaxJmHgpHP8y9fm4PnnYXn6zEP
Tc8EU26/mQOPv2MZ08/z8HfniKxA2BzEpvAe2B6eh/KXHtd+LJqDwojTQdI1
eehV1KiTNjwHlA/GbJdJ+XitLpwpgGseVqz83rw4mo9Onaz/jsjPA68hMex5
Lx+b/3sqbHd/Ho5rD91I8MrHqe4KQVf3edAk7yivysvHsaF3r88nz4PxAVAY
n8zHLZ57nhV0zYMLj9EPjj0FGJ0a1D+1eQGiGLz5D18uwGoXR82mEwtAjGd6
XHpXgFqJkckmDxagva1vxfh3AaZxhP1J8VyAhZKtTz26C3D/liXrHzkLsCNJ
ruM7VyFy9x1ouTi6AFJhDy79O12IZzs2ifnwL8JFj/fZQy8L0e42WfvtxUUw
skg9tDmyECf+KY4y2SyCw0Pql311heibyblj389FCNNk4zjHUIQfxSPtu7oW
IUtB5q3RsSK0IIm47eVagmbJO2POD4rQ/qOnwJTyEszscL399VMR7o0KKVOy
WAJO0p/K4oIi5B4KztzyYwkOjrZD/3QR3pdMzL9AWQK1FqZfm/YWI+3+8cvz
O5bhYZGUkJhOMUr6owPz+WWwS7z+UdmhGP9kPeE3tV2G4C8O6w+SinHF96fb
8eRlSHP9+ey/3mK8VWw2Rh5ehnqz5q6IHSXo5Na2673ICkzco9fMVy5B6ess
vly6K7BF/SBBNS3BHdFp4cUfVkBS/qoUKboEz5X1QWjRCiiL24UJN5Rgp7rn
Qe+VFbjLFceJmzaGLruVKZ9jq2C9Vmd3R6YUl6ISVL48XoWAodWJt/ql2M+Z
9zo0fBWSGiXuhfiWoon9p1rP5lWozteqyS4qRc4CeX6DrWsw8vONUsdsKSZP
N4xvV1kDlqDoxBWxMjQ+xVL6wXoN9jpXifBfLUOT03b0/36vAb5a9DrlVIax
W973Zg2uwc07ovQ3Usrwfld2qK7gOlhcuPTSqr8M6erdrnprr4PPSfPuzzv/
4mw6g8htl3VIEA2/nK7yF3OG321LyFqH8q3/8ptf/8X6rHty1hPrMLg8I70Q
8xdvcDdebdtGR2YcFIzkafqLd4nBon0H6MjC9WrbTzL/w8RaCVtRZTqyAvHy
v6sn/+EL2YOV+TfpyLo/gqfNDP+hbM89T5IZHdk0oPiBr/8/TPgXva3Vg47s
6TBRl1TyD13XGCJUoujIP57zKdfP/8PQ7uLPSpl05NKbyknTEuX45/Ul/aIa
OnKvmsne7brleJhByrl8gI5MJxPgI+1SjsMFeoFaq3RkfpF8xstp5fgldKeO
BheJLMs+YvpisBzd2HY4EeIkss4id58nbwX+OKMjHCZPIj/vI19JUKtADtbt
x2iXSGSPmkdFVRYVaNa7c8bvLokcm/1JZjy2As0POQ1EvSSRC79lR3O0VKBP
rpQkhwOJTPEd4D7MWol9ChUulT4k8or9NqdLcpUoUL5ST40ikXlNTs0ZP6pE
g6hQeuUkEvn4dX0Dj8+V+NlE6dhkPomsqfKx8XtZJR4/9TK5r5pENpZOV/m3
WIkJYWxMgp0ksotgT8rQviosCb9X4zdEIkdtZpfYfL0Kxzbdmbk4RyITcyf8
97lV4aFWDxtFEj25vfsu87mMKjzTxvhTn42evFDpZm40VIW3fdWX8nfQk91u
tU6fYa/Gt5wSbNoC9OQA7fHv2mLV6DQsnbNdjJ4cc47x4QPFanxVGyjOcJCe
nETexf/qSjUmqHi/F5KmJ+fLHK5/97QavTJKXxqepCdXHzjj4e1YjQubizxa
TtGTO0V0lSO+VGPkkwNlpmR68gjP05XE5Go82Dt6UfY0PXmJ/V1SXkU1fnAw
NBVVpiezMPob1/RV45zd/TqZs/TknUvf91JXq7HCmFXm2QbvnSDaJ7hrUI9L
MqNqQy/d3+BDd7gGTdkOWF87Q0/G9qGLnCo1uCdlroFJiZ6sXrvOKHy7BieK
LR07FenJt0t3ZB95vaFPkzTskqMnG+fsMyN/2NjPodVjsww92SoJDmnE1GDV
IynFe0foyS5x2n23c2ow8PPwVK8kPdkvzOiLSWMN5p46etNfhJ4c5Wdz5e1Y
DVqpZutZ7aIn//bwZv/AVIsDcYxrHznpycS7r0VfBGux84yqRysTPbnSIssm
/kQt3jzibX5zhURuN6mRyVavxfsLv+/xTpLIQw/7R8sNavGzND/ftj4SeeH6
cnT721oM35oVfK6ZRGbS4rw94leLK3ZFnEV/SeQdqmI7V37W4kcr4xKnLBJ5
j6J8JVtJLe4e8ZX3jieRpY5pOO3uqkVfVmu24S8kMux7CAfmaxGtVUm+70nk
i0KWc/Jb6/ABTwizjzWJfJ37w8/zEnXIHC9xaOQxiWzEFmlwnVyH9aGsEeG6
JPJrUprg42t1OFell5J2lkR2mC9vtHxWh6n2rs0y0iSy9yj1g6tzHca0l34S
ECSRw3rmVD6H1qFNxIMPpqwk8s8WtvXY1DokZ/O4kGfoyFlVwqlpVXUYfcZA
979OOvLfIplnpQN1KP+pa0S5lI7cnHleonm9Dv8KPlF1TaQj9yfe6Rrgqcf+
j+7WVwLpyDNfTf3nj9SjXEto4s93dGT6EFcNZrV6vNkksjvwMR2Z0yeEmedu
PZby9yzxX6YjC7r9yRW3qMceB7UQBTk68kG7UvMTnvVotM/x5poQHVn+dccR
ldh6vKbT4GPIREdWM54auELU4+mtpnrLzetw9T5zmH5zPUbqP+H3iFqHh7r8
umYT9Sh1g/uix7N1eKl+lNORpQFF+BYKmOTXwU5ZpdRHuAFfVO+5zcS4Dh/k
b9hFyTagrGLWuG/FGgRLPZdN0mzAUP3PZwm/NYgTd5woMGrAbK8OYc87a5DG
HxhbZ9eA+fFRxzgl16CY69fdnoAGnJBMF7gwsQr1LIW80wkNWGl49dGFtFXo
Xmuupi9rwANtC8677VZhYmbUhYvagNZlClVFqquwNkSvtGexAR/WlZvpbF2F
LVSexaPbGpFN9p5nTeMK8DUdTFTa14gPm6s5VEM2+l2F0iMtpUZsmT6enqO/
AicKrorc02vEEm/hQ6cPbfS/9Cctz180Yu37kdbWmWW4/MvOy861EV34djF4
Zy3D3Wjfc57hjRiTW/TnucMymATFkcLSG9F/r8GU7cVlsPbKTf9V04ilSTe0
Sjf6uZtz/YtcWiOeCxGmaHUsQYANbV8VqQljZptZxWKWIObVGrVzVxOe9T6Y
c+7ZEiQ92h44drQJHSdl40tklyD/juTltXNNqG6edTaGfgmqryhu5rjfhH5c
t/+MlC9C54XL+QJWTfihfVtHuP8ijCgZWh3ybkJ9CHpQfn8Rlk5aSyvGNWGe
4KGwl4cXgeWw19DF/CaM9ZCMDFxagJ17YyJutjah8uUl6fMlC7CXL/O68dQG
V/D8c/JZAGnOai7rzc0o/y0o8sr9BUCmvr/ue5rxdBT/fKbUAqivLL4Lkm9G
5rjJL9nr83BziuPU98vNSGIvUb9TNQ+PB0WnMx434zk6beXo0Hmw6JT9/vdd
M/Z2E++8n8+DU/2lB62BzRhUJpez//Q8+Py9v3vodzNG0slverFjHiII87rF
v82oH1fDYzQwBwkpHu6sPc3I6tljyJU5Bzk/ws/sWm7GwPL/dr38OAflESnL
kttbUJLlNYPrwzloDfj3R/ZAC7LS/v7SlZ+DwQ+UJ2pnWlD0cvDNbs45mHOY
FdW90YLvZwdWxAdngfHN5nbDVy04/sdZToKYBa4XQj7m7i0YcFT1ZU/Axjxv
ePyic2QLGi9z5954OQuHb51j9M9swQanK5MfL86CgvbtrJi6Fjx07rSvrcQs
nD/3yjRluAU1uM2n9zFszP9kl4PFDK243OnK9aFrBgxkvvQ27G5FjXkiLW7D
f5ge+B3cd6wVpUu6nr4NnIF3IiU6sxdaMZ9usw2z5Qx48rRv2fSwFTuPZc2d
0Z2BEPbJwh3WrRiYn3LjqOwM/GBgstnr04psf4tnKnhnIGORT+b4j1Y0LHP2
2bk0DaXjR0bPFLai8gVdbtb2aWjsU47Wbm9Fbo7/5CJypqG3Te/Wg5lWtIso
rukMn4apGhPuV1vakFP+iVem4zTQlf5X8W5vGwq2qDDIPJ4GjpwAR2+FNrR8
rPJWVWMa+JPiFSN02tA8n7Q6dnwa9sflzyYat2GKyQ0Wyd3TIBvWFJ/n0IZr
ejETY6RpUPEb0a8JbkOHtiE5Mm3DH3uQBKlJbehTx/t7R80U3H+3s3GivA3b
ajM4n6Rv+F2LAx/o+tqwhuq7qBgxBW9NUIVztQ01f6muu7hv+OmHV9aEuNsx
JJUarWo2BYHXH6ccOdSOzIu2+mZ3Nvyxpq0J+Ww7Bla1/GA/PwUpKj7iGrfa
8ar/vx42mQ3/rfCt87ZZO37OaHr6RHgKaqVz/Ezet+PD1i8/JLZs+GnJOvW3
0e24t1iFXmFhEsYEB5k+ZLejOX1vXWTvJKzsWM350tCOGrF57tdrJmEzG5d5
/Gg7PnvxLehGziTwkiSOZG/qQN9abtuI75MgPn9qoFygA5m26WTv/zwJx0c1
Q9tlOlBS3Wd43GkSTvfoXxu51IGW3v0/R00nQbPFauuKfgdmj4vmCD2YhNtV
H0vY3nbgJDW/x15rEoyLomx3+3XgS3G/9a04CVaZ6ScP/OxADvIXhuLDk+CS
WDkuX9yBVhKN7qECk+D3tefr+c4OvKVqb/l5yyREfVm4c31uI7/hk+xfyxPw
+xM772OOTmRjeXqya2gCCNc91Zbinbg9MHJVtHUCKm1PurhCJ/JSQ35YlU1A
u9lF/Hy1E00XpBgoaRMw9OTeQqzJBk9zUjVjJ2Dh3uuENKdO7LSNUf3rPwFM
uu5GpSGdqDecef2c8wTsUA8Tbk7pxKignff+vZ6APcrJzQOVnZjJP1d4yWAC
pOT/es73d2LvguWOyisTAFJdaszrnQg2e+PPnZ2Ai+IzdDw8XXhJ/u+m3OMT
cJ2fNV38SBcG7rtMObB3Aoy4BF+cUO3Cnzfdz33YPgGvWY7tU7nThawaEY69
9BPgsKZKvWK+ETfZuqTXOw7eMzc/63/swkahowv/8schbOiFltnXLrRP1xAX
CB+HnxQnVsfcDf3JBoULtuOQ1RiU59PUhaJ5w/Xat8bhb3mCZdR4F0bWfhGS
OTUOxtRu3lYGCt5aEfca5R2HVzdHZ6hbKTjP+bHrzdwYWDXNV9N2U/DSPjFS
V90Y2F+mj5+UoOAVy/b9OxPHwKVii+viMQoWrXtUCn8Yg49qPPok3NhPnO/z
2uMx8CsQUWK9SEGfl/bPf6mOwRc4KLBNl4K2JnUvju0dg6j0E4u8Dyn4fZ53
3I1uDL4fV2oQfk7BejGJpynto/D714VESWsKklYfhKekjUL6/qvvpVwoeFzo
7TMPn1Egou8+kvWhIM+vXQOyz0ehRPjJWQzbeN/LVCn7wihUBpmJqP2g4OhJ
xi4+iVFo2Gm3qpFGwRL2rWe16Uehw8ut5VohBfXizuw26hiB3i2+yXeqKdhf
orHvRtoIDDuHehm2U3CF0VLn8KcRmKKPe/pskIKVt+S+9DwdgUWbpHPmMxT0
UqTy26iNAN1ijpgtHRX9Z5Fhdc8IMJuWkZy3UPHIlRs++qvDwDFe1/GBl4qh
LKLi6U3DwP24M91vLxXLNZQFlxKHgb9v0DdEioohTivj+z2GQfTu9IsYBSoy
UOn41A2GYX/b6qWfalTcHmW21wCH4ehVlv0pOlScYpsPMeMbBtkaLqacu1Rs
nU4StJ0ZAvJFge4iYyqOy0coOFYOgUqJRE6FxUY9RWmf3GKH4NJp6cAGByqm
t13O9Xo3BDrZCq87PKnI6ROo9+XmENyQVb3cF0zFvLKtS79ODMH9P1qHR2Op
aL5L7Hg55xA8Onxz82wSFX9LzfjODNHg+TeD/hWCiqbfWL8eKKKB+d4X+YwV
VHzyXm3gVSgN3oa+CdnSQkUl+76KKksaOPI5We3oo+KAjWWpkg4NPHw9r/JP
UrGv54B8+WEafOIMkt67SkXGoGmrF6w0CHSP5jjI2o1TzWONx3oHIZwpYegY
dzcyb6t5z507CLH2GcWnRLrR1tKgljdwEH6tFEacOdSNGdYH/5LNBiHFvOrt
BbluzNFd8/DQHITsqZbr2me7cSt/w17SwUEofNp74oZWN7oJBL4PZR6Ef4Nj
XA9ubeiXNyc/6hmA2geLY48fdeOBPT+t7uUOQEsnw7+XZt14obDxl0vQAFD0
OL5a2Xdjs3QqD9V8AAbqef97974bSx/aGRrrDMCYhugdt8/duOTwXuXg0QGY
/XvolHd0NypfClTfwzEAK2dleQITu5E6Rb9Fc7gfGPJOT4dnd2P//S1rKaX9
sFnhUtW3sm70dD/mrxvTD9tSr31PbOhGytN3iicc+oFX+r5zOrUbzf7Qzmvd
7weheOMHeaPd2KES2RiH/SAuaU4uW+zGHi36v2eE+uFQpP3umk09KOiwtlNw
rQ+OC3rMN2/rwR7fry3yHX1w6rNfHUWgB43e76kPyuqD0zvCfw3u68Fk/9p9
SsF9cO7jd/cJmR5suRNdfcC6DzQ3pxguKPVgZea06q2bfXDNkThDp96DS8oY
2KjQB7fp/gmxXN/IF3Zrb4BAH+i/aVjeatCDl3VMcyPXesF4rquJ52UPZq8I
Wi129cKrF0N/hN72YPRzHaGgvF6wGpn5KOHWg32lwZ0ukb1gb7j+5IhfDya8
oTkUOPaCSzer2smIHjT9eqvpglEvfLy1Yy/5Zw9yHNH6tOdCL/g1C9KpZvSg
Br2aidrhXviiva9dvbgHpy50cOds64WoymNpV2t7MF874ojDbA98Pwc+tzs3
9AsTukEtPfC7UO25wVAP7k1PFGfM6YF0svZFk7keNLnDLZYb0QNExi3J1/S9
OGl4uqncuQdKZIwY33L0opLBXMqhpz1QmfCS4sjXi7bxu493X+6BhgM2We/F
e3EqRDtpSLYH2mOcA3ylezGM67W3qlAP9Ih4m36BXvzbGp+2sKkHhoKDNaPP
96KRytaXayPdMMnz9WD81V6U7Cm31qvvhgXvRJbk+734qpRFeHNWN6yzZ/Vm
mfQiTx1DCmdUNzC5FhOFVr2Y/u/oDWOPbmBnrAkud+rFuh/O/wmYdcMO2zaL
eu9evN5ArRO93Q27l/p02kN6sehWQ4utajeImE1I9cb1Ym6lqLPU0W7YN7G0
ZSSlF0/c1NA6sbsbjj7ZRJvO70V/CVZ3z03dcLJ/a9FyZS9G/JKVJk9QgXyP
L5yhrRdZrDdpK7VR4Wz7Xhu2gV4UbdG+6ldMhUvXjuhtn+5FLfayD4q/qaBd
Kyeze70Xv5lzyZ4IocKNS8rbRNn6UJ7u2GtbNyrcK1Uf3c/Th9dYmnV4zanw
6IxembRoHyYypRavP6DCs5wH0fJH+pB7bibquBYVzOVM7E+f6sPu1ICfyUAF
mySLW+dV+7DtP1YX+4NUcDzyn9xl7T5MeB2Y4cdHBfe499zX7/TheZW9SdMs
VPgkFjB570kf6vH+LPabp8DnsIiKR+Z9OPJYXPJtPwXCd8d/e/FfH+ZPHpz6
2kCBr36pjpYf+1BLYUyEq4gCv7bl37MP6sM7tG0BGUkUSPYoV3T92of0/Fm8
oVEUyGZu2uX1pw/PNkRcyPahQME76mxAbh/KLdO2cTlS4N/qcE3Yvz603++u
FWRGgRqLufjYpj5Uq77RdtWAAi3TdG4JPX144Huwq9I1CnSZsBmkjffhxVPL
ZnpqFBigcZ8mljfq4zuaGShHgdGHwoKlzP0ovOUJmf4ABWa79i9Vbe9H9VD1
eg9+Cixfl2lsEurHpmqPYyc5KMDQSP7ddaAf51wj1pfXu4BV6/yHgZP9WH73
g3tmTxdsK9d5PH6mHx8fM1yKLukCHtU7KvMa/bh/+7kdSd+7QCj/0Z71G/2Y
rv3IuvNjF4gpmq4xGfVvnP9FfwRMu+BQ2ttWDtN+tIte2P1YtwuOHXNN2WnX
jwdjZZYyFbrg1M9P3oIe/biY9NCKTaQLlPaFmIgH9KPQtfu/NTd1wbmo2POH
o/rRke929H+0TtAQ+iN+IqEfH0SfCwqq6IRrgdn0kNWPgb/fvfNM7IRb3KWd
Z0v7UdTEf88N307Q96zNuFTfj3Uvkn5MWXTCE7YOvyuUjfg+5nWNm53wymng
5a2RfrzXvafoCbkTLElT6voLG98Te9ZcYU8n2Fuv7H/KOIAjIuasGYyd4DzP
xGzGOYC7DIxs2/s74OPLbT3W/AMoUPh+Iqi0A3xHd+c6SA4g0Cl4THzrgC9G
4kEexwfQi7/4S61bB0T2SJn74AAqJAd4yj/pgO+3T2kHXxxAzXmNGeELHZDY
cvZIlO4Atp8ssnu7vwPSdTTZfjwcwKxj2/gusnZAbtX1gT/PB1Bqk139u4F2
KDmvX5BpPYBjPa8Wdhe1Q0XRs9AClwGUrzzGtC2iHRrQ6s0/nwG0V41Mv/G2
HdoyHa7VhQ2gjwGFfU6vHXpOfDzW9mMA5eyLsPV4O9ASP2/tSRvAoYYLjfRb
22HyYNTwUOFG/u/lQY8H22D+68+SqeoBpFgIft+S1wbre9Ijl9oH8HOm+9Pe
gDbYFFJgS08bwK3q4SGjz9qAfVfljc2zA2iTa7BPVKUNtvs0n+QiDeLH9n/G
73a3we6tPdv52AcxKcDjPOtEK4i4jY6L7BpENulp76SCVti3aeHfPrFBrAuq
5Lb3a4UjdvSxR48O4nxGfbyxUSucXN7iIKc4iLo5rn5mcq2g+JrnrtK5QTy9
x/1pIGsrnJ0UUTh3ZRALr0Qda21ugQvGB3m17g3iHPnHpeNfW0B74MSM7tNB
dOU44Bhr2gJ695Wq71oOYjmlhOWkUgvc67jww8hxEHPY3xpTtrSAoe5Vl+de
g3h/7PO36KZmeFZ396HFl0G8jjaCLuHNYKb+BO2+DSLznQMfXB83g02ZGb9L
8iCWZX4R+iHdDP8p2y18zBvEbnHqzanFJnDPdav3rxhEmciVo3eIJvCS900I
bRlEy68Rw7OOTfA5OdTja98grtXHy2Scb4JQqTijX5ODWH358a4Ejib4+j1J
OXV1EDcJxy+31TRCvHiucC4rDaE2I/C0TyMkh5etFHPTcPnaOhvtSiNk8tc3
V4rQUM8sIL1+ZyMU+HcmNR6iIVd10h22pgYo46J5dsrR8LJ1GesnvwaoeT9t
3H+Wht3cYVtfXmmAJpY1tTEtGiq6kbl+bW+Arv9YxOZu0XClInFBs6Ye+ta4
SGuPaHi2Inbk9od6GLUU6Nj0mobBC4zXKOfrYXpGIp39HQ0nu8jt7Uz1sPxM
2pf7Aw2zb2Tr3syvA9KwwguBQBqKVW/qMLCpA1YD1UtiMTQsEhz5xihbB1up
WvsO/aZhbG/4QZiqBZ6bNzfJ5NDwXnTW0u4ftSDQZEBV+EtDetfDlTH6tSB2
+UW2ciMN+7Vk7AcEa+FAxZvPF7tpOH/49OaBpho4puZkpjO2US9bh/lPzxqQ
K/DUurm0wXOOIyrnakAJgg49ZBrCy7L+gemkGlBNj2Y15hpCcsh+YmtGNWgc
T+h7JTiEqlaMkZdfVsOVXxl5b/YPoUW5k4f7/mq4tb/oy38nhrB46Ja7c1EV
PIiusnQ/PYS2rijOeqIKngi3XvmkPoQVam/u/4yphBdBvUeDrg/hxM5vYa48
lWC5c5w90mAIl8NTROJdKsDWa5EW93IIpUUmOyWXysF5C2Px77dDeFhzym+r
cTm8d+aIyHAbwsSHg6Hmnf/Al37X23y/IYTFL4XPtP5BkI3o9b8RQyhorvKR
pegvRC4cOlH7cwhfh2lOXJb7C99eyXK1Zgxh96uzrnd+lkHi2OkxavEQTomt
xMDeMkh9dOkvrXYIaS7bFOiCSiG391rMZOcQDq9Htf3hKoWiO/ffLQ4NYZeh
EbuRewlUtBrfJs0PYWAZ+5P9m0qg7oq5PCvDMPLdNu5mtyuGtmr7ndu2DmNm
O5OnwEoRUC94TPHuHsY5rT19BpZFQCv2qxSWGMbYx3Mtc/OFMK4UHid5bBh1
xiyHWswLYT7ru5MUeRgVrths518sgNWTKfdlLwzj6vvt1aVvCmDTHwLw2jAW
lqvxDK/nA9vhf3xqD4axjE3i+nvHfNj+rWFO49kwnnI+UJi2JR927aXUXnsz
jA8fRFeb+eaBSOjQzzvOwygy7xxRI5QHEnyzboafhvFojHV9zXcCjviuGzwL
HcaeEUL8rRwBMpybz5h/H8a7cjFBmV65oOi+Q8g2dRi3+y/3jv3JgTNMQstO
BcNIN67+MKIlGy7Y72v6UDWMr5dLgUqfDVorx/74tQ2jWJG3Y/KRLNAzh48h
A8PY8WnupOTdTLgzpfYkZnoYs0sWzir5ZIDhU23Vn+vD2PXZjMxQng5PB2+J
prCNIPPzq0sWzOlg9sBoPZtnBF8c6kyOUUmDN50v24pER1Dd42G/j2sq/Kdn
k1pxZASbFT6EKFWngGu986eGUyMYrCBd8JMvBbw0vJ91qI7gzzl91Q6jZPD/
G3yhT3sER07tla7ISILQs18lRu+MIG2vYpQNZxJEE4kMs09GcEDDtXPk0R+I
P5XVtWI+gmYj19V4S37Dn5TiTEaHEeRgkni9IvEbMo/W+G/xHMFXTvekfD0S
Ie9H26sdwSPonD0j1TaTAGUS/Rr8sSMYpsT9vOxuAlRFTBzYmzSC/ln6bLlh
v6BJYJn5IDGCT88f/yrq/BO6Ajb1HivfqLdUXSLRNB76tnMSp5pHsEf7v9yr
j37A6Ae+4DO9I/hjhu0Vvf53mGYVs7gwMYKWbPOi4YZxsOxwREd7ZeN/GAVE
CL74BiQ6eakbLKPoSFrK0rePBdY3ylse7BjFNy5n1O8GfIWtc+qDj4VHcYcd
p/p8cgzwvNArfHlwFN3Sf3RxtUaDwMiDMCvZUbR3PXIvkDEaxAxNrN8pj6LU
dRMrU5koONBtoeumOYpekbkHnI0j4dit/4573xxFrQTn9tRvESDX/J4z0GgU
RxddHg2PhIOSdsBIuOkoMl+YkmY6EQ6qlRGl3+xGcfCE2P4RhzDQOBcflegx
in7pd3JIf0LhSmGqXXrAKApFDO3WMAyBW+T8m3lRo+hTTXfVSfwLPMgoly1L
GEVdpqUu44kgeCLTtKMmaxTnM2OrSgoD4UUCdaK5dBT3uNbO3Ij8DJYHRsop
9aPY19o9PuoeALYxc7GDlFF8caBO9fRbf3AWITlOjIxieYqyrYCVH7wPZru3
sDCKRmqlksq2vuDLs1ORbtMYur7UWrJ67wNB3sK7WLaNYbFkXZdT1CeIZD8w
u1VgDG/rMLIfKvSGby4yNTz7xjDZ6wLHsREvSGTAeCGZMWQcqWm+ze8FqW/P
u0oojaEvNavltY4n5C7q6B+5NIa2SiKsDpIfocj0jtJJvTGcjzbP25r6HirG
HwmQ9cdwOv/LQREdD6h7bLqo8mIMh5byps+tu0Fb39sGdZsxdL534YhAmitQ
77omXnUdQ5Hjxm+OvHUBWtun97d9x9C+3sqFW8sZxq+GPDIIH0NlIqlDVsoJ
5mtiz5rEj6HxlBQtYLcjrF78I/I6fQwrXtj7B3I5wKbS7FWbojFsVvMSatvx
H7CdKW1xrBnDHXWrfosi72B7Tm3y+44xVFl6ueInZw+75Dq8fGljSHmagldv
2IFI0sDTL7NjqLPYEpzGbgsSR6bORZPGkaHvvEiYuQ0ciVsRi2cfx0W1RxNJ
029ARoyZPnnXOF4eb1+/aG8FimHbOrPExjEw9+OdfCFLOLObP6Pw6DheSG9T
fFVpDhf8xP3KFcfx8+FMWp7Ha9DadvRl/blxdHXcXrfjuhnoeZxSb78yjgJF
0q6NMqZwh1llf++9cbTYGcwsKvQKDN9pMo08Hcf/vT9iWiN/WPvx5P/x/wO6
Eo9P
               "]]}, "Charting`Private`Tag#8"], 
            Annotation[{
              Hue[0.5585438199983166, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0., 0.7, 0.7], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1: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

               "]]}, "Charting`Private`Tag#9"], 
            Annotation[{
              Hue[0.7946117974981064, 0.6, 0.6], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.827051, 0.418034, 0.0243459], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Line[CompressedData["
1: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
               "]]}, "Charting`Private`Tag#10"]}}, <|
          "HighlightElements" -> <|
            "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
           "LayoutOptions" -> <|
            "PlotRange" -> {All, All}, 
             "Frame" -> {{None, None}, {None, None}}, "AxesOrigin" -> {0, 0}, 
             "ImageSize" -> {576, 576/GoldenRatio}, "Axes" -> {False, False}, 
             "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
             "DefaultStyle" -> {
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.827051, 0.418034, 0.0243459], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0., 0.7, 0.7], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.94, 0.462, 0.162], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.46056, 0.40064, 0.81392], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.09096, 0.6296, 0.85532], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.62168, 0.2798, 0.6914], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.448, 0.69232, 0.1538], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.91, 0.318, 0.243], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.97, 0.606, 0.081], 
                CapForm["Butt"], 
                AbsoluteThickness[3]], 
               Directive[
                PointSize[
                 Rational[1, 360]], 
                RGBColor[0.34398, 0.49112, 0.89936], 
                CapForm["Butt"], 
                AbsoluteThickness[3]]}, 
             "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                 Identity[
                  Part[#, 1]], 
                 Identity[
                  Part[#, 2]]}& ), 
               "ScalingFunctions" -> {{Identity, Identity}, {
                 Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
             False|>, 
           "Meta" -> <|
            "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, 
             "Function" -> SmoothHistogram, "GroupHighlight" -> 
             False|>|>]]& )[<|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {All, All}, "Frame" -> {{None, None}, {None, None}},
             "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
            "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.827051, 0.418034, 0.0243459], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0., 0.7, 0.7], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.94, 0.462, 0.162], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.46056, 0.40064, 0.81392], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.09096, 0.6296, 0.85532], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.62168, 0.2798, 0.6914], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.448, 0.69232, 0.1538], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.91, 0.318, 0.243], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.97, 0.606, 0.081], 
               CapForm["Butt"], 
               AbsoluteThickness[3]], 
              Directive[
               PointSize[
                Rational[1, 360]], 
               RGBColor[0.34398, 0.49112, 0.89936], 
               CapForm["Butt"], 
               AbsoluteThickness[3]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            SmoothHistogram, "GroupHighlight" -> False|>|>],
        ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
         4.503599627370496*^15, -4.503599627370496*^15}}]},
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.34398, 0.49112, 0.89936], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
eTUO6NxS6/2/70HCKPratn7T/4f/B2Lknd4=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.97, 0.606, 0.081], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJw9e3k0VX/UvqSkUSVDoSilQipKaLeLRCQhQ6QopVRfSiUhkiGEZEolY5ln
ZXbM8zzPw3Vxjdd13auJ3/2t9b7v+eesZ+3Pevben3X23s/+44iY/adtzs7G
xsazmo3t/78Hiu7afjvbQrD9z3PSSC2LR7Lp//D7rCSG0bYmoqkoeFeHhy20
795npTLXSGQ9rJv79PsFvG2bprXlNBKZ84fcKl69BMW3WU9vvWkkFia4bygL
OAD1tOPSvGYjYRCw3/1fpSNE01ReOgk0ElfOlXBYqziB/vcty5tHGwjuNKn1
T2WcYYNxl9OX5Abi9cMjm72kXkMhd8RqiRcNxE4tnVcnZV3gcfk9t1ylBqI4
7AP3arU3sN/uGJfa5gbCNjuhyu6+K3RL/fHq7KonOKivuaVD3eAdqXTznah6
IpEjkMjucgcM8X5Pf1hPDMifl0zZ/xboGld5XOTqCbs4zmPpbzwhdpVw8NbV
9UQKh4aC+YIXGP0YEwivryPcK3kuWz15B1ssUz5LhdQRJ2+I8Tit8YWS3ba7
C8zqCI3erinRq37wrA0j1SXriLb4/CqFo+/h0FsusR5mLcHOJbhwl88f+k+3
fLcoqSViRA7zcK77AO9poYeY3rVEoaTp4ZerA0D5+60kV/1a4s3wrLf4+kBY
MpKQ5hGtJZjPjw8+FQyCRO7F9MjpGsLorhhfnXww3CgvkD36s4ZwJkc9CTIP
ge12btlFzjXEavtvz899+QgVUpcVNDVqiDviSDozEgp2JL7CPt4agvTNMoFN
9jNIhQyh5XA1UV0XRF0K/ALDGnGlvxKqiW8ipIWwNV8hcNVjFY9n1cRa/reu
sufCQfWHfDXv2WrC9YRntSVXBPy9v1ojZkM1cXspxCq1KwJSdtc1HO+oIhYM
zD6eS42EW20BV0rCqwhX+cJLZn5RwPf2epuWZRWx6LvthdaLaKg5vV9/ULaK
kDak92taxoAjbbb7IVsVYXt39YbwO9/g2Pefxn9rKokp8WVNd8vvMGbkNOgZ
WElQBDckqtrFQgi3mpnAzUqCf1q2RvxDHGiUbyV/P1RJnHEWpjz4EQ9sdj13
TyxWEF7zXU3XRhMgUypqsqyogjCy+FcsJ5QEFiTLhzqeFURX0fjtS6bJsDNE
hjqsW0HMzu7PHkxNgQaNf4+tdlcQXE82v9rllgqvV1UsLlPKiVG2Cd36U2lw
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
NzMN
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.91, 0.318, 0.243], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJw9e3c4lX/4vz3KPs5xNJBkFU2p8Lxv2SWKkpYoSRSliJIUKRTyoWSnjJQi
oqzsPc5eyMjKKGSPfM/3un6/7/nnXK/rfT/3fL3v+7n/eDZd8LS5xMfDwyPL
z8Pzv/8/vl/2zTCkVPD8v99a+5HAg8+q4f/jA9mvHEbjqkHh2rONjzviMbdl
c/2Yt9Xgdk2HT3tfIhZvNS9vkFsNmF8yjedtEtaUmjk3UFINl3/1pz9STMEW
p+zoEfXVoFNs8y3tRCqmYSKUr0uthtpmotTg5tfYqZdfonp+VEPm31v6tMXX
WOgvZ4/QkWpQufgDV8hJw77qyVrumq2GP7bObHr1G2z4WbVGB28NlI9EHbhf
+BYj9ngJB4vXgMrGH4dXP6dj5ruUB7bJ14DawbLgt98yMN9gchVdpQYWLu4q
KW/KxDIZgakBO2pg63cBxZTBLIypviNATb8GPhuF7IkTz8aE7nafIZnVQPG5
6bYV9B7b2xqx38+2Bma/3VqzJeAD5qKIySmfrwENvjwT54Yc7MWN8ekmtxq4
huHX4xQ/YXXViZSbPjUQe5SzzcQwF5vBW+ZueFgDWclj/54v5GJbXJee1T6r
gdz3r2OSvuZhJ4qz3T1e1cCzugjxFwGfsWCx0xZy6TVAKqLjsg/nYwUOomoV
uTXgjzqZIkoFWH/uV4Erpdz4VwbX9i0VYLL8rn3SDTUQrZDQfan7C2Z8Qq6i
mFoD6467LdU0FWI3M+uSLnbXgCRz7O6O8iLszYL3XbHRGsBbaI2zv33FqIe3
nPoyWwMWPiMmf8u+YXzJtL0OfLWQT6D2fWwqxnZNBMkKS9RCfdv3B6inBLtw
cPfUJ/laOPTljz7rXykWHdPXbr+lFnwYh0M+qJZjVYPPc3h31oK4TKHyxMnv
2OQ+w/Bs/VrQnsiPdreowDaFT7jamtdy4/s80zRagR3rSjFdtq0FfGtw+I7/
KrHA7dYq6edr4dszZm0hqsJyH/zjtXKvhf7Csj2+k1VYDzWne9anFmJqM4Mj
s6oxKdVzZSkPa4Fz/oa/3KUaDHzFEswjamG69tGSplot5tlU4jv5iiu/e+N8
/+9aLGWDu118ei0M8MXecyytw9o81u0xyqsFY/3+7K+R9di/ikbpsdJasNms
nSdypQHTxvn9iWmohUCVWxR380bM4ZJ6qwGtFtzPuTquaDVhEUXM7MHuWtBs
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
bVu3yf/D/wNtBFkE
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.448, 0.69232, 0.1538], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJw923k0VW/UOHDlmySlUEkRIhVRKYpsuzJGpaSBVCplKqTMc2RIkmgypLhJ
kTHzcMyueZ5n13hxzVPSe961fr/3/nPWXuc8z+fZ+551zrP/OIJ3zS4brGVi
YtrAzMT0v8eu3Ic2307XEUz/7ye5kYvpWU3Z/8X5Z1Ozyz6XEQUpbtGm3HZw
xUHXXsCsjPg41c168509DCb/O2EFZURkIVekorgj2IxHzJdvKiMo57omNzQ7
wcZ9qsmCnVRCKso0tlzdBUJvjVlYx1CJ97Lnpc1lXEHyvb9kpT2V2Dm8xmFS
wg3yqo+NC6lTiVVaXVjV0edwhbX1hw0vldCQ8dnw5qw7DKKjYdVIKaEewOqe
r+8BNraC+4TTSwkf82NK069ewMbEon5br1KimVXqv+RSTwgdNfpSfa2UeAdt
rOGc3iC5d/NtEdFSwlb1nJyWqQ/k6Sbutp8vIR4+Cj1q1vQSrgRebaspKiG6
s4PPfLr0CgYrlt/vCyohLjy44+Xc5Qc26z5rO9wvIV4uTdgNgT+wwVmuOqkS
4sWxHb/4ed5AqNVQjShzCbFm7QXZM3/egGTcSz/HumLCzV30acJwAOQNSWrU
fykm5DyUxap63oKWQMOGAxbFhFlbRsxKfyAMXrcpccJiQi0isDBiOghs3uz2
aOAoJm4pf80R3/Qe2MqIMwe7i4hFuPiA+dgHCF1rwOTyq4iALx/XvXv4ESTl
NuQ0OhYRsebc97S/f4I8y1h7sfNFxFjJWE7yfDBoxVw66bq7iJjiHK46oBUK
g7S5+SZ6IWERcCldPCcMbPg+JYtnFhIRdQ/W794dDmxX4YmbTyHhleiuT+sJ
hxC/PsmWG4XE5RR+zrjYLyBZ8mL80IFC4oNB9nCW21fI+3fw5/PFAkI6vaP5
4p0I0DpRbdhaUkCcbaue+KEcCQPmlvsk3xcQDbf+XuaUpoBN9A6a+4MCwm+f
+YlyiW/A1pf5pe14AeEjnt6660gUhPDeuX14XQFBb+Y3U5f/DhJa//G9aMgn
1gdsF/mqFQ15L7+3tUfkE04R6ziNnv4ArUKND0cs8wm7cGWx0c8/YWBlUtvz
TD5RNm5+0rwpBmyOB3F1bs0n+mR7ypV5fgHb45O1R3vziBROO7EMgzgI+dbp
5xWfR2xguv7t5e14kOh21ehyziNavG/1aHMmQN6OfWzHLuYRtX82198tT4DL
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
ZSW0jKf+L/4fQcPbSQ==
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.62168, 0.2798, 0.6914], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
G655DJ/PEB/ArVoCIZImbKi4STHfdHIAK91WFR56wwZ5ob5k04sDqL35psIt
CzbktXaM1N8YwDXjZULJH9lwwrd57xGdAVyZ2d8h94kNCXfrHnw1GsCz3jel
Fj6z4cC2Sm/6hwHccyfXlunAhtDuktrLXwZwn9V0uogTG7YH/eaO8hvA1IE6
zg/L2ks7B1dHLfMG3Uu3Luv1e9Lf6WUMoJwUy2R2Od+RlJhSVDKAfhKzPpvs
2bAyLIa+u2kA01tHSa+X6394Ei72cWAAtx0/tGWbNRumxEO0esYG8CA3Q2jt
BzYY0fx9ZJcGkFAXrVZ4ywZatHedHx8Jg9YcUqh9yYZHz9145raSUOmHl3/0
czZ0S365cOsgCRebOpc69Nigwfz8Pu00CRPC+VMeabGhNtE6VVCJhEL/ea66
pMkG5ZcWoyYaJPxxMO2usyobiqTf7Kt7RELqt4fbj15kg9yUycPDL0nIw5Ff
LnuGDWnpz79/+UhCZ5vO/qTl5y31Vr9++CsJG7kvznjsZUOUjO4a5QASRrdW
mw9uZoMo+758RAwJPXe+lIvjZYN/7i0LrmwS8nk8ZIwszcMmyxtpj8pJqCrX
sjl8fHn9gSqDaCGhtLv8k17yPPBwXBLfRSFh68YnF/2X169t4QVtywkSPtwZ
2tldNg9sWznfLg4yytqKekVnzsNrhdMNZzaQce+nuU1cUfPAXCW91ncHGb+O
qlSNfZ+HZ+WSF2ckyNiZVZVh4jAPJMf9HzTOkvGhZcRl5zfzcE9FND1FmYw1
AVrc+GQemnl3MPlvk/Hvblkz75vzcK1m837jJ2S0AmHq1wvzUOEqqFPzioze
DTVLksvvt7zaOj8JWzLauU5NmG2fhxwBnkYnNzJesfsob7hmHk40reSlBZHx
uVbYpo0zc5DgtXhRKZ6MSf/2/HtBmoMDt+Y+hOWSsanp+dTH2jkI2TyZvrKS
jEP521lXcuZgaweDqdNORoUrspPN4XPg5U/b/5tKRk5PMfoO9zlY/4Css2Oa
jD3f05IOfpgDxx29fhacFJSqfMe9oD8HHH3tjR0CFDSZmgzwujEH70OaeGV2
U5DW2ss9LzsHU7q1Cj5SFBRKcSw/JD4HRnv/WE7JUXAT+8RFSf45oFGKM9Sv
UPDe0y9//s3Pgk5EwVjSXQq6jzg6R5JnofNp9oENzygY1LPObF/NLGgcTNN9
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
            "]]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.09096, 0.6296, 0.85532], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
YdA=
            "]]}, "Charting`Private`Tag#6"], 
         Annotation[{
           Hue[0.08640786499873876, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.46056, 0.40064, 0.81392], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
MH+n3/OZiv///4N39RKnFPWm/o//B8YB9cw=
            "]]}, "Charting`Private`Tag#7"], 
         Annotation[{
           Hue[0.3224758424985268, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.94, 0.462, 0.162], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJw9m3c4lm/4/z3ISCQlkpmMtpRCnM+phJYRFe1lVNIiI0IfmwpZIZukFGXP
26bsvT2P/dh7j5/fcXy/3/uf63gd5/u+zvO+/7jO8/3HJXL/2WV9ejo6OgkG
Orr/v3bmGlrEKNUSdP/zPH5ruH/Lk7L/40veihkj8mVEycfuCO4dpnA0Zvv5
is1lRLQ5o1jxJTPgzqC1xLeWEuuTzXX+Aa9hsSL30Ye4UsKMNiOtO2sOHVTf
RROrUoIrYEWj/aEl5M0+cdU4X0qE25wYohu0gmjW07uk+EoJ/6Pcn+NsrcFV
gPcb51AJYZLmM1l08C08PTomO5leQtj+VolTnbAFrbOFpTWuJcS+P9O3/frs
QEYvUPe3XgnRdGK/imKXPex6+nzQe18JcVGz0zq07x2s2qlYvFosJmjV42fV
Fv8Dqg8/i05ZMVF68PPpEj5HKIqd8j/+eYMVjUNzzzvBt6xSCe5HxYTC2JRB
n6szvK8OSZ2VLSbO6RlpxjW7wIteU9VGlmJCJPiC7Z+TbnBl4XxTSnMRUby9
acjqqzvIbREx9I8tIhY6j3D1S74HAeH5OXOLIqLh2Bffn1kfgHS8wklXrYjI
8solpRz1hD7VyJ1yvEXE/lJ2CRqHF5TdsIzZNVhI7OKyUH8w5wXxzzROLKUW
Eqv/OIsNB73B6z+x4lbnQuJiTLioad8nMPNfvpJ5rZA46B9+vWrUB/S+1/QF
SRQSuy/pcMyQ/EAx96uZ9XwB8Z8Vg97FPf4gUmez6VZJASFdXO+qrBEAmwa0
fRX9CwjSj9XdF1w/A21pn5igYQGR2hX6o7o6ECo46JLXThQQ9wXPjKuKB0Pi
nkblLqYCovUrNUzM7Qv4nvhRn9uYT5ybsbakrISA5fl3D8Ni8okjV3k/WJDD
4NZt3Rm71xvx/R30j1jCQenlYYd7KvmEsFZKlm1LOIg5Me44vTOf8KU7k7L8
OwJYA1sj9/TnEY6HJ1P5fSNhND7hGENKHhH8lu6iqF0U1OQ5FfQ45hGU8e+J
mqbRkNxwU7vwSh7BubSndPRFDATQpHuixPII1lwHqqLlV7BeZXnlOEsQz4uO
81m7xcLdbV30BkUEEestGkeL/gbKYsneKr4EEUjQ7Iv+xYGknPseCX2CmE2+
2nV/5TtsuXTvN7MMQey+Hxy4fjIeJu6ePD3ISBAP4xLN+t7+hFgaX5TXt1xC
LjScT73mFzzfVlJw+VwusS+Zxl7snwCycq96ttNyCEsxd/2Ri4lAd0+IocEl
h6h8WdAALL+h1OXfHj/JHOKpwupYW9lv8EwwP32tNJuYZT6zPOj1B3SbRe/z
GmUTldknKpzvJoEwXbV9C3M2sf+l3GSLTDIMSliHB37NIn7drgql40qBBA3J
vBuqWUQsNeYX/2wKWJjXU/gHMonAhyrO6l2pgKF2dJ1OmYTQM32OlOo0YCk5
KBwqnklIOs6GvCxLh+qxZvLd4gwivr5rNqIsAwJ2Ot4RMcggeLbZiOrXZMJd
OGrbvSmDUCdXvGmkZIGkQUdIZHQ6weBt5rR9IRsm3rvmPDybTkjUu42d5MmF
tGSZTrG+NOJ1GI/cESEC7Dqoq/0OacSs7aZH1SkEqG36IBC7N43YZKJNcb+c
B5yH5BUfFaYS1zybjZ5O5UGzTv/N/Q9TiVsvAo/b+eVDmLW39TBDKmEibtBQ
CQVgFAXBPyJTiF/vDuwxGC4AqfKhzKdnUgjjH/wtl4ILYWHar+1wTzIhdtHQ
w0OrCIjdZ5bH3yUT/6y2mhxgKwaXM+N8iXuSiYxZS8VDZcWg+SRI/mV+EmFY
99E4yL0EeD+pXj92P4nINn1w9c3lUqBkTFvOkJKIggAZ/RqBMojtDv2cHP6H
YCy8xxc+WgbPN19Mf630hzB2n2AazfsLstILzSepvwnFpjuFKYH/gO561MKC
3W9CsDhmdM28HErtNXkzhH8Tmj1WvEV6FeD5beXkGyKR2P6ovZIZK0G3Jvaa
wt1EwvLCuEvh/ioQXtQxX11PIIQefKpb3lINg8Ik/5zQBKLE6+GJSqdqSFCL
T7ElJxBmSUY2jfQ1MEH5/cM+5xfxRTlQbJt9DdhJsY0wrP0kdjWo7rQi1QKn
3YMDToo/Cdm6tzfZHWohrCrzMYtNPLEocb+8iKUOpIR2xLll/SB2V1C+BX+s
A8LEmLZl5TsRtz9gvwdvPWjmFEp+PPWdmBbYK+0RWQ8UdgGjbW/iCMFAEw4f
qQZ4fsvs66eMb8TdeHJKcG4D0MVX9HMvxRI6dlHHvmg2gueKmHiAXCzR9y5s
yr2nEYQvvtXns/xKdPGE5d22aIKEoMao4LQYYrZGrnbz1mbA4cO9ggvRBMyS
Mxy+NkO1vLNo+MlowuOvqBmh1AK6bl33Rc2jiKn9P/QTO1pgsOVkRHRKJDH/
lk73/JtWsNjnSZWYiyCyT7M62PC1AYvloHCcTAThPinuqZDZBgGlePegWTgR
sgV9LG61gyTv59CfSWHE91xxgT2kDnhe1Z19bzCU6Hl5VWpfTAd4mnxSMDAM
ITL1WTVtLnZCArty5uP+YCJfNsaWfaYTqn/MyD3TDyLqdjiqlQZ3wcSF6LRX
vZ8J5WnHrkuiFOAcvnLS4kEA8dGMszDDggJSbkwp1t1+BPs5y2fhlRTQ3Jd6
3P6eLzGT7XppYS8Vnpca/nGkfCIuV48opLyhgqchr7TbHW8iNiykv7qWCglM
ZQkfOj0JDj+lEMX93RB2Yfq2eOYHAk7nwpR9N1BcdW4eSXcnHmR8yOpt6Qbh
0mQ92VQXovE5Q8Rm6R64y8RzTSnZkQCJm/f03HogTNlC5/yfd8QBgTXd4u4e
IDb9iYy5b0u4+lU1qZzqBXxnFpJ225KInP4lUv2pF4i1k5//Xn9FcFqwmV4b
6QW7uRmJ9PjHhFC+y+Za5T6g65qWz7hwi2BtqRCV+bLByvP+LBPHCVLIdabX
sxusuDCWXHcZYy+/3uR2qR/sxOZJqS/0kbnqkJNBdD/gTjmnsqznWE+7w0ha
7Qfi82v3VOI1Xrdt4NHQGQAUSPKMLrRGHZP7lirfB+Bu9cLfcw/tsbhyC0sH
aRCEvf0r0MABMz6drGTRHQSK9onqk0bO2J5WwUTED0IYd0Pt4cduuJX9yZ5F
ehrcbXrVIGb8HgO/2JbHXaOB50VWY46TnpiS/nji33caPI/XHWVN88LJN245
2us00OSINdkk9wm9cxQS5S4PgdSz+XG6DB9M1av0MosaAs5qlRcr8n6o4XjF
Zn12CCak/KbmM/3R+oQprUplGKq9+l5NK3zGFI312C6/YUiYOj47lh2IDNbO
ExL9w+Cp7fB6CIJxxIu4HnF8BJ4n1c335X5BgbuFI2rvRkCTW9SSiqE4WnGI
b2fVCPCekrMZuxuG7MqsZYy7R8FlmKJoLBKOFbf8r3AajMJCkMsajRqOp6Y6
fY8njILRRalcw4gIrPFh63i6OArNK022ffcj8Qnhu5amNAZq8bb4QDQK5WaO
am13HYO0WxIkak8Uxog4JFpVjYEkR1Xe7ahofNvj4zC6YxwCcl6/a38Yg1u5
mDIe640DyzPBM9fFvqK8PmPlZPA4WAgVMzT3fUWL2em/77rGYbDqaeGVmFiM
LX4s9pFzAnTtuB3rDL6h0/OjWd1SE1AqlX1WSyIOTabHmbM1J0CW+pCpaiAO
LzdXHRF6PgGxXltKLsZ+x6xYgajNHyeA93SS81+jH6iSpyBoHz8BLlM31NT2
xeOn6ZdhDv8mYCGCgbWYFo/1reYED20CjLS/l52J+4kG/Kb0ikyT0Myg7Zb3
+BeKW9G+zu2ZhL3XbaJDuROQVYaVX408CTelaxw7zRLwU+pY8/Ebk+CzWcxA
oDEBtV2EXInXk1DebaFy80Qi9p/g5Rv3mgTGzHLxIL9E1PWryCj8MQkKn4SZ
W+cSsWCSsfVsySSYPjEd4L32G3ki/ttrTp2EH2dKS66l/sYkX47AW8uT0Lub
P9aP5w8GsJHc13ZMAf/MM5cG8z84dGAq6/bhKdApLzDa0fwHXyRFcDqoToFH
FM85bdkkfMx8Tc307hQUWj/Z5x2QhMu5SldlLKdgRSeXtWYhCfnX4vQqvKbg
+KHtQ1v1kjF+cTbodNwUPN9k+Fc9PRkH9zu9D8qfgtiOjLj3u1Iw8Kljfmfr
FFCSOdzLLVOQLdhjnGt6Cng/3H/C1pqCQ3PqdGS2adA0SLlwXj4VrX0vMz4W
nQYX2HzQNTAVmZnfPg88NQ3EzttbSpdSUVOLFNOkPQ0LY4kjTDfSUIKfsVjS
eBqkSjZVnM1MQzpXxhUfh2kwCtWLd9idjjfLqJaiX6YhzDz+fcGbdCSNNb1q
S56GZg2SCX17OppxPeMvrJwGTskr6koKGfiA+25Y78A0qNF9O2wXnIH1u17s
USbNgF3zCkfuSga68lxMpfHNQFqC5vjqzUxcEXGJbz8+AxMuUVUK2ZnYR179
KqoxA5L3Fn69EcjC9zFe9kWPZuCu3EXPDJssvJ3rHFzqMAMB28KeL3Zk4fyR
fZXHwmagmjatKQvZOBUibMueNQMs+apHzUOy0dZldeRG8wxgYNC2lLVs/KUv
JS42OwMWL8cnZ27noM+JnUzPuGYh4fyZ2mO5OThayn2ULDULg3v8f78UysUZ
9hrOIPVZEF4e8k60zUWxv8bVzk9nQbcOXk105eLVrgndze9nofRK2TceYQI5
drO9loifhV6l6V0nNQmMoLrb9FTMAt1hAberdgQ+tLy76/T4LPDzqS6ZJRB4
ZsX3nOq2OZBlevHYl0KgW95Vq7ljc6AzFdiaxJmHgpHP8y9fm4PnnYXn6zEP
Tc8EU26/mQOPv2MZ08/z8HfniKxA2BzEpvAe2B6eh/KXHtd+LJqDwojTQdI1
eehV1KiTNjwHlA/GbJdJ+XitLpwpgGseVqz83rw4mo9Onaz/jsjPA68hMex5
Lx+b/3sqbHd/Ho5rD91I8MrHqe4KQVf3edAk7yivysvHsaF3r88nz4PxAVAY
n8zHLZ57nhV0zYMLj9EPjj0FGJ0a1D+1eQGiGLz5D18uwGoXR82mEwtAjGd6
XHpXgFqJkckmDxagva1vxfh3AaZxhP1J8VyAhZKtTz26C3D/liXrHzkLsCNJ
ruM7VyFy9x1ouTi6AFJhDy79O12IZzs2ifnwL8JFj/fZQy8L0e42WfvtxUUw
skg9tDmyECf+KY4y2SyCw0Pql311heibyblj389FCNNk4zjHUIQfxSPtu7oW
IUtB5q3RsSK0IIm47eVagmbJO2POD4rQ/qOnwJTyEszscL399VMR7o0KKVOy
WAJO0p/K4oIi5B4KztzyYwkOjrZD/3QR3pdMzL9AWQK1FqZfm/YWI+3+8cvz
O5bhYZGUkJhOMUr6owPz+WWwS7z+UdmhGP9kPeE3tV2G4C8O6w+SinHF96fb
8eRlSHP9+ey/3mK8VWw2Rh5ehnqz5q6IHSXo5Na2673ICkzco9fMVy5B6ess
vly6K7BF/SBBNS3BHdFp4cUfVkBS/qoUKboEz5X1QWjRCiiL24UJN5Rgp7rn
Qe+VFbjLFceJmzaGLruVKZ9jq2C9Vmd3R6YUl6ISVL48XoWAodWJt/ql2M+Z
9zo0fBWSGiXuhfiWoon9p1rP5lWozteqyS4qRc4CeX6DrWsw8vONUsdsKSZP
N4xvV1kDlqDoxBWxMjQ+xVL6wXoN9jpXifBfLUOT03b0/36vAb5a9DrlVIax
W973Zg2uwc07ovQ3Usrwfld2qK7gOlhcuPTSqr8M6erdrnprr4PPSfPuzzv/
4mw6g8htl3VIEA2/nK7yF3OG321LyFqH8q3/8ptf/8X6rHty1hPrMLg8I70Q
8xdvcDdebdtGR2YcFIzkafqLd4nBon0H6MjC9WrbTzL/w8RaCVtRZTqyAvHy
v6sn/+EL2YOV+TfpyLo/gqfNDP+hbM89T5IZHdk0oPiBr/8/TPgXva3Vg47s
6TBRl1TyD13XGCJUoujIP57zKdfP/8PQ7uLPSpl05NKbyknTEuX45/Ul/aIa
OnKvmsne7brleJhByrl8gI5MJxPgI+1SjsMFeoFaq3RkfpF8xstp5fgldKeO
BheJLMs+YvpisBzd2HY4EeIkss4id58nbwX+OKMjHCZPIj/vI19JUKtADtbt
x2iXSGSPmkdFVRYVaNa7c8bvLokcm/1JZjy2As0POQ1EvSSRC79lR3O0VKBP
rpQkhwOJTPEd4D7MWol9ChUulT4k8or9NqdLcpUoUL5ST40ikXlNTs0ZP6pE
g6hQeuUkEvn4dX0Dj8+V+NlE6dhkPomsqfKx8XtZJR4/9TK5r5pENpZOV/m3
WIkJYWxMgp0ksotgT8rQviosCb9X4zdEIkdtZpfYfL0Kxzbdmbk4RyITcyf8
97lV4aFWDxtFEj25vfsu87mMKjzTxvhTn42evFDpZm40VIW3fdWX8nfQk91u
tU6fYa/Gt5wSbNoC9OQA7fHv2mLV6DQsnbNdjJ4cc47x4QPFanxVGyjOcJCe
nETexf/qSjUmqHi/F5KmJ+fLHK5/97QavTJKXxqepCdXHzjj4e1YjQubizxa
TtGTO0V0lSO+VGPkkwNlpmR68gjP05XE5Go82Dt6UfY0PXmJ/V1SXkU1fnAw
NBVVpiezMPob1/RV45zd/TqZs/TknUvf91JXq7HCmFXm2QbvnSDaJ7hrUI9L
MqNqQy/d3+BDd7gGTdkOWF87Q0/G9qGLnCo1uCdlroFJiZ6sXrvOKHy7BieK
LR07FenJt0t3ZB95vaFPkzTskqMnG+fsMyN/2NjPodVjsww92SoJDmnE1GDV
IynFe0foyS5x2n23c2ow8PPwVK8kPdkvzOiLSWMN5p46etNfhJ4c5Wdz5e1Y
DVqpZutZ7aIn//bwZv/AVIsDcYxrHznpycS7r0VfBGux84yqRysTPbnSIssm
/kQt3jzibX5zhURuN6mRyVavxfsLv+/xTpLIQw/7R8sNavGzND/ftj4SeeH6
cnT721oM35oVfK6ZRGbS4rw94leLK3ZFnEV/SeQdqmI7V37W4kcr4xKnLBJ5
j6J8JVtJLe4e8ZX3jieRpY5pOO3uqkVfVmu24S8kMux7CAfmaxGtVUm+70nk
i0KWc/Jb6/ABTwizjzWJfJ37w8/zEnXIHC9xaOQxiWzEFmlwnVyH9aGsEeG6
JPJrUprg42t1OFell5J2lkR2mC9vtHxWh6n2rs0y0iSy9yj1g6tzHca0l34S
ECSRw3rmVD6H1qFNxIMPpqwk8s8WtvXY1DokZ/O4kGfoyFlVwqlpVXUYfcZA
979OOvLfIplnpQN1KP+pa0S5lI7cnHleonm9Dv8KPlF1TaQj9yfe6Rrgqcf+
j+7WVwLpyDNfTf3nj9SjXEto4s93dGT6EFcNZrV6vNkksjvwMR2Z0yeEmedu
PZby9yzxX6YjC7r9yRW3qMceB7UQBTk68kG7UvMTnvVotM/x5poQHVn+dccR
ldh6vKbT4GPIREdWM54auELU4+mtpnrLzetw9T5zmH5zPUbqP+H3iFqHh7r8
umYT9Sh1g/uix7N1eKl+lNORpQFF+BYKmOTXwU5ZpdRHuAFfVO+5zcS4Dh/k
b9hFyTagrGLWuG/FGgRLPZdN0mzAUP3PZwm/NYgTd5woMGrAbK8OYc87a5DG
HxhbZ9eA+fFRxzgl16CY69fdnoAGnJBMF7gwsQr1LIW80wkNWGl49dGFtFXo
Xmuupi9rwANtC8677VZhYmbUhYvagNZlClVFqquwNkSvtGexAR/WlZvpbF2F
LVSexaPbGpFN9p5nTeMK8DUdTFTa14gPm6s5VEM2+l2F0iMtpUZsmT6enqO/
AicKrorc02vEEm/hQ6cPbfS/9Cctz180Yu37kdbWmWW4/MvOy861EV34djF4
Zy3D3Wjfc57hjRiTW/TnucMymATFkcLSG9F/r8GU7cVlsPbKTf9V04ilSTe0
Sjf6uZtz/YtcWiOeCxGmaHUsQYANbV8VqQljZptZxWKWIObVGrVzVxOe9T6Y
c+7ZEiQ92h44drQJHSdl40tklyD/juTltXNNqG6edTaGfgmqryhu5rjfhH5c
t/+MlC9C54XL+QJWTfihfVtHuP8ijCgZWh3ybkJ9CHpQfn8Rlk5aSyvGNWGe
4KGwl4cXgeWw19DF/CaM9ZCMDFxagJ17YyJutjah8uUl6fMlC7CXL/O68dQG
V/D8c/JZAGnOai7rzc0o/y0o8sr9BUCmvr/ue5rxdBT/fKbUAqivLL4Lkm9G
5rjJL9nr83BziuPU98vNSGIvUb9TNQ+PB0WnMx434zk6beXo0Hmw6JT9/vdd
M/Z2E++8n8+DU/2lB62BzRhUJpez//Q8+Py9v3vodzNG0slverFjHiII87rF
v82oH1fDYzQwBwkpHu6sPc3I6tljyJU5Bzk/ws/sWm7GwPL/dr38OAflESnL
kttbUJLlNYPrwzloDfj3R/ZAC7LS/v7SlZ+DwQ+UJ2pnWlD0cvDNbs45mHOY
FdW90YLvZwdWxAdngfHN5nbDVy04/sdZToKYBa4XQj7m7i0YcFT1ZU/Axjxv
ePyic2QLGi9z5954OQuHb51j9M9swQanK5MfL86CgvbtrJi6Fjx07rSvrcQs
nD/3yjRluAU1uM2n9zFszP9kl4PFDK243OnK9aFrBgxkvvQ27G5FjXkiLW7D
f5ge+B3cd6wVpUu6nr4NnIF3IiU6sxdaMZ9usw2z5Qx48rRv2fSwFTuPZc2d
0Z2BEPbJwh3WrRiYn3LjqOwM/GBgstnr04psf4tnKnhnIGORT+b4j1Y0LHP2
2bk0DaXjR0bPFLai8gVdbtb2aWjsU47Wbm9Fbo7/5CJypqG3Te/Wg5lWtIso
rukMn4apGhPuV1vakFP+iVem4zTQlf5X8W5vGwq2qDDIPJ4GjpwAR2+FNrR8
rPJWVWMa+JPiFSN02tA8n7Q6dnwa9sflzyYat2GKyQ0Wyd3TIBvWFJ/n0IZr
ejETY6RpUPEb0a8JbkOHtiE5Mm3DH3uQBKlJbehTx/t7R80U3H+3s3GivA3b
ajM4n6Rv+F2LAx/o+tqwhuq7qBgxBW9NUIVztQ01f6muu7hv+OmHV9aEuNsx
JJUarWo2BYHXH6ccOdSOzIu2+mZ3Nvyxpq0J+Ww7Bla1/GA/PwUpKj7iGrfa
8ar/vx42mQ3/rfCt87ZZO37OaHr6RHgKaqVz/Ezet+PD1i8/JLZs+GnJOvW3
0e24t1iFXmFhEsYEB5k+ZLejOX1vXWTvJKzsWM350tCOGrF57tdrJmEzG5d5
/Gg7PnvxLehGziTwkiSOZG/qQN9abtuI75MgPn9qoFygA5m26WTv/zwJx0c1
Q9tlOlBS3Wd43GkSTvfoXxu51IGW3v0/R00nQbPFauuKfgdmj4vmCD2YhNtV
H0vY3nbgJDW/x15rEoyLomx3+3XgS3G/9a04CVaZ6ScP/OxADvIXhuLDk+CS
WDkuX9yBVhKN7qECk+D3tefr+c4OvKVqb/l5yyREfVm4c31uI7/hk+xfyxPw
+xM772OOTmRjeXqya2gCCNc91Zbinbg9MHJVtHUCKm1PurhCJ/JSQ35YlU1A
u9lF/Hy1E00XpBgoaRMw9OTeQqzJBk9zUjVjJ2Dh3uuENKdO7LSNUf3rPwFM
uu5GpSGdqDecef2c8wTsUA8Tbk7pxKignff+vZ6APcrJzQOVnZjJP1d4yWAC
pOT/es73d2LvguWOyisTAFJdaszrnQg2e+PPnZ2Ai+IzdDw8XXhJ/u+m3OMT
cJ2fNV38SBcG7rtMObB3Aoy4BF+cUO3Cnzfdz33YPgGvWY7tU7nThawaEY69
9BPgsKZKvWK+ETfZuqTXOw7eMzc/63/swkahowv/8schbOiFltnXLrRP1xAX
CB+HnxQnVsfcDf3JBoULtuOQ1RiU59PUhaJ5w/Xat8bhb3mCZdR4F0bWfhGS
OTUOxtRu3lYGCt5aEfca5R2HVzdHZ6hbKTjP+bHrzdwYWDXNV9N2U/DSPjFS
V90Y2F+mj5+UoOAVy/b9OxPHwKVii+viMQoWrXtUCn8Yg49qPPok3NhPnO/z
2uMx8CsQUWK9SEGfl/bPf6mOwRc4KLBNl4K2JnUvju0dg6j0E4u8Dyn4fZ53
3I1uDL4fV2oQfk7BejGJpynto/D714VESWsKklYfhKekjUL6/qvvpVwoeFzo
7TMPn1Egou8+kvWhIM+vXQOyz0ehRPjJWQzbeN/LVCn7wihUBpmJqP2g4OhJ
xi4+iVFo2Gm3qpFGwRL2rWe16Uehw8ut5VohBfXizuw26hiB3i2+yXeqKdhf
orHvRtoIDDuHehm2U3CF0VLn8KcRmKKPe/pskIKVt+S+9DwdgUWbpHPmMxT0
UqTy26iNAN1ijpgtHRX9Z5Fhdc8IMJuWkZy3UPHIlRs++qvDwDFe1/GBl4qh
LKLi6U3DwP24M91vLxXLNZQFlxKHgb9v0DdEioohTivj+z2GQfTu9IsYBSoy
UOn41A2GYX/b6qWfalTcHmW21wCH4ehVlv0pOlScYpsPMeMbBtkaLqacu1Rs
nU4StJ0ZAvJFge4iYyqOy0coOFYOgUqJRE6FxUY9RWmf3GKH4NJp6cAGByqm
t13O9Xo3BDrZCq87PKnI6ROo9+XmENyQVb3cF0zFvLKtS79ODMH9P1qHR2Op
aL5L7Hg55xA8Onxz82wSFX9LzfjODNHg+TeD/hWCiqbfWL8eKKKB+d4X+YwV
VHzyXm3gVSgN3oa+CdnSQkUl+76KKksaOPI5We3oo+KAjWWpkg4NPHw9r/JP
UrGv54B8+WEafOIMkt67SkXGoGmrF6w0CHSP5jjI2o1TzWONx3oHIZwpYegY
dzcyb6t5z507CLH2GcWnRLrR1tKgljdwEH6tFEacOdSNGdYH/5LNBiHFvOrt
BbluzNFd8/DQHITsqZbr2me7cSt/w17SwUEofNp74oZWN7oJBL4PZR6Ef4Nj
XA9ubeiXNyc/6hmA2geLY48fdeOBPT+t7uUOQEsnw7+XZt14obDxl0vQAFD0
OL5a2Xdjs3QqD9V8AAbqef97974bSx/aGRrrDMCYhugdt8/duOTwXuXg0QGY
/XvolHd0NypfClTfwzEAK2dleQITu5E6Rb9Fc7gfGPJOT4dnd2P//S1rKaX9
sFnhUtW3sm70dD/mrxvTD9tSr31PbOhGytN3iicc+oFX+r5zOrUbzf7Qzmvd
7weheOMHeaPd2KES2RiH/SAuaU4uW+zGHi36v2eE+uFQpP3umk09KOiwtlNw
rQ+OC3rMN2/rwR7fry3yHX1w6rNfHUWgB43e76kPyuqD0zvCfw3u68Fk/9p9
SsF9cO7jd/cJmR5suRNdfcC6DzQ3pxguKPVgZea06q2bfXDNkThDp96DS8oY
2KjQB7fp/gmxXN/IF3Zrb4BAH+i/aVjeatCDl3VMcyPXesF4rquJ52UPZq8I
Wi129cKrF0N/hN72YPRzHaGgvF6wGpn5KOHWg32lwZ0ukb1gb7j+5IhfDya8
oTkUOPaCSzer2smIHjT9eqvpglEvfLy1Yy/5Zw9yHNH6tOdCL/g1C9KpZvSg
Br2aidrhXviiva9dvbgHpy50cOds64WoymNpV2t7MF874ojDbA98Pwc+tzs3
9AsTukEtPfC7UO25wVAP7k1PFGfM6YF0svZFk7keNLnDLZYb0QNExi3J1/S9
OGl4uqncuQdKZIwY33L0opLBXMqhpz1QmfCS4sjXi7bxu493X+6BhgM2We/F
e3EqRDtpSLYH2mOcA3ylezGM67W3qlAP9Ih4m36BXvzbGp+2sKkHhoKDNaPP
96KRytaXayPdMMnz9WD81V6U7Cm31qvvhgXvRJbk+734qpRFeHNWN6yzZ/Vm
mfQiTx1DCmdUNzC5FhOFVr2Y/u/oDWOPbmBnrAkud+rFuh/O/wmYdcMO2zaL
eu9evN5ArRO93Q27l/p02kN6sehWQ4utajeImE1I9cb1Ym6lqLPU0W7YN7G0
ZSSlF0/c1NA6sbsbjj7ZRJvO70V/CVZ3z03dcLJ/a9FyZS9G/JKVJk9QgXyP
L5yhrRdZrDdpK7VR4Wz7Xhu2gV4UbdG+6ldMhUvXjuhtn+5FLfayD4q/qaBd
Kyeze70Xv5lzyZ4IocKNS8rbRNn6UJ7u2GtbNyrcK1Uf3c/Th9dYmnV4zanw
6IxembRoHyYypRavP6DCs5wH0fJH+pB7bibquBYVzOVM7E+f6sPu1ICfyUAF
mySLW+dV+7DtP1YX+4NUcDzyn9xl7T5MeB2Y4cdHBfe499zX7/TheZW9SdMs
VPgkFjB570kf6vH+LPabp8DnsIiKR+Z9OPJYXPJtPwXCd8d/e/FfH+ZPHpz6
2kCBr36pjpYf+1BLYUyEq4gCv7bl37MP6sM7tG0BGUkUSPYoV3T92of0/Fm8
oVEUyGZu2uX1pw/PNkRcyPahQME76mxAbh/KLdO2cTlS4N/qcE3Yvz603++u
FWRGgRqLufjYpj5Uq77RdtWAAi3TdG4JPX144Huwq9I1CnSZsBmkjffhxVPL
ZnpqFBigcZ8mljfq4zuaGShHgdGHwoKlzP0ovOUJmf4ABWa79i9Vbe9H9VD1
eg9+Cixfl2lsEurHpmqPYyc5KMDQSP7ddaAf51wj1pfXu4BV6/yHgZP9WH73
g3tmTxdsK9d5PH6mHx8fM1yKLukCHtU7KvMa/bh/+7kdSd+7QCj/0Z71G/2Y
rv3IuvNjF4gpmq4xGfVvnP9FfwRMu+BQ2ttWDtN+tIte2P1YtwuOHXNN2WnX
jwdjZZYyFbrg1M9P3oIe/biY9NCKTaQLlPaFmIgH9KPQtfu/NTd1wbmo2POH
o/rRke929H+0TtAQ+iN+IqEfH0SfCwqq6IRrgdn0kNWPgb/fvfNM7IRb3KWd
Z0v7UdTEf88N307Q96zNuFTfj3Uvkn5MWXTCE7YOvyuUjfg+5nWNm53wymng
5a2RfrzXvafoCbkTLElT6voLG98Te9ZcYU8n2Fuv7H/KOIAjIuasGYyd4DzP
xGzGOYC7DIxs2/s74OPLbT3W/AMoUPh+Iqi0A3xHd+c6SA4g0Cl4THzrgC9G
4kEexwfQi7/4S61bB0T2SJn74AAqJAd4yj/pgO+3T2kHXxxAzXmNGeELHZDY
cvZIlO4Atp8ssnu7vwPSdTTZfjwcwKxj2/gusnZAbtX1gT/PB1Bqk139u4F2
KDmvX5BpPYBjPa8Wdhe1Q0XRs9AClwGUrzzGtC2iHRrQ6s0/nwG0V41Mv/G2
HdoyHa7VhQ2gjwGFfU6vHXpOfDzW9mMA5eyLsPV4O9ASP2/tSRvAoYYLjfRb
22HyYNTwUOFG/u/lQY8H22D+68+SqeoBpFgIft+S1wbre9Ijl9oH8HOm+9Pe
gDbYFFJgS08bwK3q4SGjz9qAfVfljc2zA2iTa7BPVKUNtvs0n+QiDeLH9n/G
73a3we6tPdv52AcxKcDjPOtEK4i4jY6L7BpENulp76SCVti3aeHfPrFBrAuq
5Lb3a4UjdvSxR48O4nxGfbyxUSucXN7iIKc4iLo5rn5mcq2g+JrnrtK5QTy9
x/1pIGsrnJ0UUTh3ZRALr0Qda21ugQvGB3m17g3iHPnHpeNfW0B74MSM7tNB
dOU44Bhr2gJ695Wq71oOYjmlhOWkUgvc67jww8hxEHPY3xpTtrSAoe5Vl+de
g3h/7PO36KZmeFZ396HFl0G8jjaCLuHNYKb+BO2+DSLznQMfXB83g02ZGb9L
8iCWZX4R+iHdDP8p2y18zBvEbnHqzanFJnDPdav3rxhEmciVo3eIJvCS900I
bRlEy68Rw7OOTfA5OdTja98grtXHy2Scb4JQqTijX5ODWH358a4Ejib4+j1J
OXV1EDcJxy+31TRCvHiucC4rDaE2I/C0TyMkh5etFHPTcPnaOhvtSiNk8tc3
V4rQUM8sIL1+ZyMU+HcmNR6iIVd10h22pgYo46J5dsrR8LJ1GesnvwaoeT9t
3H+Wht3cYVtfXmmAJpY1tTEtGiq6kbl+bW+Arv9YxOZu0XClInFBs6Ye+ta4
SGuPaHi2Inbk9od6GLUU6Nj0mobBC4zXKOfrYXpGIp39HQ0nu8jt7Uz1sPxM
2pf7Aw2zb2Tr3syvA9KwwguBQBqKVW/qMLCpA1YD1UtiMTQsEhz5xihbB1up
WvsO/aZhbG/4QZiqBZ6bNzfJ5NDwXnTW0u4ftSDQZEBV+EtDetfDlTH6tSB2
+UW2ciMN+7Vk7AcEa+FAxZvPF7tpOH/49OaBpho4puZkpjO2US9bh/lPzxqQ
K/DUurm0wXOOIyrnakAJgg49ZBrCy7L+gemkGlBNj2Y15hpCcsh+YmtGNWgc
T+h7JTiEqlaMkZdfVsOVXxl5b/YPoUW5k4f7/mq4tb/oy38nhrB46Ja7c1EV
PIiusnQ/PYS2rijOeqIKngi3XvmkPoQVam/u/4yphBdBvUeDrg/hxM5vYa48
lWC5c5w90mAIl8NTROJdKsDWa5EW93IIpUUmOyWXysF5C2Px77dDeFhzym+r
cTm8d+aIyHAbwsSHg6Hmnf/Al37X23y/IYTFL4XPtP5BkI3o9b8RQyhorvKR
pegvRC4cOlH7cwhfh2lOXJb7C99eyXK1Zgxh96uzrnd+lkHi2OkxavEQTomt
xMDeMkh9dOkvrXYIaS7bFOiCSiG391rMZOcQDq9Htf3hKoWiO/ffLQ4NYZeh
EbuRewlUtBrfJs0PYWAZ+5P9m0qg7oq5PCvDMPLdNu5mtyuGtmr7ndu2DmNm
O5OnwEoRUC94TPHuHsY5rT19BpZFQCv2qxSWGMbYx3Mtc/OFMK4UHid5bBh1
xiyHWswLYT7ru5MUeRgVrths518sgNWTKfdlLwzj6vvt1aVvCmDTHwLw2jAW
lqvxDK/nA9vhf3xqD4axjE3i+nvHfNj+rWFO49kwnnI+UJi2JR927aXUXnsz
jA8fRFeb+eaBSOjQzzvOwygy7xxRI5QHEnyzboafhvFojHV9zXcCjviuGzwL
HcaeEUL8rRwBMpybz5h/H8a7cjFBmV65oOi+Q8g2dRi3+y/3jv3JgTNMQstO
BcNIN67+MKIlGy7Y72v6UDWMr5dLgUqfDVorx/74tQ2jWJG3Y/KRLNAzh48h
A8PY8WnupOTdTLgzpfYkZnoYs0sWzir5ZIDhU23Vn+vD2PXZjMxQng5PB2+J
prCNIPPzq0sWzOlg9sBoPZtnBF8c6kyOUUmDN50v24pER1Dd42G/j2sq/Kdn
k1pxZASbFT6EKFWngGu986eGUyMYrCBd8JMvBbw0vJ91qI7gzzl91Q6jZPD/
G3yhT3sER07tla7ISILQs18lRu+MIG2vYpQNZxJEE4kMs09GcEDDtXPk0R+I
P5XVtWI+gmYj19V4S37Dn5TiTEaHEeRgkni9IvEbMo/W+G/xHMFXTvekfD0S
Ie9H26sdwSPonD0j1TaTAGUS/Rr8sSMYpsT9vOxuAlRFTBzYmzSC/ln6bLlh
v6BJYJn5IDGCT88f/yrq/BO6Ajb1HivfqLdUXSLRNB76tnMSp5pHsEf7v9yr
j37A6Ae+4DO9I/hjhu0Vvf53mGYVs7gwMYKWbPOi4YZxsOxwREd7ZeN/GAVE
CL74BiQ6eakbLKPoSFrK0rePBdY3ylse7BjFNy5n1O8GfIWtc+qDj4VHcYcd
p/p8cgzwvNArfHlwFN3Sf3RxtUaDwMiDMCvZUbR3PXIvkDEaxAxNrN8pj6LU
dRMrU5koONBtoeumOYpekbkHnI0j4dit/4573xxFrQTn9tRvESDX/J4z0GgU
RxddHg2PhIOSdsBIuOkoMl+YkmY6EQ6qlRGl3+xGcfCE2P4RhzDQOBcflegx
in7pd3JIf0LhSmGqXXrAKApFDO3WMAyBW+T8m3lRo+hTTXfVSfwLPMgoly1L
GEVdpqUu44kgeCLTtKMmaxTnM2OrSgoD4UUCdaK5dBT3uNbO3Ij8DJYHRsop
9aPY19o9PuoeALYxc7GDlFF8caBO9fRbf3AWITlOjIxieYqyrYCVH7wPZru3
sDCKRmqlksq2vuDLs1ORbtMYur7UWrJ67wNB3sK7WLaNYbFkXZdT1CeIZD8w
u1VgDG/rMLIfKvSGby4yNTz7xjDZ6wLHsREvSGTAeCGZMWQcqWm+ze8FqW/P
u0oojaEvNavltY4n5C7q6B+5NIa2SiKsDpIfocj0jtJJvTGcjzbP25r6HirG
HwmQ9cdwOv/LQREdD6h7bLqo8mIMh5byps+tu0Fb39sGdZsxdL534YhAmitQ
77omXnUdQ5Hjxm+OvHUBWtun97d9x9C+3sqFW8sZxq+GPDIIH0NlIqlDVsoJ
5mtiz5rEj6HxlBQtYLcjrF78I/I6fQwrXtj7B3I5wKbS7FWbojFsVvMSatvx
H7CdKW1xrBnDHXWrfosi72B7Tm3y+44xVFl6ueInZw+75Dq8fGljSHmagldv
2IFI0sDTL7NjqLPYEpzGbgsSR6bORZPGkaHvvEiYuQ0ciVsRi2cfx0W1RxNJ
029ARoyZPnnXOF4eb1+/aG8FimHbOrPExjEw9+OdfCFLOLObP6Pw6DheSG9T
fFVpDhf8xP3KFcfx8+FMWp7Ha9DadvRl/blxdHXcXrfjuhnoeZxSb78yjgJF
0q6NMqZwh1llf++9cbTYGcwsKvQKDN9pMo08Hcf/vT9iWiN/WPvx5P/x/wO6
Eo9P
            "]]}, "Charting`Private`Tag#8"], 
         Annotation[{
           Hue[0.5585438199983166, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0., 0.7, 0.7], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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

            "]]}, "Charting`Private`Tag#9"], 
         Annotation[{
           Hue[0.7946117974981064, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.827051, 0.418034, 0.0243459], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJw9e3c8V/8Xvz0q0TBCMkrKLFrSuYeMokUqpSSlhCI0lIwSKQopNJAoZCeb
rj0/9p7vYb3tlRHq9/4+Hr/f7/5zH+dxX/f1Oq/zep5znudxz5WysDOyZGNh
YZFlZ2H5373n140HXzUbSJb/e7k+kdN/Flz8/+XtqfaXP9gVkzkPd84U3X4A
ddRMpxS9YjKApcdnptMZHqxjfVG2pZgcim7sNb74CKQ0j4Z3zxeRm3tT/iub
dIEK+4C0mdoikjYTZKT23hUcItoreGOKyHuf914pUXAH0Tqp3i3uRaTV+s5F
qrAHFP27ObvHpIgM41RNn1z7BGyVU3mPqRSRMt5LpffWP4WNl/9IWPAUkacf
J+zllPGEvFdaag8ohWTXRv3Au5rPwDL/xdFXmYWkZXuHYsYtL1g73mAW5V9I
psmZvv0R4w3pm8Wcsq0KSW5J02vcM8/h8vGrPnVYSA7OyIgbH38BPI+/hw2I
FJLNy9FqmPkSkuNnfixPFpBv3c4r3Ffzg/NdByvWVxSQrmLL72ILXwHrGs8e
uc8F5AGRF29Ld/lD3MHqGXAuIBm+626Mrw4AI5uNvGcMC0iKbsZJhckAWHp/
UcJmRwHp4xLFQu8JhKjKKFUP1gLy+U7zuvttb+DYn9Ejwe0k+W3ff3lG3UHw
e8ces4QUkqxI0XLoGXsLn84/dizyIUnNEylaz1cFg65PyfP2KySZoVehTKqG
wHgmX9jEAZL0fLKhf+FmKAQPnfnBuZ4k7RiT6d8S3oO7ikbAvqZf5NEKh3Dt
fx+g7nV1zlXPX2Q//78D+pc/gfTExYHXar/IHao/8vbUhIHDiTGB3L588qqJ
xqPDshFQnPD44FBQPhm0+rKE+VgEbORbe32jTj65rZO+50fuZ7huG+aPv/NI
CNaxcQ+KhMwqpRzb6DySTPD8tObuF+CR/9UfciaP1Jfk6/hkFgUXXpwUKOHM
I1lcao0fGUZDHKNXfepnLrlt1uvy2PGvsHzE3nLz9VzS67es+SHjb3AshsX/
qFAuGZBrXfrzWgyEcQdk3y3NIVVTPVgi3WJh8rpU/+d7OWSlTLaXWXQcYGkK
f41sDhmkLP9bquU7BG7TUv/Tkk1u//ii/MD6BKB5NlyT9c4mN989p798PhHU
+ixeG+3LJs1frhXLSkgCz8MzWa6DWaSZq6ImxSsZWiKf9sUFZ5GpXL6Juw6l
gBzbRv5WvSwSSblni4sp8OBK1AH2hUzSQTXiu3leKlSSateUYzLJTiupPf7e
P0BUsuSVqUkmGRR//WyKSRrYup3J8ubJJBXndl4YU/kJuT399B+ZGeT5ObG3
twTSYS3cW0uxyiBlBI+eN51PB/NPXAfWbMogh+b4Gb39GZC8/O7q/op0csnW
++bWrkxgu7j91TXndLKM17rJsCMLjHIyMv13pJO+dA+GPyUbokSP0HPbf5LD
lsFbVk3kwKxzGx/D5ydZaNcf1M+ZB7rtVvsF1X+SwScF/+lvy4eQ/YsWmsNp
pNabkvdXjv+CoWAfv1vv08ijrif55AgS1Oc3ZYbqp5Ga0Sv6El0kvDgbRyv5
84M8MOd/8OvjAuj6qc43HfeDfPLitVqDTCEoCFbtkzD9Qa5h/ySdVlMIrk6m
Fvqrf5BhI9zul1yLoK5xxPdeTirJJ69g0Lu7GCRVXTIibVJJNu+E5aOjxeAQ
uIZWI5ZKct7xe5wQVwKFUx/XLFWlkHe8tmzedLsUNhoq7tvukkKWmFG8Puwt
g2vJeVdOK6SQH5x2Z2pxlEM6/wlft65ksmY755xYaznw2PWkf/dNJp9wWheq
JlWASc1taqtGMun4Q7zhrW8lGJv+FebpSCKnedjYjttVweymLbfM1ZPIa3xf
jl09Vw0hbURh5vtEkm9Xd/iA9n+wP9hceN1SAmk53DPasq8Gus542N40TSC7
5sueH1KpBfeNkQUFOfHknHFEqYBwHUg2FgqJiseTfI/854pC6qA4gG7j4PKd
DL5jeEh9cz1cO8VRUNkVR/a3xo47RdUDD/82IZlDcaT2BqFiJ6UGiPlPx+bR
p1hSnXek9UBOAxzzvU42rsSQ2XaBEUX6jTCq7y2oYBZD1hTQRwS6G8GfN8ba
M/8baT/xsWOLQxOolZf/6pL4Rq4bWOkc422GJi/Gxj1uX8ns9S9i70c1wwOd
VdZ+vdGkL9uMVpZmC4hwMB2YiCZndZSHE6gtkFtosBEiokhKNrnllGcrmDO3
+44livx8STE8dEcbsKBf/rj5F3JzboLp0/o2iPibsEGvIJLUk9j4mNOlHY7k
1ViFS0WSjrcnLgrv6IChRxN58x6fydW9o0+T2jrgubrAhlO0CPK1aX5p8YtO
kFtUsYrRiiCrJlNLDYguiLD78pBVN5xcKTX9vWeuCyijfVtTucJIDh6+f85J
3SBpLVtrUfaRtG4tlOex6QH7wRvOG55/ID/pccvUy/VC8rVYmeIj70lqVGxy
6VAvTFKH/3PiDSWtDGSO256hgMplhQfbKoPJXxqLfQ8zKODedUu65cU70mib
0XYvUSqQ55OqvQzekttvPE70dKUCS+vkvX1rgkiLVqUYWzoVThnvlhqqDiT5
NkGL6lEa+Nc7VoX4BZA3Hr19XZtEg7oTP+8ePeFPvlw5VaAmTAfJkDFidvMr
chX72slzbnQgA+2DzoS/JGMUbA8oDtEB/WaG0iV9yNakX2diDPuA9L53SCTS
i9S8/Ts0N6cPzJ8sBjjLeJJXZmMWL8r2A8XFZaAjyoM8Y2PL6xLQD+T437sP
jrmSFbe1WNesMGU6x5aDJ53J4g9Hf/21GgCW9lXlK4ZOZL5/aKVOM1P+KEVz
j71Navs2BDdoDgKLl6IaV9I1crPh7v/eJTJlqsMa4ZtnyOdTlq3uYkPAcuo7
j5iWMNl3l1vuyXOmfP/S90Z3I5QtDmL3/T0E7vXMAKp+FY8oVkX7WjCAZfDd
rst7buHw8QurnGoZ4O5aMjEa7IiyG1VdVTSGwd3nl+7Otw/wlvyHmZSYYcCg
rE83Ah+jRkvch6GNIxBRe/5hg54HFvUQC6T7CEg2t2y7U/oUfRLfisqPMp93
nK7n1/HC48oP1wqeGwUWSp1LYtFzTDKyMrUtGAX3/uNyx7Ve4qL40uIW+TFg
GalsHCH9sCM2R1QiaAxUFr4QJVv88Uu+Mc14eQwmH1q83Xg5AHWm1e1Sr45D
8orkyNWwQDSutundWjkO9u69+KP7DaKj5tn3yhMgyR72jm3zW8y8ZcLGGjQB
lGcXRw0vvsO5IU8ZvfkJiGBa6/OHYDzvYP08QWESTr1sD57sCMFX+ifCBS9N
gsBaJiBE32OthI50o+8k1PmfPfz6/AeUudR7pztnEvw3CIb2hHzEzVOOXArD
k4DvGscV2z6h6bSCY7rwFLBsCtR+LByOvJfW33TSngIKc7vX5SOQy2xd9iX7
Kdj/mnuBryoC72X/NbX+MAUhdQORP60/41xboE1gyRQsrCs9fmlVJGZPX1Ku
GZ8Ck9PRCxxxkbhtJlVUSHgakoM8v8Qf/YKHX3nXWcA0CLRcPWHM+IKKgxZB
CdemwV748OLS8yg8c9Rr44TPNJSbSEd9kYvG6bzD6ZKJ0yD3nvWkQXk0npQk
1A7WT8PzTsri9I2v2Flj0rF/ZhqGxMmo99zfUO3oWOSGjTOAZuEntb59w7/B
jypLVGcgItz1D0M3Bv968/jpG80w8XgpOmAgBv3L9nZ+sJsBE+lDpw54xSLv
vMeHtJczkHlVfImyLQ5diraB/9cZEIlein5eEoePK/w05ckZeDDQcUrF8jue
S33h4942A3Xbs5daOeKx1OD9Vr+JGVC5GfrVLSoebXSadI5zzoJ/3APD7doJ
GHDC82veplkYGjm3XENPQKcOl51dCrNwRHHft3tPE7Fu/KXKV5iFmNtCRhIy
SXhsOmL3ppOzwJP8e7mkMAlFcOSlmtksJD8Ybty7KxkPF552/W0zC+abLsSu
8kjGyUO/U0wfzIJAdoVrT10y+goZaNx4Ogu5Fw4Yp0qm4JJ+8HUhv1mwXYrZ
4WWfghOq8YM3386C+EeRf+fJFMw/o91l8XEWqjWeNykKpOKgo/4kS+QsPOie
j2U1T0UBE8F1ul9nQc71hltzUirWSfhX746dhTaJVuPYf6m4x5rtT0XcLHgy
3fHxyR+YJW+0l+/7LKiZp/87Ff4D24/KDv5lju9jkW3eOvEDp3f37Yn8NgtB
n9/GLUAaipa8NPvzZRZQi9O9+lUa7lLYOrsqfBYmaU5nInrSkPvo697WkFmI
eNq300npJ9YXaJhZBszCsa3GLEdcf+Lm+3ksmc9nYbm4qFms5idK7Nwf2+Q6
C/GWqt8nNqcj327Sh3SchYtcX9yLbqVjiNJraY8bTPt+W382OC8dRX5Ko/iF
WcjUeyJvw5eBdzmJxWCDWbAammIhLmVgArU1/s/BWdjoc6VlfUIGViVT/unL
z0LxjvrvA8sZmCXN2fmaeb5OleiRfSwT9d8ZWNVxzcJWm+Szrz5movCrSIGN
M0y8rJZUsBjNRL6XF5wtembAPf41616NLLwT7+dRVM7Ez/F/Lby+Wajgeo8g
Umega+x2fHdnFvJYZqx0v58B31c9Hiny2Xh7S9D+mCczoKF84tyzR9mo2yLx
4evNGRitzVM4X5WNEXBhmXpyBkLsFdkUxXIw9KTRxat7ZuDIuk+tLDY5qLxB
kaoqOgMLKWsSmrJz8NmmPU0X/05DlJHLk5hVuUgT6g0bpE6D8czIOZcLuSil
Vl3WXTwNHEGmiqficvFrcOXEkW/TkKZWxbb1Ty46xDXX7Gb6r3mzetv80Tw8
Fiq8K9qa6e/34hKqQvMwxm9sJtZgGkgh0afhjDy8s3GSzUBhGmwzfEwcD+Tj
UWnWM4FrpkHcZFFRzycf10pcYfiMTkH1ghW7WHs+FhhWFx+sngKX0La2cblf
6Lopcjzl+xTIqR9JLHzwC5s3C9+eezEFbR0ZT9+V/8LaLke9DdZTUJz3RmHP
GhJPZJk7rz86BaKvDIS3qJFomot/VrZPgYMZOxvvRRJfbP/4s5drCiqVckan
n5LIMvzBp6B/EqT/ObR2fSdxYumddkLxJDyo3VlY2khi6dvUyPgvzHgbTotP
XiLx+o53BhVPJkHO/n3we5kCPD6rWrfGYhJc0eiJp0EBJk59jXHXnIQWgVW3
bjsWoBdddreS1CQoUQvOmXwowBaRDQkSrJPgleKspVVUgDF8O+6lF05Al8cu
RYWRAlR0TMpufzoBakYMYaENhei5Jb8/U2cCfKU/s7EcLEQ+vc5bljwTQJs2
GWNYFKLOVSG3yapxUC8SaGt8UYheLloL1v7jEPimvDAvtRBvGFy16j8zDsNX
3RO+dRSioO3xNfbi44Bq+0MC2IpQJ8e5WrRvDEI4Jp882lmE7g2rD/6OZ+a3
pm+3LI2K0PLB6sC198dAN/qyycmHRdiUUZdyV2sMwu4KHz4QWYRPdkVuOcA/
BnM6tYoylUVIE33GcaN7FE4IeYvwTRfhIQIU+BJGIWoA2Oc3FWP+/qccB1xH
YTl9boyiWYyySxc+zp8aBWPvxLbKm8UYHR//5cy2UYg7d70oLaAYVxKXrC8v
jQCbnERiWFYxXos4SZdsHIELC80hz6nFyM+uFxYdPwKp5X5PHXhLsFj6dM2C
9wjwhOrcvrirBJszxfS2WY6A+c0VE93zJfg0m8d1j/YIZB74eVjFowTfxk6+
UN02AmtX3VISjS3BoHiG3A6eEbjesXUTR30J3v9yMGPL2DDkx3Wxjy+U4OSl
O+qSTcMg9ChovFWyFLes8r6kmjcMtgbH2guOlGLQgKrjFSY/KRbjKP5uX4q4
7/j91LfDID6ak/g2pBRZHVFA6dkwOOQ6hrqRpXggJNK/894wVPrKe94cKsWB
1w0LBdbDIH2Jfvu0QBnWe8QvDJoPw0PFD+cP7S9DWDSYOn1+GOpWjLS3m5eh
fEbH3GrjYZCrWaW87nkZcvBbNwgaMvlSWOGmpaQypHxvYr9/ahjabj/k6G8t
Q9Gwr0VqRsOgROyeqPlXhstveTmNzw6DF/9we+b2cvRQ+3G//eIw9PR+Lo48
WY5xFo0+FZbDoJZ8Psn3fjmKfmOxlrszDL7u697fCy9H90eSvH9ch6HvVIWn
eVk5GiQcFdd6PQwaUh52+hPl+IIaJsEROQyBU/svqAlXYNHlLacPZwzDcMGk
tgRRgafO2pay1Q6DVmCMMs+NCtzV7n5KhzEMIRbmotOvKnB+9MI7Pq4RmNwt
wtmVXoFe/96sNmOe1xH2uomSngrs0Bqc2a/H5HeN3h1JXJUYbx91LcJmBOaY
dC1UqRLXBPDpvgscgRNO80lPz1YiOIQZi+eOwFftpPe3XCvR5K2GtNrQCCxv
vPHs3NdK3GB1QrhXiInHfgl7zZpK/J2d6ShxhInHny0X5OcqsfNBwcmZR6PA
5vVKR1CiCtfntnw0Sx2FC2d1Vf7pVGGO0wHZKyOjkCr7V5RxqwpzR14ELMmO
war5n5yNb6tw0lPjspLlGFiU3ZrMzatCQQ3q8GL0GGQHb+v82l+FL+zMbcwY
Y7DWqrvEn68aF6N4Z0yVx+H6/rfJD/dU497VPnbT98chn+f4h2uXqlHtXW6s
VNE4CLVzeJ14Vo3bYm/qMAQm4HZsrv3+hGoMN20kj1yZgFJnJ1Pp5mpkdd3l
RKRNgIS+gu6alWqMPOZ5ZIBjEhxE+1Tmtv6H/WEp/vMqk1A5/EGMcuw/bHx2
j/20GTM+5pzmqnT6D4f/zC/PM/nnw5erp358/A/L5EWL+3MnocG0qPNT8X8Y
pU3zERufhJ0Kj0q9R/9DtYuVViGSU/BkeXfKnY01qDXKfc3UeApaqoc/mGrU
4LHjJdev+kyB0qdIL51rNeiTduJw0q8p8Lp14Y6ybw0yDqmmHpqfgp5D6y9u
SqtBiaALhnwq07B3baUue1cNbm3g/yLOzD/MdLlrjL0W2bTY+Kyjp2Eg8YB4
q3wtfo7SaJ1h5jd1tymugtO1iOkb5DO3zEDgydipuEe16B+3Zv1PsxkY3nKl
K+hLLVpY5DoNhc2A1qRImWtVLZ6Widh0ijID78m6FKuZWtweMfmFIT0Lzke0
T8Ty1SGLrH1g6vVZiFaJOBwmVYcS5WoQw+RDtSLL+9/sqcNkK7v2sqlZWGIx
UXp+tA5veKjcXnvgN2xn/JB5fKkO8wPlux94/AZmdbLJ4U4d7tv6sIu96je4
ZdmsvfGsDncdvjz3XXAOvn8uY78YWofa0Q29t67MQauPzOKphDrMZXzP1Umc
A1YHt3Gdgjo0eqSFystzoHihk67eXIc5CWEmsgbzcF5rX7syow4N6VbCsh/m
4dnONzVbV+rQ+9m7fTtH5yFl/UTRpnX1eF3afa0SLED3H/2stdvqccN90U8K
AQvAS/+ayH6gHh1FtyRK9i+AahVb1MKxetw0w9vMob4Il3+YhY6Z1yPLD6lb
ja8X4eWH7Fc0p3rMP+Ib4jWwCBlPhTxbn9dj/W57QgT+AN3Gwbn6Yz1+DJPh
f/LuD/Ab19wuSK7Hvv3WznkTf+Cgxs5r6cX12BxQ+KPo6BJYbvU6/72Nuf5U
Ubpf1BIErKGdiBitR7W7foc2sixD3uwh7bcsDRh8VK/k5MVlYHSFHnixsQH/
Vqf77s9aBsGS30pucg1ItRh4Uyq0ApoJhludNBqwM4P6YcppBW69Tdh081QD
rlPxlk1pXIHgx7z8ZtcacP9uu3vLu/9CkaUlx+kHDRi6yHhVGfgXJo4XLOr5
NuDpgI1q62f+gtjezRMaEQ2YE8g5UnH6H+hJOPftSmtAvv3r/wym/QNHruZ2
2fIGtNn2Tm3XahYifFylVqyrAU+mK3gIa7AQFS2+xQKTDcgiLB0rdYuF+J0/
lMXJ0YgWSY7G+mEshNQ37aQ/wo3IsbSDz7eWhTj+OiJqQr4RB2bKCSoLK+F8
fzm0j2hEUqTmoPZuVoKZrl+3n27EZUUNtaSrrES9XppnzY1G/NaghuJvWYkl
ZYGHRY8acXw53PRZKSuxXcTWLvN1I561od7om2clTrOUX0v40ojT6z4qqO5g
I9yGZC5EZjSiledTE5sLbMT3OreTwVWNqHfu4BOvl2xEa2antm9vI2baau9w
zWUj2D/vU/eYaURW0YV0gzE2QtHnjfI97iZMWxPgNrSZnTh/Z2KrjVgTJtZq
Fh0/wU48O28gaq7chHcqTJKcXNmJFM1v/GcON+E9rzuXzyayE9072Dn1zzWh
idiPnpFudoJ3/eU/YNOEo1fFdijxcRB7/mRPqLo1oX93i4KQBgdxmSbUL/em
CQWaoqo+WnMQLysdOjZ/a8KiAL2u7BAOIiO1pnZ9ThNWa7Ao3CzlIOjvd5Zw
1zahB4eQe8QMB8H/1Ct7mdaEfgetgs9LchIHbWhJU3NN+Gl2lYLfMU7ixmmI
HljVjC3JY7OqDziJgIPv33dKNKN47Mtvul84iTyZudd1u5sxTS16Me8/ToKx
2uhZiW4zRlSwfgmc5yQEZxMeZl9oxk186pfzJLkIzS5e+6Tbzfjims/E3qNc
xK1iS8uoJ804cOer+II9FxEaX3Ah9F0znqV8zlwM5iKKgjafehXXjECtjFDL
5yImXJx1nuY34+a0kF+f6VyEmGWz+oOGZjz4OmStOg83oXd8l8qtAaZ+6pdD
5uS5Ccc9ftss/jSj7dfHD+tOcBPhmxmi59a24Ert/UHSnpuo4tQROCbdgs5y
eXIFAdzE77EITs29Ldhd+zmiMoWbkGpZ/rNHvwXftp6rbqnjJo7nm0zuNGvB
XVWDOr3j3ITz17T+LQ4tOJW+vbR7NQ8R/Uqgc6NXC+6kJclWb+ch6u/Z1vG+
b8Ffd6qvRmnxECtm5SV/E1rw0DabMPOLPMR2va05MwUtyG7OIbHkxEOcVnZP
HmpuQUxyNbrty0O4CXdFdzNacGh5dUtaJA/x/d++Dw0rLSga8e92RQYP0Tr4
xr9sXSsmPvq47lsVD8GkC89yt7Xi/Ysd1CM9PIRypsGjlAOtKFUptSdugoc4
H/HN/uvxVjzstvKm9B8P8ew5+/UPV1rR4BeZE7qWl0ixv2zqf7cVHxRJRWwR
5yW6TXJOPfNpRaFHZbbGcrwEr6aw7sNPrRjYU+GlpspL7NnheNAupRX7Rba+
ytXgJa6sq1W5VtKKXTXClxnavMTLxZ2y59tbMa3OfUOmAS+RQfUSOzHWijbe
IhyyhrwEvYImcJi1DYudYipUzvAS/KnAtV+wDROk5aHlHC/BhNuSwo42NOzv
eLzxPC9x48ncpNShNnzRrjjEMOEl3lgbDQgZtmGAf77kGeb4PKPEztWWbbiT
KilwxpiXYKivqmdxbkMrs8i+oZO8hKDM9dLfvm3Ivfx7vYA+L6G5ujBnOKIN
V+wrz1Zq8RK3Zjan9Ka14ZMp/R/C6rxEaKfz16byNsyg+TguKPMSJUXNHyq6
2vC1avPOW1t5iYnvuwLyJ5nzCcym3RPmJcSC/Lx+cLTj8YTje4V4eQk9F8aj
GJF2bJhfEDu+yEM4XtO580mhHYd+p4ltHuIhwo99vh6I7Xg+t0L1eTMPUaW2
Yupt3I62XfVx/gU8xLz4eUMXq3b0OWTLfyCeh5Di/Kl7x6UdrS637PN8y0Mc
HxPQuO7fjppr7DTvPuYhnJttd5lGteNFPyl//mtMPOaVy57KbMe/rln/nT3K
xGP0VnGd6nZUKfNsP6HIxKOf+zp1SjteKzXMX+LnIXbc6+JSnm3HNdmuzhZT
3MRps/3LMjwdqLOSgt713ISbbtCUiHgHcl7LkrVL5ia+K00O8Kl0oLCpSNKW
V9xEq9CxLjbtDqxR+nsqzJqbYP/3rX7+XAdeejX1ZlKHm1AeZC8btenAmbG2
m+KS3IRp7eVcqlsHvmOd/Lt9kYt4lpGT0vKmA3dRFTM31XMRKeHC36q+deCU
YciuhW9cRLe340cypwOTDwpxVj7mInjtawN+1nZg64Yeh3dGXMQeE3nvOHoH
fgx9EXNNlou4gt4u4fMdiBQJXY1FTsJPjn4naHUnnr8Z4LS1ipPIECBu+Gzp
xNnHene3feQk6AvvL7qqdmKypQ1d15aT4KfOGTrqdaLahFGt/0FmfKww0rMy
7cSnO2/fXr2KGR9TEjUu2XXiFwfOTb9aOYg3oat2Gz3txA3/RvXSojiIXx7X
t+sFd2IxTSlwxp6DYNwsFNf43okTV+LjnjHjt6CRxPpdvzrx+suMS47cHISm
+kNu2cZOZr13HUvq2Ylb0i3LooOdmCv4gO75gZ1gTj/Nv9SJL4AukHONnSiZ
9hvk4O/CsVqpVntFdmKqg9G1KN2FitILF5N+sxFiRToN43u70N+5tNEtj43Q
YxIsun4XxqzmvjviyUY4vlnJbTPrQgV6lduSARsR/uh86n8OXbj67aG9WevZ
iKqrP78VenUhd6ZYp2I7KzFvsO5TxvsujOfDJItwVkJG7VZgfGIXlhzZNmFu
yUocF6/w/lzYhccvONTtkmfma45tj9+1dKHuzpduPZMsRPSou8PL4S5M/7R9
s306C1Hf1HXD/S9zvtKpnIlHLMRK7v5Ld9d340khBbPrmizEjuggI2vZboy9
aj7TxcVCnPGb1Lus3o1DcrviM0P+gdvdY4eMT3Rj86XDbzpk/sH3SzG7j1p0
4xn5tAmVpL/QqsMhB/e6seWkcE+1+l9gVzLfrPqiG/umo4hfpSugLJS7Xi6s
GyU/SaWLnF6B/33+2pzajXxstHBG7zJ4DziurCvtRtmWkQ1at5YhpaZ2mquD
Ob5LrWfX0hJ0p8sPLY11o4g2q0u5zxLwhnt3T7L2oOANCxHBTUuwx5ve0C/Y
g2VtLc9lY//AFTuivGNHD57PXKO/Wv0P+J37kFd7qAd1Rcpc6qsWIYuYTy02
7MGaw4M0L7NFoG8/HZNl2YNWwe+79k8vAL9A0qdE5x7c4Z9gOeu1AAcXVr35
4teDyVEcG0rFF+AG5frzkM9M2eqgQPaPeXhTXvjY72cPytpYb+5i8uNfyRKO
Typ68LXiRr99/XMwEvLQ6n53D455HNBqdZsDQY+WS7ZTPbja921iidgcaN7c
ffoKZy92B7DWr8n6DbcMXx05u6kXA9JZ1NLP/YbQA8OHDBR7Ueu742jl/CyU
SOmqomYvZp1yCjkdOgtTvJFye8704sCe82YmGrOweXpl886bvXi9ljJCYdYb
eh3nN2x53IulezzvznrNgGPhT56NAb0YvmPqZ6jSDITHrfvLE92Lzmu/j7W0
TkNV4K2ZlcxeFHFvoKU8mYb5hxVD09W96CaygaqsPA0yV7f1DFJ6cfVketaZ
7ik4aeDR2DXbi2/O9BZt95uC3NDbfVYcFKxTpnXFwhQ0+IlfvrqWgrTbVVa9
U5Mw5FHZfkmEgkUM1tNVXyfh790HxibSFDy6uJbf/tIkbLSWrTVSYL4v8jy0
VpBZ/5k1HT2+l4J/3qlOt4RPABo9KdZDCnYsWLr5CE8As1wmtPQpyCYQIZwZ
OA626j1ZGsYU5N9ZseHqunF4ouSrts+Mgv3ZpSM+b8YgRFo9aZcVBS3+lRyQ
3zQGiUJDOxQcKGjcmpenHTkKxaveRcm6UNB2WvZKo9IodPw9vEXKi4Ix5kPq
jfkjMD49FSrmT0HfV/feEEYjwDEYvlHoPQUp8dKM9YxhEO08/logioInXUJm
dZ8Og0rtEu/qRApesXue0CQ5DLpFsZ6cmRSU53c5mVbAgIsZ5/79K6BgyYsG
s25LBjh853z4p4qC2WfoCbp8DHge/mN2tpmCTunaFgMZQxD25ordRC8F98uo
/UmxHII0b/5hBoOCPAYSRmFCQ1D5KO9a3wwFvb9qx4VXDgLFzqa3Z4WCf21d
42M9BmHu6qYL7dxU/FWx3iHp4CCsMSlralxHxVfKcT5fFgZA8tjdkzViVOSM
NV65nzkAe1GmsnwbFYH7i4nEowE4plavXaRMxZCGukRvHAALObdfeQeoONG3
HBHFMwAPxBXVMw9TcTH49jXLxn5g0rW01ONUzLzXX54V0Q9RHD7KCeeo2GM5
BQH2/ZC9sDfu2xUqWhw07OnQ6oe60b6tkTZUvBrgYPhMuB8GKIHhH+9S8XXh
OzbX8T5YbkLRYDcq3tTKSflZ1gfrK8aDAnyoqMjuMC7ypQ/k8j7y+76hoonJ
Xae37n0AKfovvD5R8UzPn2oR8z4wil7g8PhGRbobzxl/zT6wCv3q9iiFiksv
yMOMrX3g6mf8524OFXet/pIssKoPgjzY7tqXUHH5a2HozCQd4u4mT1jXUjFA
d4Th2k4H8qaZtWU7FcMbM13Di+jQcmlN/2U6FWdvflTSSqLDqGH25QtjVAy8
UFNz+iMd2HStOoznmeNt5Q8UvKCDiLrQmZOsNEysWzK8/5AOSkrFtUdX09BL
J5Lvqg0dtKUd9LUFaZg+v+venUt0uCAkWQJbaHghiZH8+hQd7FfVEAd20FB8
JJD9uzYdPP8+ylZVpaFTQFF78gE6vJ/esUfpEA39xlgqXynTIXmgNUlOj4YB
GYXvd8vSobTj2U4ZQxpOzRrrvdhMh64a1ejNpjR89jyYw1OQDtOF1C0iljRc
PvteZ+1aOvBkvH6/3o6GRpMbSWFuOkh8PyTI50xDg9xM+9csdFALH3nN/ZSG
Kz8uhl/7QwN9ZsJm86NhE8lK95qlgbm33rPldzQc7k/cNjBOg3uPfv+bi6Ah
942tMQ4MGvjafXk4FUfDEUVLzs19NIi8avh7JI2Gl/IE97b00CD93D+7gXym
vt01316106DaIGGYUs7cz827fgeaaEAjTC07G2j47lfLv/IaGiyo8lKau2hY
vip7tXIFDdbKZVyoG6Bh8e/UOLMiGmwVt2yunKRhp3SgtkEeDf7XHlDyh4Zp
Kb4pQ+k0+F+7xC8OOj7q2qMhn0yD6wu3dbLX0nGrp/4X7lgauIyKk2kidLQO
PCHm+JkGgZRK9SRpOsbKLZ+8GkqDmKYHP2MV6Kga6WlZ40+D/HJZlai9dOx3
/7IY502DptymuDCkY7n1062Tj2kwlPxkW6g+HdXs7jq/daTB3yiViDfGdHzQ
8ZD7jRUNNob2iL4yo2Pz2Ofz1Is02Onn+/a5FR3zaXvuO5+iAXqoCzx1oGNa
YiHd+DANzt4devHYhY73+cbCbu2hge3Nd5wPvOgodH3L1nxZGjy5pO3u4E/H
YqU11prCNAgxnP5j+56OF55w0aa5aJCoE3H3RhQd/WN23a/5TYXiAycmryTS
ccX8uV8dnQodisvWFzPp6FSTyzJXR4VJqbj+s4V05ByfktbIowKXkIm5YTUd
bwWezImIoYLoKq5OgxY6XmXc4ZB+QwWVvz/O6FLomPDxZ1y+CxV0p6/U4TAd
U+OvVN61pMLFAX6Dg7N03KeUPKZ7nAoOHXkle/7SsVAiY9VuNSo8r7FBFZ4+
nHu122OfKBXCCjfl7Fzfh/etd4mY/KNAWnrZnm3ifXhT+etSEJ0ClUwH3iLb
h5smurImSilACZORF1Xpw4HFVrSOpcBcYH30RvU+fBMe1Mn1kgJrvN0k+bX7
MGbs0royGwpIP1L8wHuiD9f8OjGeZECB/XadghwmfShfLb2peCcFjl318f97
pQ9/ikcyuHgpYHFu3+pFmz7cI78mYqG6Fx4Y9D+buduH5X4Taw29euEV8YZl
3K0P93kmbJOEXohS1Xw05NOHStODDnazPZC9feI37U0fWpt5ch+N7YE6sU/2
3Z/6cAPfkl3GxR5gmmek9VsfLl0LTihZ2wPL7IuWDSl9OBUfr+z2qxvWL3yl
VOf0oaJCYfXE7W6QGzU2LSvpw7akrByZzd0AFLaWgto+VHWY8d1e2QXGTcmn
ctv78K+xgwzPvS6wLjerSqf3YfVZ9sQGyS5wz12jmzLWh2ESNhFBlZ0QlJxN
fp/vwwmbj/Gmjp0QF2V18CtrP5rt/JOzR6wTyBCh9IjV/fi59duQSmEHtPgW
q3wQ7MfgjuF7plYdwKSr399u6cepLc5lhXwdwHZXUtZ/Rz/OXeAou5vaDiI3
ayJeqPajtYhCwLOz7aB0yUXs2aF+fHi79PTKYhtoG+5856bXjz7eZybHPrbB
BZ02gYeG/cioHKy/TrSB/QGvl06m/Xj101fbu9RW+F+7iZ1lP95sOOUo97QV
/teOctOuH6mU2JevtrZCqqD/0lXnfgwJYj+aXtICpbxwz+xpP+rUTMgmXm+B
rpWRSRO/fmxuEfP05G4BJh2wOR3cj4qJZz/pxTQDz4DewPHP/Xg+sug559Fm
kOj4bX7kez9+MlPfVc1oArWaL51aP/vR41mzYeyLJtAvNDx76Fc/nv0v+U6c
fBOYp/+r21fRj3H3W3u7qhvhXlyCwe7GfuSmXU06frsRfMNMSxW6+3FNbd0P
XoFGiAzk1dw+2I99oy6PN6c2QKZXRo7UVD9qs1w5+9a4AWoeWu4VX+rH+H8L
8Hi+Hvpub0gR4hxAh5PmI5T39bBgUSC/jn8AbS98OlIF9bD2nN3X1ZsGcDrf
WkSXXgdbDTZLcckM4GPPUnPz53WgTlR9YFEcwMNs3KuklerglKqz0NLeAaw6
xpW3LbYWrm/fHvAbB/BLW1Gw23wNuIg1r57UH0B3wUP2Fno1EMj/1GvYeAD/
1r5g6wv5D2LYd7H2mw0gXXaqd91oNeTP9zzqtRpAwfJfPfNYDU0jvnPtDgM4
MnWuKjG4CoZ71e80uQygL39jCDFZCSxNQyM1Xkx9v/+8ma1fCULl765X+A9g
8+XLDcrfKmBnrja16P0Abjt1+UksZwVg8rRpftQAlk31PVO9Xg5noyJaMhMH
8P6JQrn28jKwDTlh+COTuV4wzkcplsET3+WqhMIBzJ8hfkUElUKIe5xuTPUA
pleHBzSvlECik0lBZMsA6veNFhncLIFiKy6NT5QB5DMwml7VWgwdF9PSg4cH
cLtpJauoXjFMnrLYFTg7gA2/fKXdsoqAS0cg3vfvAN7yS28glIpA/EC+rDfP
IBZc2UE1jy6E3Yq2nz3WD2Kue5j9gEQhHJESFXcRH0T+juE/je8LwEyw/N09
2UG077M3VthUAE6899bdURlE1/15SVOhJLxYkfG1UR/Ep636n7dtJiFsqp7r
uvYg6m1q0w3U+QVp/W4e5icGsSQrVi3rTD5UtisuXzAZRLG/3sm/rPOA8l/n
vTMWg/gp99XhKM9cmCvwmTppO4j9PyyFzL7kwJr0fbb69wZxQMJiaaI0G6Tj
+ge03QdRNM3g/umJLNjPJKzEi0F8th5fvxLPghOBml0HggaxtWqe7n8iE655
TZxVC2PqN+y56fSzDHj48FO9UswgcvgdXqgm08H/tsGxHamDeLGkkhxmSYev
FoulMrmDWNbeXp+s8xNyz37TlCgdxCthmQFCr9OgTv9MrkjdIKr+OfJzbfcP
GAD2fRs6BjHckvuRu/IPWN6dksLXN4hXZ3b9tPdKhfXbLyvwjA/iyUuTfiXU
FJAT4/vGtjCIN3i/L9/XTAHgz5FaYR3C+Nyzd1yik8GY/ebH+dVDKNqmIZPN
lwzW80LC04JDyLP9usyx2URwHykOGN0yhAW4VdWuOQHe9TqsGdwxhNQXZ/59
yI+H+EZJb6rqEF7zTSvtTvoOhWU1rF2HhpCDzTV9KSYO2nJcXFr0hvDBDTf2
/NhYGE/aOV9nOIR2bqqnlFNjgC2q7U6V6RCaGda7ChZ+A5EQr9ESyyE8yt0b
uL/9KzDLnRuk3RDeEhj2DZmPBm13GjXbeQj3fGH4zotHwwUn/4s/nw5h5MlF
5xNHo8DeClqT/IbQhzblYuLyBbwujhrGBQ/hxtXPzDnSI+HjqffVUZ+HkE/0
4ZzK3GdI1T6iF/6duX6/x5Zkjc9Qvn+uIPTnEGadXd5/yScCehSiNIJ+DeFX
94EL2zPDYVbSKONVxRA6Luf+vXQzDFYJsuz2aRzCY5NdXwVlP4Ekb2L80+4h
rLHMnuUc/wBqK6bbXQeHcK7Dd3aAfA/6zAL3wdQQBo2uVb4TFgrm/RnijktD
qHviZPYlrxC4124ZfIuTgXJGb49efxAMvv9tWG/Fz8DleFMNHad3EFlQ4Gux
iYGGrtfifzq/hcyfdtyXZBh4fM3wQ8fnQVATu/nJOUUG+gxNXDwY8Qb6PlUt
G+5j4Du/zIFKMhD+BDjfP6bJQPbKq+8ojAAQ8No+rWvAwNBX2d0HxQJA9mGz
reYZBrbPK8h/MvYHjdtPBw9eZmCiLn/fS/nXYGSxy2LvTQZWrq66OpXrB9fP
9napODLwy8OyP1MXfcFF3++c/GMGnqs8wCK8+iUEwsGGbd4MNDGlc4+W+kDM
bsYxyQAGRi0fGfn7+jnkywaXiX5gIEPpY32vpTc0iepoCUYzcPyMxV6pI14w
vHYmlz+JgYrL/ePn9j4DFvbP+1ZlMbBA11VJTMUThOZPpHIUMbBtONOHY89T
UBhZVvhXzcAL5Q4LSdpPQKs37ttiCwNZnoy05Jh5gEmjifQshYG7pSj95U/c
4XYZ16fxYab9OBzezJq7gWdOmjBjloEzQwnrRmoeQ0iSRSD9LwO3SwmvLznh
AolfBPh6eIZROdtfpLX3IRQH53u3rR/Gj+ukzj/0cIaOl7ZsjeLD2DZvn7hG
9QFMuok+/k92GP/f/yJO9epKp62n/r/8fwB3Ylml
            "]]}, "Charting`Private`Tag#10"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {All, All}, "Frame" -> {{None, None}, {None, None}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
          "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.827051, 0.418034, 0.0243459], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0., 0.7, 0.7], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.94, 0.462, 0.162], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.46056, 0.40064, 0.81392], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.09096, 0.6296, 0.85532], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.62168, 0.2798, 0.6914], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.448, 0.69232, 0.1538], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.91, 0.318, 0.243], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.97, 0.606, 0.081], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CapForm["Butt"], 
             AbsoluteThickness[3]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          SmoothHistogram, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"]], {{}, {}}}, InsetBox[
     TemplateBox[{
      "\"$\"", "\"computational\"", "\"Typeset\"", "\"\[CloseCurlyQuote]s\"", 
       "\"Wolfram\"", "\"essay\"", "\"essays\"", "\"input\"", "\"Language\"", 
       "\"\:2715\""},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.34398, 0.49112, 0.89936], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.97, 0.606, 0.081], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.91, 0.318, 0.243], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.91, 0.318, 0.243], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.448, 0.69232, 0.1538], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.448, 0.69232, 0.1538], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.62168, 0.2798, 0.6914], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.62168, 0.2798, 0.6914], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.09096, 0.6296, 0.85532], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.09096, 0.6296, 0.85532], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #6}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.46056, 0.40064, 0.81392], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.46056, 0.40064, 0.81392], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #7}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.94, 0.462, 0.162], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.94, 0.462, 0.162], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #8}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0., 0.7, 0.7], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0., 0.7, 0.7], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #9}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.827051, 0.418034, 0.0243459], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    RGBColor[0.827051, 0.418034, 0.0243459], 
                    CapForm["Butt"], 
                    AbsoluteThickness[3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #10}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.34398, 0.49112, 0.89936]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0.97, 0.606, 0.081]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0.91, 0.318, 0.243]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.448, 0.69232, 0.1538]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.62168, 0.2798, 0.6914]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.09096, 0.6296, 0.85532]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.46056, 0.40064, 0.81392]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0.94, 0.462, 0.162]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> RGBColor[0., 0.7, 0.7]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.827051, 0.418034, 0.0243459]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"CapForm", "[", "\"Butt\"", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, ",", #7, 
               ",", #8, ",", #9, ",", #10}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.15, 0.8}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{None, None}, {None, None}},
   FrameLabel->{{None, None}, {None, None}},
   FrameStyle->{{
      StrokeForm[
       Opacity[0]], 
      StrokeForm[
       Opacity[0]]}, {Automatic, None}},
   FrameTicks->{{Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}, {
     Charting`FindScaledTicks[
       (Charting`SimpleTicks[#, #2, 6]& )[
        SlotSequence[1]], {Identity, Identity}]& , None}},
   GridLines->{None, Automatic},
   GridLinesStyle->Directive[
     GrayLevel[0.4, 0.5], 
     AbsoluteThickness[1], 
     AbsoluteDashing[{1, 2}]],
   ImageSize->Large,
   Method->{
    "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
     "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}},
   PlotRange->{All, All},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.02]}},
   Ticks->{Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , 
     Charting`FindScaledTicks[
      (Charting`SimpleTicks[#, #2, 6]& )[
       SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& }],
  InterpretTemplate[Legended[
    Graphics[{{}, 
      Annotation[{{{}, {}, 
         Annotation[{
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.34398, 0.49112, 0.89936], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
eTUO6NxS6/2/70HCKPratn7T/4f/B2Lknd4=
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.97, 0.606, 0.081], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJw9e3k0VX/UvqSkUSVDoSilQipKaLeLRCQhQ6QopVRfSiUhkiGEZEolY5ln
ZXbM8zzPw3Vxjdd13auJ3/2t9b7v+eesZ+3Pevben3X23s/+44iY/adtzs7G
xsazmo3t/78Hiu7afjvbQrD9z3PSSC2LR7Lp//D7rCSG0bYmoqkoeFeHhy20
795npTLXSGQ9rJv79PsFvG2bprXlNBKZ84fcKl69BMW3WU9vvWkkFia4bygL
OAD1tOPSvGYjYRCw3/1fpSNE01ReOgk0ElfOlXBYqziB/vcty5tHGwjuNKn1
T2WcYYNxl9OX5Abi9cMjm72kXkMhd8RqiRcNxE4tnVcnZV3gcfk9t1ylBqI4
7AP3arU3sN/uGJfa5gbCNjuhyu6+K3RL/fHq7KonOKivuaVD3eAdqXTznah6
IpEjkMjucgcM8X5Pf1hPDMifl0zZ/xboGld5XOTqCbs4zmPpbzwhdpVw8NbV
9UQKh4aC+YIXGP0YEwivryPcK3kuWz15B1ssUz5LhdQRJ2+I8Tit8YWS3ba7
C8zqCI3erinRq37wrA0j1SXriLb4/CqFo+/h0FsusR5mLcHOJbhwl88f+k+3
fLcoqSViRA7zcK77AO9poYeY3rVEoaTp4ZerA0D5+60kV/1a4s3wrLf4+kBY
MpKQ5hGtJZjPjw8+FQyCRO7F9MjpGsLorhhfnXww3CgvkD36s4ZwJkc9CTIP
ge12btlFzjXEavtvz899+QgVUpcVNDVqiDviSDozEgp2JL7CPt4agvTNMoFN
9jNIhQyh5XA1UV0XRF0K/ALDGnGlvxKqiW8ipIWwNV8hcNVjFY9n1cRa/reu
sufCQfWHfDXv2WrC9YRntSVXBPy9v1ojZkM1cXspxCq1KwJSdtc1HO+oIhYM
zD6eS42EW20BV0rCqwhX+cJLZn5RwPf2epuWZRWx6LvthdaLaKg5vV9/ULaK
kDak92taxoAjbbb7IVsVYXt39YbwO9/g2Pefxn9rKokp8WVNd8vvMGbkNOgZ
WElQBDckqtrFQgi3mpnAzUqCf1q2RvxDHGiUbyV/P1RJnHEWpjz4EQ9sdj13
TyxWEF7zXU3XRhMgUypqsqyogjCy+FcsJ5QEFiTLhzqeFURX0fjtS6bJsDNE
hjqsW0HMzu7PHkxNgQaNf4+tdlcQXE82v9rllgqvV1UsLlPKiVG2Cd36U2lw
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
NzMN
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.91, 0.318, 0.243], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJw9e3c4lX/4vz3KPs5xNJBkFU2p8Lxv2SWKkpYoSRSliJIUKRTyoWSnjJQi
oqzsPc5eyMjKKGSPfM/3un6/7/nnXK/rfT/3fL3v+7n/eDZd8LS5xMfDwyPL
z8Pzv/8/vl/2zTCkVPD8v99a+5HAg8+q4f/jA9mvHEbjqkHh2rONjzviMbdl
c/2Yt9Xgdk2HT3tfIhZvNS9vkFsNmF8yjedtEtaUmjk3UFINl3/1pz9STMEW
p+zoEfXVoFNs8y3tRCqmYSKUr0uthtpmotTg5tfYqZdfonp+VEPm31v6tMXX
WOgvZ4/QkWpQufgDV8hJw77qyVrumq2GP7bObHr1G2z4WbVGB28NlI9EHbhf
+BYj9ngJB4vXgMrGH4dXP6dj5ruUB7bJ14DawbLgt98yMN9gchVdpQYWLu4q
KW/KxDIZgakBO2pg63cBxZTBLIypviNATb8GPhuF7IkTz8aE7nafIZnVQPG5
6bYV9B7b2xqx38+2Bma/3VqzJeAD5qKIySmfrwENvjwT54Yc7MWN8ekmtxq4
huHX4xQ/YXXViZSbPjUQe5SzzcQwF5vBW+ZueFgDWclj/54v5GJbXJee1T6r
gdz3r2OSvuZhJ4qz3T1e1cCzugjxFwGfsWCx0xZy6TVAKqLjsg/nYwUOomoV
uTXgjzqZIkoFWH/uV4Erpdz4VwbX9i0VYLL8rn3SDTUQrZDQfan7C2Z8Qq6i
mFoD6467LdU0FWI3M+uSLnbXgCRz7O6O8iLszYL3XbHRGsBbaI2zv33FqIe3
nPoyWwMWPiMmf8u+YXzJtL0OfLWQT6D2fWwqxnZNBMkKS9RCfdv3B6inBLtw
cPfUJ/laOPTljz7rXykWHdPXbr+lFnwYh0M+qJZjVYPPc3h31oK4TKHyxMnv
2OQ+w/Bs/VrQnsiPdreowDaFT7jamtdy4/s80zRagR3rSjFdtq0FfGtw+I7/
KrHA7dYq6edr4dszZm0hqsJyH/zjtXKvhf7Csj2+k1VYDzWne9anFmJqM4Mj
s6oxKdVzZSkPa4Fz/oa/3KUaDHzFEswjamG69tGSplot5tlU4jv5iiu/e+N8
/+9aLGWDu118ei0M8MXecyytw9o81u0xyqsFY/3+7K+R9di/ikbpsdJasNms
nSdypQHTxvn9iWmohUCVWxR380bM4ZJ6qwGtFtzPuTquaDVhEUXM7MHuWtBs
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
bVu3yf/D/wNtBFkE
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.448, 0.69232, 0.1538], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJw923k0VW/UOHDlmySlUEkRIhVRKYpsuzJGpaSBVCplKqTMc2RIkmgypLhJ
kTHzcMyueZ5n13hxzVPSe961fr/3/nPWXuc8z+fZ+551zrP/OIJ3zS4brGVi
YtrAzMT0v8eu3Ic2307XEUz/7ye5kYvpWU3Z/8X5Z1Ozyz6XEQUpbtGm3HZw
xUHXXsCsjPg41c168509DCb/O2EFZURkIVekorgj2IxHzJdvKiMo57omNzQ7
wcZ9qsmCnVRCKso0tlzdBUJvjVlYx1CJ97Lnpc1lXEHyvb9kpT2V2Dm8xmFS
wg3yqo+NC6lTiVVaXVjV0edwhbX1hw0vldCQ8dnw5qw7DKKjYdVIKaEewOqe
r+8BNraC+4TTSwkf82NK069ewMbEon5br1KimVXqv+RSTwgdNfpSfa2UeAdt
rOGc3iC5d/NtEdFSwlb1nJyWqQ/k6Sbutp8vIR4+Cj1q1vQSrgRebaspKiG6
s4PPfLr0CgYrlt/vCyohLjy44+Xc5Qc26z5rO9wvIV4uTdgNgT+wwVmuOqkS
4sWxHb/4ed5AqNVQjShzCbFm7QXZM3/egGTcSz/HumLCzV30acJwAOQNSWrU
fykm5DyUxap63oKWQMOGAxbFhFlbRsxKfyAMXrcpccJiQi0isDBiOghs3uz2
aOAoJm4pf80R3/Qe2MqIMwe7i4hFuPiA+dgHCF1rwOTyq4iALx/XvXv4ESTl
NuQ0OhYRsebc97S/f4I8y1h7sfNFxFjJWE7yfDBoxVw66bq7iJjiHK46oBUK
g7S5+SZ6IWERcCldPCcMbPg+JYtnFhIRdQ/W794dDmxX4YmbTyHhleiuT+sJ
hxC/PsmWG4XE5RR+zrjYLyBZ8mL80IFC4oNB9nCW21fI+3fw5/PFAkI6vaP5
4p0I0DpRbdhaUkCcbaue+KEcCQPmlvsk3xcQDbf+XuaUpoBN9A6a+4MCwm+f
+YlyiW/A1pf5pe14AeEjnt6660gUhPDeuX14XQFBb+Y3U5f/DhJa//G9aMgn
1gdsF/mqFQ15L7+3tUfkE04R6ziNnv4ArUKND0cs8wm7cGWx0c8/YWBlUtvz
TD5RNm5+0rwpBmyOB3F1bs0n+mR7ypV5fgHb45O1R3vziBROO7EMgzgI+dbp
5xWfR2xguv7t5e14kOh21ehyziNavG/1aHMmQN6OfWzHLuYRtX82198tT4DL
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
ZSW0jKf+L/4fQcPbSQ==
            "]]}, "Charting`Private`Tag#4"], 
         Annotation[{
           Hue[0.6142719099991583, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.62168, 0.2798, 0.6914], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
G655DJ/PEB/ArVoCIZImbKi4STHfdHIAK91WFR56wwZ5ob5k04sDqL35psIt
CzbktXaM1N8YwDXjZULJH9lwwrd57xGdAVyZ2d8h94kNCXfrHnw1GsCz3jel
Fj6z4cC2Sm/6hwHccyfXlunAhtDuktrLXwZwn9V0uogTG7YH/eaO8hvA1IE6
zg/L2ks7B1dHLfMG3Uu3Luv1e9Lf6WUMoJwUy2R2Od+RlJhSVDKAfhKzPpvs
2bAyLIa+u2kA01tHSa+X6394Ei72cWAAtx0/tGWbNRumxEO0esYG8CA3Q2jt
BzYY0fx9ZJcGkFAXrVZ4ywZatHedHx8Jg9YcUqh9yYZHz9145raSUOmHl3/0
czZ0S365cOsgCRebOpc69Nigwfz8Pu00CRPC+VMeabGhNtE6VVCJhEL/ea66
pMkG5ZcWoyYaJPxxMO2usyobiqTf7Kt7RELqt4fbj15kg9yUycPDL0nIw5Ff
LnuGDWnpz79/+UhCZ5vO/qTl5y31Vr9++CsJG7kvznjsZUOUjO4a5QASRrdW
mw9uZoMo+758RAwJPXe+lIvjZYN/7i0LrmwS8nk8ZIwszcMmyxtpj8pJqCrX
sjl8fHn9gSqDaCGhtLv8k17yPPBwXBLfRSFh68YnF/2X169t4QVtywkSPtwZ
2tldNg9sWznfLg4yytqKekVnzsNrhdMNZzaQce+nuU1cUfPAXCW91ncHGb+O
qlSNfZ+HZ+WSF2ckyNiZVZVh4jAPJMf9HzTOkvGhZcRl5zfzcE9FND1FmYw1
AVrc+GQemnl3MPlvk/Hvblkz75vzcK1m837jJ2S0AmHq1wvzUOEqqFPzioze
DTVLksvvt7zaOj8JWzLauU5NmG2fhxwBnkYnNzJesfsob7hmHk40reSlBZHx
uVbYpo0zc5DgtXhRKZ6MSf/2/HtBmoMDt+Y+hOWSsanp+dTH2jkI2TyZvrKS
jEP521lXcuZgaweDqdNORoUrspPN4XPg5U/b/5tKRk5PMfoO9zlY/4Css2Oa
jD3f05IOfpgDxx29fhacFJSqfMe9oD8HHH3tjR0CFDSZmgzwujEH70OaeGV2
U5DW2ss9LzsHU7q1Cj5SFBRKcSw/JD4HRnv/WE7JUXAT+8RFSf45oFGKM9Sv
UPDe0y9//s3Pgk5EwVjSXQq6jzg6R5JnofNp9oENzygY1LPObF/NLGgcTNN9
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
            "]]}, "Charting`Private`Tag#5"], 
         Annotation[{
           Hue[0.8503398874989481, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.09096, 0.6296, 0.85532], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
YdA=
            "]]}, "Charting`Private`Tag#6"], 
         Annotation[{
           Hue[0.08640786499873876, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.46056, 0.40064, 0.81392], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
MH+n3/OZiv///4N39RKnFPWm/o//B8YB9cw=
            "]]}, "Charting`Private`Tag#7"], 
         Annotation[{
           Hue[0.3224758424985268, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.94, 0.462, 0.162], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
Eo9P
            "]]}, "Charting`Private`Tag#8"], 
         Annotation[{
           Hue[0.5585438199983166, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0., 0.7, 0.7], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1:eJxde3k0ll/UNqJSpgZTChlSGfIrSmi3SyqhVEpRKkRFISqlzIrMKpE5QuYy
z7d5nofH7DE85uExz3m9a33f+tb67n/uda1z772vc85e97muP85BHeMbj+lo
aGh2b6Gh+d93d56BRcS5BoLm/zz/Pza6989SQriBMLi2jX6ntwmsLH21Tt3e
QMSG5paKOprCp2+i9jBeT+zrcBDpdXgJe48XfCyprSf2aCk8z/Yyg581dz5f
TaonrhgckFKPNQdJwym3Fp96YvrCoNOF5leQu+2jl/a7ekJtxHDHMeY3oBy+
/9vg/Xqiys6RMUvdAloxyffFuXpCOaEp6lvsW9DvUgpYEKonKi6JrJmyW8Lc
W3Kw1fZ6oqhdX4TR8z3YcrwJ2zpeR6yeoPuw74AVsCQxR7rX1hES+tn+hjnW
EHAtPJojqY7g2DuoOJBuA0fHZeODfOqIxT8/JmwDbSHNqf7PoXd1RChv2L1V
VztQFH6SEn+/jrAQVB+q/WQPDfn/0k+eqyN0Ko4F67k7wEPtb9m5QnXE1qI7
RQdDHWFyRZS4uL2OENjNZuFBfIQFCcdPgaRaQv/3owjRiU+w68lf97igWmJq
6FDjGxFnEAvt+ZbzuJZ4zvVMcNn4M1xqZwqsFqslLlXOPpYpdQGdPbLhXbM1
hLXr7L4CcTf4oGIQM5FZQ+w/kfLuULg7+Dp+/btuW0Po9P3Oec/uCcm5+RnM
SjXEZ824Z097PaFmcZI4wFZDzGwN2yKS6gWjkvvLxEnVxN+JYVGGr95A/0yp
9kxQNdH0ycHwluUX4A973aL6uJp4Tkt3zNDoK8h2hnXdF6smPsuGlfgbfIPb
7PUDz2eriFMfW/TguQ+8vPpv7ENmFTG8d4In9sN3cP0kOutmW0V8pmHsOOvn
C1HEnZXAy1VE9oDss9uEHxQsO9LGs1YR55hKH1+d/QHdx5O257ZUEl74Wcbp
eAAsGZJZawIridBbr9n1rQJh7y9mzm69SkI1mZeqTAoCiW5Z3knRSqIu4FBm
LW8IXOF8IvxvpoLYtqD8r781BPTUvomxZFYQQuxLCpw/QsHGueAEr20F0cmz
mxSk8xMCCqZkJS5XEEUcEeWJx8MgdXX/eWCtIA42Mk/Y7wiHBqkrSldbyonZ
NqeKa6PhMP78jZp2YDlxyQ79VRp+wfbIcI0XeuXEqljK2aSCCBAg12tbiZYT
wXNeJ3OyIgG4Nx67z5QRuTjgHZ4TBXduiD0PyigjDg0mT4eV/QZzl7vm8TZl
BJFAY7zQGQ3uRR8tcy+VEY2GLD9IKzEQvZ5kV8NSRpjW8D+1F4iDopO9zt3N
pcRQoZ3YSfV4IBuzeE0GlBKszBM2Yp4JsBYl5/tPt5S4J/wz5LphInD0PQlm
ES0l5MxIWWN7/sBxHp8I3pkSIlKZVmRLwR9QUS+Mk8goIWgriqxSX/2FJ27U
ZLApIerGWB8IHUsCu5ID2VcvlRCV/uqahpNJELRxpVCbpYTITDKh/k5KhnQZ
i4oXzcWEQbyC4z+rFGgy/VVvFVBMOK7O3P6klgqT0Q2t7rrFRAdLt5nO4TTY
MbDRE3S0mBCxU0iM25oOhw6ID8VPFxHNFb7+H8fSAW9rTuamFxHFF3xe7SBl
wD2PT/M11kVEi/WywO3yTHhdlrzWfbGIYF7bOPixIAu8afu2TDEXEZUpAVap
BdkQK8u6c6OpkFDhMSyhq8iBMjP53awBhUTmWZ01x9Zc6It9ys2nW0i431F2
1ZzMg38UH/5jRwuJnfobvNWOBHDxFYmcnS4gtv6W3nuMKx+k7kxLXEsvIIRM
pW88iM8HNS/ekw+sCwijv8nBTy8XwLMK5TPGFwsIkZE9h7QGC+DjlrcXrJkL
COapb8ZyToUQIh+h7NGUT6jLHXrMIVEE2a8abwT75xOhMLltgVQELfE0mgk6
+YSVTVZWv2MxzAyJP8o7kk8sNpy8NXyqBJgOaj2ppRLENQbSbqbJEjis6WTc
k0YQugp1325HlcL5Lymvp6wIwpttS0eNfhloV/V92FAkiEHKxAnLI+VgwcDm
yMpMED4e4WcfUcvh8Id3XGej8ogoq7p+x6wKeDjVdOjByTxC4FaO4sTnSvj6
6Ji0dVEuIcH4qvCHdhVUNTorBN/IJc7snBr3PFkNNBcHrueRc4j58Vsf6nfX
gEw6POx5kUPosBuo35+tAaOjfi821rKJO/upxlKttRAeMPuezyWb+C8jdSb6
YR20slx1OcudTdjSDU08INUBm22U34PILOJAZULBKbV6uDBLF2UtnUXsK5x1
laysh/eP76cGF2YSrMOvhi9dboBkUlpR3vVM4t0G5+S70gYYVtrd2NOTQQhP
Sf1XcrkR+LONejeeZxALTVw5wlWNoC5ROsW3lk7EZfvu/na9CVxDDv47+zmd
SKqtFGZtawJi93umh1zphHjLkJa7TjMsObTss4lII/LazzszTTaD2KLkkRCp
NMIk23LKzrIF9J66nCIKUgl200q50R0k8O2gKJLVUgndvzaOsgEkqFNFdZqe
FKKiKFLF8FgrbCd+6PA/TyHqVnsszIpaQf74vAmuJhMV3g/vKGm1gXn4NeuH
zslErI5EcN9sG0RxRLvZcCYTepP2+lLu7UB2og8I+ZVE/JB4LnbiaAfsXdWO
Jk4kEWfNfRsbSjtA5XlGOjn/L8EUcT9sq0En2PTsKaVR+0v4M65fyt/WBenX
XzTzd/8htiVxNM797oLxwrJ+NNrEIVrZ3qrdIHRScObhSiJxzuhtn8tMN9yJ
+kBj65RI8Jqfc63z7QHPfa0soRyJRCPbVunD/GTw5H4sa6eUQKTYxSp/MCfD
0jq3RsHjeKKI/3aNdjkZnvTVmNHZxRF+rU3phby9UFdi73k+KJb4ZJC0+tO8
FzBGJs4uM4Y44R9RN1PRC1EeE+UFLdEEm6Kg4O+DfcBl/nOQbvY3wVoftzvb
og9s7mhsUWD9TSTrbFc8WNcHVHkmfnvRKMI0SY+/RqQf7hzMly+8FEmY5F+p
TrPuhzKG13e36EUQiQOBMo2kfpAZPfpaweYXQZ3JY2eXHICQmh5v+4Bw4v2O
BrKp0wCwJX1NKEwPI/hcdvd2kQfA4rtS1Zbmn8RSkoao6mkKDFv+G1aYDiWk
VSLCk7wooPYwicGBOZS4EttPzzBKAeLCE4GiIyHEN6OfbVLnB0HthqzVdtcg
Qmtyu/PJH4MgyROe5lQUQPj116mvTw8CzQDz9Pb1H0TtqPb990pDQI59c9RZ
2o/oVJgOjwgZAuJVry7ji+8E39eB3caLQ+AJyoHOEd+IvaHMb8pUh8FkW0oL
Y88XwrD9kNuvsGHAOl62z5zexGUrNZrlpWHg93NS2qHmSWiy/3yRojoC5MIB
BvZdboTsYqVRdegIhNxKt2C3cybQstT5xPwI4JDLGPusI+Hy4uuN9kujQPP2
gTaHnh1hd4/udrLfKCC7/k/x6A/EIXGHw8mjo0DIMDtJuL4mcr2ZnlTJjgFN
+pMO7c4XRPn4Kxqq8ybeSI14GPKQ4GNXN9rVuoklj3ruETxBSDVq6AgKjwPN
0B3HUwkaOC0srsZtOg42YtqLfnueocSJrz6DWZvjs9s4qkTMkcnp58kPDBNg
U/tQslLREud/hr2rU50A/pZ7wpT/bLHKZmi96esEPLzg/HeAcMD1/WeW3rdP
APE35ezANSfkU3Zey+adBJqDfVX93S7Y1XRJ1vnRJKAHi2b/cw+c1Rx80PJz
EgirQDNTKy9UFEy67Nu3+X3qCdlpxS/IKXEqpZB/CvgnymlMmb8hSevHVdX7
U4BCD0upTT649Ly74KjvFDzUWnAzCfBFzlBzuhv1UxDi7apO1f2BQ3uHFe/R
U4EoF+AxEQ3A9/kXrx7lowKZJqN3aiYQryf4BLKcpgKNzLUo48xgJHlYWtDf
oEJI2su0RSIE++zIGtueUUGyMedHWngo3lYLn9ttu5lvcrvVG6efyDC++6Hg
dyqo7VB/dMooDHOmqoKkYjfzCwdfWLwWjopvJ+UUCCrYnBsVSTvxC5XTsVy5
kQps96V3vuGMwHhGY2ZlymY9C5vJk6sROFDKzgALm/W+VtYvdEdiDSVvr8DW
aahL4EhJLYhCb8vdt+f2TsPDyke+ryN+46m4j/Z/BaaBOhhrefJzNG4cfemo
eWwabOiWtBeexyBfu7XZqOw08PMqnE+9HovqZhwhDxWnIfG0u/Br6TisYe3x
zbo6DXirbftJ7ngMZzwlsnJ7s56J0Pj8WjyO0rqp8Whv1nM1rk0hJ+B/I1G3
efWmgUb9fpusTiKyzXSn0T2dhrJeusp9TYkodr1BscxoGjyNo7JXFP9gtr/A
7AvjabizrhrfnvYHKx/vIxZMpuGwy2xw5pG/yPDaAx+abvLn8vP64f8XJztT
D8ZujqdHgP075iQUjilX6XixOR+pAXNN6yRkOfdrcNJwGi4XOOvLTiehtNHH
58MG08ClduzOPt1kVH37zK9cZxrIXU1KK03J2PTHNOPLvWmIMnwn134xBZny
CwSUbk2DyTKfeGZ6CsqVqPGPq2zO/1Mx74+jqejgnCxprTAN29kN2d4FpGJd
xRNGhtOb6/GTjU6TJQ0VsOGbjfg0+Eqmzp62SUMNv5MLc/zT8CRXi8I9k4am
3GFWj/dMg6QKLWlZNx3b9QpTmumnYaktoqytOR1lBX7fVJrf7B8DlcyMSxnY
x+2IRQNUcJqfjvHLyMB5uxtfrmz2xx3774FvRTPxNZ0eQd7sH/5dZzzuBmZi
u9/bkc9xVBgO6rM5zZqFQ5+bs1X9qJAo5vSS2zYLRwsFd0g4bPZbprje8kwW
rpulZUu+oMLly4232vSy8d9cBkVTY7P/WiwuZbRko8Orz5l/zlKhVZf3tN/l
HGzazvFFVoQKUdOFR99m5uCd2cPDK8xUMLF+uv+uWC6OcZqHUYemQIaZleV0
UC52lzAwmf6dAhr/5A0utjz0Y2M+aG85BWWHNaeXbPOw7plc838KU+CbutHX
OpuH0ednApwZp0Dy541nnccJDGR3jfGpmYS9T4V1qwwJHLL7ff+x9yQsHVvS
yg4n8NxcuDTdrUkgL1Sox3YRSKxua33LMQlFOYGqARz5eJuRfntbywREOZhc
dL2Wj7iXGibmMwGuygpn3zvl4/bqqlBb9Qkw2c0hY5Sfj0onUy5Sdk3AnbZh
yXsr+SjwfclSr2Yc5EOyjqicKMAdHzQPM30eB34DdwF5owJUIPWljVwYB3qJ
Rzxivwow6clWvR0bYzA+d2Lv/u4CvFra8dQyfQzqsrYyM3EWIvdSH+8V0zFI
tmtjWLtWiOMXPW86HBkDX6XYf2NOheg+sbAg3TsKNmzWix35hZgYVJZp5DsK
eqTr1MqVQszOmFuWvjYKl4OERrJOFOF5c5uOIIZREHu82BtjVIQPVm26krJG
gE2sot3/VxHW3SgEO9MRWJoJaHTpLkKFNN42DpER6MwwrrLkLMbdmXZRVp3D
QNicLzZUK8bOL5OBJV7DEH6JPVfLuRh1x5y4Vi4OgyvLcKpyQTF6/WoWP7Q2
BCbNmQlyq8V4MNTgiMafIVAPcIsSlSrBN4W6Un76QyCj+zCU53kJXrYrubnE
MwT8R0/82BlRghaCJfo29YNAP83wZbW7BLN7rguf+TQIw2mtLmOcpRhJF88r
e2YQqqxiHDrUSvEZm3i63SwFEhWtPlQ6l6LJMIOYQDQFfJmuv84qKMWo8otO
go8o8L5R0DhmtRR1mChxXlwUePhjwcBfqgzfqI9ce1M3ABcelT90eV6GkRNp
M92bekLscMBdy4gybJs1H2s4t6kvpl7cMOwpw4RW+wf3V/thLuWcshZXOZqW
HbzglNIPre/3XlC+Xo78j/Zp3zfph2yFIXm5z+WYZrDdf1C0H8J3ZEqLFpZj
QVxpo9hwHzjVu0rwrJXjefqG0tO/+sDI94HITukKDGDv+cuu2wdqD47zrz6v
QIXK+fryTT0lc4iBeyyiAtfkl0q1e3th/wRpV0dPBbKNrO/sCu0FmuToHZVc
lRhUefOKqm4vDLz7sCXreiVGB/rSpgn3QtU5tbXoz5UodHOrpcAIGRK3C87/
KKxEhXWeOZ84MnytnZ/4vFaJ2tWaW/ebkcHCp2zwnXQV6puonc04TYZ79/17
nr2oQjRern9FS4YLQi9aNSOrsLPNxe3P1x44PIb1V8hVaJJPt1x/uAeY/u6p
kOWuxnNNTjc087qBajFYcPRGNb5g7UnVuNMNrWczsva5VKPPhOZ8y2wXZG91
Td5RVI3cNEteA15dEFKtHbeyVo01g2alrse7wOHrfxGj0jVYeOSlc0dzJxhp
0Qe3v6jBfRa/PnZadoKaAOl7RWQNztatHvUX6gSpkd+emeQabD9QGSpQ1wFc
ie+do7lrEQz/HLCy6oC119fsftyoxeECocD0Yx0wcEbA8rNLLS5H9Qt39rdD
Gf282buiWqynl9ab/dEOsZWlRs/Wa7Hg1z7Wbbfa4bJS9XFxnjq8S3dE4+Du
dsiOPXns16k61P1vq4pKQxtIsIWIHlCvw+rHL6S9v7VBiBnj4W8mdXjaQ7xn
ZdMv7Ca9FGJ2q8OEBKdRD+E2cJDt5Hf8XYdb1PwfaM60wlKg4oH14jrsDrxA
q1vQCs9oE7hf9dUh2we+Z3+/tUKnHhfHxL86pDlVwnzdqBWultnufsxTj/NW
C6cvXWyFAtExlq5T9Tgm+ZUzULAVpDzUd95Sr8eSS84xmvStEDGTs63apB7V
QmxJn4ZJwHVbhF7RrR67TtlqitWRwDXDkybndz2yJ9ysv5ZFgn/7V9akSurR
Z64xdfk3CUxsdJdj++oxgmOn3n+bfqmvv2peaKMeczSE2f55kUD90smZAJ4G
vJcrX6fvQoKy6ODJvTINeGd8vf6lEwlkWRjHXNUbcJeDt9gRZxLEmr4cojdt
QIHILzoebiTgbe7of+/WgNdXDobHfiOBt4wiee53Axb+x3zzUygJ6APiO41K
GvBSg1y08B8SvN7gbBvo28znitluRSQY1rFtvrfRgJMuf74Xd5DgXslofRNP
I0qfe2TVuECCmiPqNSoyjcgo954+m70V0C2noki9EXNDjRkcZVrhL/VQqbxp
I652xjCeeNAKQuqehclujUhfG+VU6dwKvmnLeWLRmzhzm+LN9FbYwaObHV7S
iNoKKaU1o63w3qoqfX9/I7Yobb1//mAbTPZKp3zdaETDiYRdfzf3X0cx+A/T
/iY8oBCQcPBHGzRFbY93kGnCYJXAzK+dbXCR6WX0mnoTKo9vGLEItkO6cUeE
uWkTqkTTJHs9b4ejjRfCxt2a0ACExA5mt0PQyfhgvegmVJ18dSCPpQPYfnAG
dJY04fbxuDfPH3eA3bqNr3p/E9qvnqsRJzpg7uHo16qNJiTn6ajT8nXCk6Kb
Xhf2N+Pk0eHWYdtOaBfJccuWacYLIccKBoY7QcXl0GepW81I/2qScf5mF+RO
enyMNW1Gh8+rMtyFXXD8xrKdkHszKrfs1lU72Q3hKTrWAdHNWJ/9TcAvrhs4
uKss95Y2Y5m08tfpzf+D03tpC9f+ZnxPCNzUiOqBlZ4gc3qaFgwM+pfRz06G
FwrbTd/vb8Fi/TwMvksGcoTp8zmZFkwwW5C7F0yGGzs6nhrdasHvw24PuYbI
UPT8gv6AaQuSHp3iqpfsBZn6OJ177i34b/m1tf37XoiW4nzQFN2Cq5RMXbFN
v7rf10ZLpbQF96vYnivj7gP31RGNov4WfLnsdv6mYR/QPbipLk9Dwu2+/8mX
5/aBeUG2WvJ+Er5hCI8T3tsPg8KHVMVOk3BG3yxX13DTvzp7KIXfIuEHb8Yz
VkX9UDG+pLj/JQkVHioFGvMNAKjpnP/qTsJKY8XF/94PQGJSJTDFbOaj7Nqa
1z4AApzScg6lJAzz/3uITY4CX98FnVrrJ6HsaREN3kAKbO/eJmVO04o9X3yk
+2gG4d05U8nx/a1okv5j46b+IIyHt4vpnW5FtqF4L8PqQdDefuFI561WjMsn
9PlPDkGdYZyw+stWrOukfH+66U8v1HIIVLm34smGk51nmIYh9bgN74WYVmTq
r3P68nYYDvuM7MsubcV54Q3Ph8PD8GP5BqfUQCuyHnH9+OPOCLDcz94TS9OG
5p3yP05WjIANIcwmdKANIxxeBRw5Mwozgh5MAafbUEib8Z/Bn0198mlp+97b
bVjgIF1POTQGraOPGFxfbsb/KK3wCRyDK1craek92pDH00ThBfs4ZP+R+mcZ
04a8HQqnH7iPgwR70MpsaRuKX9a9fm/7xKbf2bZoONCGAXakNg37CdjbaTLb
T9OON1W+VSpsTMDHs+1TWgfa0elyQtWu95t68KfCeOPpdqThSz6etDwJz7bG
DSvfbseXYTIM3BZT0P2Ug1L4sh2rPdxopBanQK3aulfOox29BNRU3slRoUBy
pCspph0F5+msfllSQWrTZouWtePu3b4ue7I39e5iVkvYQDt6KFCUs9eosE9L
uJGHtgMpfXwW389Mg2uue+2XAx2YWvA3LsBqGv4dXKrcKduBUw2HTArzNv2E
46My+9sdGEU6ILqFdgYGhiuKVl92oJG1ttTN8zNwW0Uq38yjA2m5pquj7Weg
LCEwZyymA5P3qhymLZ4B2T3bMnXLOjDT1UNPdessxL82Se0Y6MCgqhqfj5dm
gb+97e9N2k6cZDQoC3OaBe8zCgmVBzpxL+is+JfPAn1obIyCbCeeEaCI6O+Y
g9f0HFFZtzuxQj7y8vKVORg1sA4/YdaJMkNmN1Vc5uBe5XBIjEcn1hxNwtuV
c1AjcSNQMLYTLa8sM7HsnAf0zvLzL+tEvzL/rGdX5iF5XshnD6UTOxOv3NV1
nodDd929XWi7MGI49t9k6Tz4Zi+6b+HtwsTz/xroty7ADv5HLpayXfiVJZ4l
QGEBrOwrPs3e7kLutrX1GJuFTb96wsHQrAuZWX23iOUsgM6VQJt+jy7MP37c
f8/yAjTFbf2gFduFjTc47mlKLcLFXSZvG8u60NQkZXXxxSJkmre9UqZsxjuI
qQ1ELYJY6/mXhbTd6FiXf4OzbxGC5GJfyPF2I566I+C8bwnYgtkNk2S78d55
EsPxG0vgQGdtIKrRjUlBH1/scF6ChcfDumFm3WhbqLWyI28JnpRff8jj2Y2x
LjKvxeaWoF0s696X2G7s/MxNNji8DFc9he7uLO/GY9TjT1O1loGYdbtlT+lG
+rqVN7vcl+G4xuL1VdoeHEvji36ZtwzhmQ+vmvH2YIPFs5bGqWXg4K24Mibb
g4G8n1mO8a3AZ9sTl3Q1evAYZ3mIleoKrA0EKHSY9SDZJ5o7590KvLi8FW96
9uCBW8aKlIgVIMcYy1fG9iBXuc1/M/UroM7aJqNQ3oNC+wvEe1ZXoOTleeks
Sg/u5SipjhRahf1jzb7ctGTk/2ZacUllFZoDdny/xUpG02/KhlkvV8H96tlv
XgfIuNh/buHf91W4TGP+pVqUjBYyhrdZs1eB9m+UF6MsGQ+p6Z0a6V6FTN0u
D8XLZGxxHmX5TLMGZuy73W1vk/HugVd3p/jXQLz0omuOHhkDjRObOHANKBaW
n5dfknH54iO/f/fXIPhoopO0LRl1DzYw/nq3Bnc7Bz6aepCx93l+/XafNdjl
zu0YF0jG85OSg4cT16Dy7FX7kZjN+jocjvTla2A/bWcrnElGctyElD95Dc6E
pVk/KiPjcL5Y0fjCGiyqj38IbCHjiK/f5eWd65Cw9eD7tgEypifZ8ebzrcPT
9Fvv2GfJyOPaPnTh+DoIPvtscZ22F2PXD7s4KqxDB0/eazfWXsyErav2N9fh
W/WsefmBXqxvzeE8r7MOqtaHzRjEenGihV4033gdtv133/ScbC9qn9HX2fJ+
HfL7vIw/XO5FwdwR8o5P6/D2a8nzjNu92H6krajNcx1OXFw1nNfrxS/uCYJm
fuswtnjs2X9mvegSUOfaFrIOv37rPXlu24sp9hGMbJHr8EDLT/+3x//WG9ix
L3YdOJlr9CiBm/zUlZZWEtahPpdO92BsL8r3BQem/l0HF5NTj+5n9iLJnSNF
LXkdFASMHviVbc7vnptc9SZebwy539zSi1E2J5QkN3GKY7PWLkovLtb8drHa
jDc+tUNTdbYX6572XsvezH9kZPOIpO3DTwG2gpMx69D7w+x2MWsfTjwpLeHa
5OevEqVOy9uHlUKh0udC1+Hmv84bZ8T6MKOjzsnoxzowJ+66/la2D/+a2YUH
e69D6aOL11Iu96HFCcfpHud1sN5jqTp9uw+vSDxWP26zDqeLE5TFH/fhod/r
TgGv1mH29YDSU7M+FKDo5ws+W4eYw9yXf9n2oVia3+3q++vwuF31Yq9HH7q3
BBUGqa3DAVe7CweC+tDJgSc48Pw6kM6knb8b24fhvSvWtSfWwWtqDL9l9mEm
kwX1tNA6KIXyn60v68NT9UfP9e1Zhy03b51hJvWhb7igVA3dOmTRf5ZTovSh
1ZSQ6pbpNXiVmnvacbYPf6npz3/sXoNjT2ZP5dP245zy+0/alWswxH345Dpr
Pz5idnXySFuD0Mp7Uqd5+1FC2fwVX9gaaH3wOv5KrB/18eKHPe5rsOdYieQf
2X7sZiR1mVisQTV5RWLicj86zmxNkddZA0fvY+JHNPrxddz1He+V1+DsBT3R
x4/70VB652EpqTVYnvc9EmrWj1q19GVP96/Bn8hqkS7bfhxuH0g/SL8Ghnfp
DnF79iMd5UL8w7FVENx5SuhWUD86n71yVrRhFbqyDQW8YvvxqtYtimP6Knx/
EcJfndmPNdfLVsyDVuEafzMvY3k/Sq0PZKzZrwJjA+MBRVI/kicK5A4+XYVC
e+CxpfSj1Yf7bwZVV8FS2ow7Z7YfkyUzUe34KkgPRXIu0w4gxUnksg7HKkz4
drJLsw0g192v3PwrKxB5ZddeU94BTArd4HHrWoFHa4q748QGUHGYxiuWWAHu
+HdsI7IDyDHz5Ktt2Ao0PkhgEVYaQCs+xQ2WjyvgsmuA6ZHGAO44uJav8WQF
FAu5dgY+HsDX/SFB2ldWYMNclbHNbAAFeiNXhMVWIO2Q3TZ2uwG8wpJ5PJF5
BUxbUxmuew6gmJDph43JZTjyeWyLW9DmeI3/GHvdMvTL8dOVxw7grs/fn8wn
LkPghDoNQ9Ym35i8zGCvZbgV7PwPywdQfJpqz/FyGViv5669Jw1gLu3B81o3
lqGcbnYlnTKAphKMasbHl8E2WWR5bnYAe/P6KTd3L4Oc/r1FSToKHt4rt2/H
zBLMcnrNG7FRML2svM+7fgniyotno3gpyC5kyD6VuAQGlivTA2IUnB7f95TP
cwn4xI9R+eUoyNOy5Y2Q8RK0detO3lOioFyof9Y/1SXw8vQd99Wg4G32qu/x
YkugfL56tOkxBY/2idyQ2rkEDHO0I2zmFIxwPMrlObIIOb9ODqnYUbBV0W4j
v3QR3mgYUpw8Kah3TXdbxa9F+I8xpL8oiILlW/u5o+wXYSSzqZcmjoKRfprM
9x4tQpgRI1k+i4KJnbW/KLAIWrzQbVFOQSZ7XZ8L+xeBve5lZzKJgk7ZhXYW
m+d9rW1kO5VCQRmlnzS2LQvw6URnq9gcBen2iPvdT1qAcxQ20hO6Qcx54FTB
7LkAyz6KzeFsgyjI0kb2NFqApMvvGsm8gyiRmeA2eHkBnq/E1+8XH0RGgS9H
WYQXQDi2v/aO3CD6yMZu20a7AD33uWq+Kg1iYA2nXV3nPPixqlbVaQyi0Vjy
3NP0ebieb1vBpD+IR+y9Mhq+zMNOs9Syy+aDSFt1XXSH8TwUCo2VONhtxvt5
RbBu6qMPLXzFhOcgFs6BS5/QPJxyUi9cCxrEg/ITZ+w25mDqtHO+TNwghvDz
H5lsm4PfYzl55lmDeJbkliucPAePAmdyEssHUb9Pw+Kw+xzwXBPJHicNbq7f
6fZ5gzloprmXeXhwEB3S4l66nZsDt7+e6Xpzg6gzTN85uW8OLukVp4bQDaHO
9tc53HOzQMuxktzJNoSaL3mrmKtnIaNUIomLbwgzzRcrK37Ngtlb3T/q4kP4
KSXXU81qFkRFfRM85YY2/U39v6Dbs0DprIqrUhrCfNmVnakSsxDsThu7/c4Q
vt37H/FtU59q4MnoC/pD6PhS9SR0z8CumWdRNuZDKDxiZ5OQMgPlYcER2XZD
2Ov2gmbUdQbsbzWFL3kOoeRKmcik7gyc2cYYJhU8hD93ZlzIlp2B+fQzoSZx
Q7j0ZK5VfdcMJDx7GRybNYRTnszv04em4en+yMDh8iG00iY6hnKm4WBNh79Q
6xDCyLHs/i/T0GHN9uPh4BAqNbIvxT6dhi//KfoGzA3hxoF+mwtnp0G1/61P
K90w5kQ0aMfsnYZt3+K/7t01jHrmE4l9I1TIu9jvrcY3jMkMtHFjuVR4u8Tp
5So+jHmkT8GlX6jwX7SKR5ncMLroOIy9eUKFMS1bN/orw2hSd3XHP3kq/GJO
dcE7w6icdctFaxcV7ueNOr/XH8YVm3ARocop4DTlc0o3H8Zyh57si2ZTUCug
/nHObhiFDGpfCfBMgXOTk4Ok1zBS/QR5sgomQeFjjp1R8DA+OdoQuPfZJKye
mrGJitvMf4mJ48SuSUgZOWQ9kDWMYzy8BfvSJ8DYX+sDf8UwVlJkGeq0J0BE
1dPyXuswTkqe1NdgmIDef0VvfQeHMVBc1D0lZhz8EpffNM0N4z2uPZemro/D
TR2J12xbRvDdH+V3jEtjwLxX11xl1wjeKmE5xhg0BsXF31868Y2gSkOH06zC
GFi/qTIpEh9BSaKpuHpkFE4doTWmkR/BLBLLmUCPUZhul34uf2UEbQda7xlI
j0KM6zNDizsjSApfjPqvYwR0Ifhpsv4Ijnq0pdPajsABaqMB1XwE1egKpbsO
jQApdLu+mP0IxvbMtpZXDYPHzTN6T7xGkDmt9Gn1y2FQYnipEx48gj6v6rMm
uIaBNi3iITluBGX+zMZK5g1B1pMO7f3ZI7jP+7VgwOMheLWP7f6dihFk1d7P
dJJpCMSrLmh9bR3Bpl/Sd+iTBmHow9u7dYMjqMSausqkOQjBx+I1mOZHUDrp
ytgt2kG429t36/KWUdxGY7aPEkWBPV841R12jeJ+5sC3hBoFKi+o3CD4RtH8
wsW5iaUBcFywUVsTH8WlcweNzUIH4GxUylUZ+VFkzj9XcvvKACzeHVUxvzKK
yU+vVQbO9sOfnXzKiXdG0fQSoXA1sB+e5txUGtcfRYjlGXp+qR8EjZ0uHX41
ilyyF+/TzfRBF3+Oop79KHIXk+R3BfbBt4ZphRCvUTybbskYcrkPrjkcOt8Z
PIqFgfeOJ8/1wraTWsgVP4pRuv5sN0N7IX/IA9SzRzFhrIFie7UXLP2K5D0r
RvHB86h2xTUynFBelq1qHUUWkafrYdFkmFgTP719aBSPN6Rg6F0yRMbrnLow
P4r6ivLvzjOS4cHD79I2W8Zw5spGAZdZD3DvrjqRvWsMl2yvKG1t7ob6Qprj
S3xjqMhx/dAdmW5weSUtKSUxhvcva0pzBHaBosgzCRP5MTSQDGy4vKUL1luD
xGKvjCHPawm+pWedkPa58ejwnTFUMfg7K9rUAcby248IGYyhoXVZ9xh0wJFJ
eZGHr8bQ1/674NmYdugPNhUOsB/DsOvv0sW428H/eoRgq9cYPnhRrZjl1Aa3
tnQc3Bsyhj+udQlNL7cCaworv1r8GDapzGs3GbVCqf4FXtfsMRTf7RH7rJcE
tlxv95dVjOHFRz/NMzRIcLoibh992xj+17m3qri2BWYt+7hwaAw/Oim9+qrU
AnHinJzv58ew8Xdtz5HiZnjco8yevmUcRR0lD38+3wx8XjZ75naNo7d3B2dG
fhOQzqfskuQfR8GvksKZ55vAa26E1UhiHNv+RZh5FjeCcgQvS5T8OBaw726C
K42w5c5NpoEr49jHRFtcWtcAOYxOO/jvjuNfa1kz8bsN8Core/s9g3FMeH8j
07S/Ho49n97q+2ocxR9oCvsY18MI7yGGJvtxjIj8PeW/XgehdZpb2LzHMXY1
l8HBrQ607DxoVULGcaexzNZrfHXALlW08Sl+HG/pFjmuPK6FasrSemH2OJJf
pNgf8KqBT9/F1zYqxrGu2efDVqIazirprMi1jWPy+NM7yTNVsLzis/RmaByP
agQ8FT5SBUmxlQtJ8+OYeWDkrYZuJRhq08xPbZnAYhatskuhFSDMJj0runsC
7Z69YJ7tK4eu/KfTBvwTKE26ZnXrcDl8NwuaCpOYQBG/k3XPTMvgunDjRI/8
BB5kbJWTyC0FRtK2cR7lCTymOGPzg6UUCp3kRzXuTuA1rvGR3zol8EHWdPiL
wQR+4XK6djuzGKTHfw3WvppAo42o/X7sxTAV2D6w02EC3yoI3zA0L4LIa6z9
l7wnMJI26nNxSyE8or3Qax8yge+VAv8FyxcCT5JFT178BF4ZEnGa+VUAjXpx
XavZEzhYxxuZvLsA3Dj6Ok5VTmDsAzbHLrt8UCzjaDdrm8Cnac4HdBcI2Hir
3JowNIFnQrb2yT8nIEPUpmVsfgI5Ds1PFdbkgWlXcpMI/ST+8N9W5F6eC6Ie
Iw26uydxzoQuvrgiByjIWx/MP4kDPo+CbzZkQ+DMjdoOiUmUPXyHXZCcBRrh
n6o5z2ziqUx+3rlMYL2dXXlTeRIv+rQ9l2DJhPJt0+UedyfxarOCyhmJDLDP
EC6rNJjEtK0WqSfU00HOULNk2+tJ3JZocXfFOg3m93sUKThMonD4xYC3f1Ih
rqawwNp7Eq85n4n0G04BA5slIitkEmMj1AzPC6fAwePieYvxk5i4IfxbyyAZ
2vof5ZzImUTRXualqvgk+PLNJ8u4chJthJqrPqz+BdVLlRkxbZN439nE5pbq
X2BY3kgbGppE11jr23LhfyAvWipVcGESd5yMsOeg+QNv7j1NfkA/hXL0mSdq
HibCfyxBf/13T2Gr5me+L64JMJbXkEjin0L9mJRPPQ/jIcx0W8KeY1M42GfJ
qAZxcF9QPu7amSl8cPvv0SShWGBvNolxUZ7CImsWX9KeGKj9+Ot36d0pvGR9
+5jrzmhwlmmP3PJkCl0tJRlDdv6Gc6MsEWdfT6H1EU+7vj1RsOqvEG7pMIUN
edpf+YQiIUXV4mea9xRaKSnHicpHwPON2JDZkCncb7kY2ar1C0T+9AYdS5jC
kmvLb6bswqFHhyPQMGcKw459hzN/wsBvr7J/ZOUUolDu44jBn3CzxNqvv20K
xWwk5lcFfsJOi+TvfMObfD+Zf/v3OBSKj4x801qYwn7dq3t9E0Igd4KlQpmO
ihL/8D3vRjAEXDxS/pSRip/fr5gZxQSBRbBC2Sc2Kr6+cVUmXTcQ1Jful/7i
pKLB04M3CkQC4Ph1i5JCXipu3RXCdnLxB7BEexf3ClOxOn6XU0W9H4zSxRVt
iFFxx2J2CH+aL5RplRYekKLiMSvl3K6I7xCe3FsgJ0dFhu8yb4gQH7BhXsu/
e56KB16oMrwL/wba+hz5b5SoGH1slZrw5yvI5kkS39SomFDsxC1U9gU4uJTz
kjQ2+Q7wn/MZ8oYZk8e59dpU1L337mgBqzfUlVvnTD2molySopAWekGswI9s
5udU/PlHUlz4rSc4WSZniZpTkS03aSrUzAP0m2oylSypOPitZ+o0vTucFx/J
MLCjouVl+8PeYa7A+3FLhqMzFdd0/1MVv+4Ca90H0sM8N/mR/R3fMX2G1lMy
afnfNzHTizjRZidI9ryR2hNERRfNrL7c6E/gPWKUsv6Liq6CI5bZrh/hxflP
yTxxm/k0W1xS3jnCFf/QpNPJVHRoYVs6Y+4Ah+ay/mpkUTGPWcxs3MIe6FVb
/rwqoGIJ59vXmk52QP5FTfxSTsXIY0fkhH7aQva/HYl/6qh4sL3/73CxDfzQ
EE6oJVHxvknShvegNbxOPBs/0U3F47GRPPk3reAGo2bczsHN/as3J/1peA+S
OuaxRyY2+RAGuqM6lsCU5R5zaY6KdXGVGQFb3sHwnt/Rj1ep6NbR+E842QJK
jAp/29NNIz65dnHY7A38LO6KCmWcxqPC9lZXzr8GK96lyDy2adymkJgSwPsK
NN/sjuzinMYjQk6ap7ebg0ydWMQq7zR2d/ya59p4CXuPXPrFfWgaX4+41+jT
vQSq7aPwU+LTaPbo+q2AXaZQ024ZdktqGv/vfQfzelmJm8/+H/4fDKc6nQ==

            "]]}, "Charting`Private`Tag#9"], 
         Annotation[{
           Hue[0.7946117974981064, 0.6, 0.6], 
           Directive[
            PointSize[
             Rational[1, 360]], 
            RGBColor[0.827051, 0.418034, 0.0243459], 
            CapForm["Butt"], 
            AbsoluteThickness[3]], 
           Line[CompressedData["
1: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
            "]]}, "Charting`Private`Tag#10"]}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {All, All}, "Frame" -> {{None, None}, {None, None}}, 
          "AxesOrigin" -> {0, 0}, "ImageSize" -> {576, 576/GoldenRatio}, 
          "Axes" -> {False, False}, "LabelStyle" -> {}, "AspectRatio" -> 
          GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.827051, 0.418034, 0.0243459], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0., 0.7, 0.7], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.94, 0.462, 0.162], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.46056, 0.40064, 0.81392], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.09096, 0.6296, 0.85532], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.62168, 0.2798, 0.6914], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.448, 0.69232, 0.1538], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.91, 0.318, 0.243], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.97, 0.606, 0.081], 
             CapForm["Butt"], 
             AbsoluteThickness[3]], 
            Directive[
             PointSize[
              Rational[1, 360]], 
             RGBColor[0.34398, 0.49112, 0.89936], 
             CapForm["Butt"], 
             AbsoluteThickness[3]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          SmoothHistogram, "GroupHighlight" -> False|>|>, 
       "DynamicHighlight"], {{}, {}}}, {
     DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {False, False}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
       DisplayFunction :> Identity, Frame -> {{None, None}, {None, None}}, 
      FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> {{
         StrokeForm[
          Opacity[0]], 
         StrokeForm[
          Opacity[0]]}, {Automatic, None}}, 
      FrameTicks -> {{Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , None}, {
        Charting`FindScaledTicks[
          (Charting`SimpleTicks[#, #2, 6]& )[
           SlotSequence[1]], {Identity, Identity}]& , None}}, 
      GridLines -> {None, Automatic}, GridLinesStyle -> Directive[
        GrayLevel[0.4, 0.5], 
        AbsoluteThickness[1], 
        AbsoluteDashing[{1, 2}]], ImageSize -> Large, 
      Method -> {
       "OptimizePlotMarkers" -> True, "IncludeHighlighting" -> "CurrentSet", 
        "HighlightStyle" -> Automatic, "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Identity[
             Part[#, 1]], 
            Identity[
             Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.02]}}, Ticks -> {Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& , 
        Charting`FindScaledTicks[
         (Charting`SimpleTicks[#, #2, 6]& )[
          SlotSequence[1]], {Identity, Identity}, RotateLabel -> 0]& }}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         RGBColor[0.34398, 0.49112, 0.89936], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.97, 0.606, 0.081], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.91, 0.318, 0.243], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.448, 0.69232, 0.1538], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.62168, 0.2798, 0.6914], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.09096, 0.6296, 0.85532], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.46056, 0.40064, 0.81392], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.94, 0.462, 0.162], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0., 0.7, 0.7], 
         CapForm["Butt"], 
         AbsoluteThickness[3]], 
        Directive[
         RGBColor[0.827051, 0.418034, 0.0243459], 
         CapForm["Butt"], 
         AbsoluteThickness[3]]}, {
       "$", "computational", "Typeset", "\[CloseCurlyQuote]s", "Wolfram", 
        "essay", "essays", "input", "Language", "\:2715"}, 
       LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}, {False, Automatic}, {
         False, Automatic}, {False, Automatic}}, 
       Joined -> {True, True, True, True, True, True, True, True, True, True},
        LabelStyle -> {}, LegendLayout -> "Column"]], {{0.15, 0.8}}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.91048626908584*^9, 3.910680572211854*^9},
 CellLabel->
  "Out[313]=",ExpressionUUID->"e908528b-a0f8-45d6-8211-bcc0619255b2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WordCloud", "[", 
  RowBox[{
   RowBox[{"DeleteStopwords", "[", "webpage", "]"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]], "Input",
 CellLabel->
  "In[314]:=",ExpressionUUID->"00f1b415-b9af-4307-8657-569072808cfb"],

Cell[BoxData[
 GraphicsBox[{InsetBox[
    StyleBox["\<\"Computational\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.15794550277308897`],
     FontColor->RGBColor[0.880722, 0.611041, 0.142051]], {0, 0}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Typeset\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.12590857418443627`],
     FontColor->RGBColor[0.560181, 0.691569, 0.194885]], {-11.5, 29.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"Language\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08767094973991527],
     FontColor->RGBColor[0.363898, 0.618501, 0.782349]], {5.5, -27.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"DPClash.MilitaryConflictE.English\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.4567336004533182, 0.4884598397280091, 0.85]], {-0.5, 47.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Essays\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0856040511212925],
     FontColor->RGBColor[1, 0.75, 0]], {-0.5, -49.5}, Center, Automatic], 
   InsetBox[
    StyleBox["\<\"Wolfram\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.08973784835853801],
     FontColor->RGBColor[0.772079, 0.431554, 0.102387]], {-0.5, 61.5}, Center,
     Automatic], InsetBox[
    StyleBox["\<\"Essay\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.09077129766784939],
     FontColor->RGBColor[0.528488, 0.470624, 0.701351]], {-20.5, -67.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"$\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.24475524475524477`],
     FontColor->RGBColor[0.368417, 0.506779, 0.709798]], {-65.5, -47.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"input\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.07526955802817872],
     FontColor->RGBColor[0.647624, 0.37816, 0.614037]], {74.5, 27.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"computer\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054600571841951155`],
     FontColor->RGBColor[
      0.5833680111493557, 0.4126186601628758, 0.8290799721266107]], {9.5, 80.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Dynamic\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058734369079196665`],
     FontColor->RGBColor[0.736782672705901, 0.358, 0.5030266573755369]], {66.5, -50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"allassumptions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[0.7678998606330495, 0.7317110956258943, 0.]], {-0.5, -86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"assumptions\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04426607874883737],
     FontColor->RGBColor[
      0.8613800418100862, 0.48092002787339083`, 0.02824203762907758]], {45.5, -68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"English\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.058734369079196665`],
     FontColor->RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]], {82.5, -25.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"EnglishCivilWar\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.9840111653093676, 0.677555826546838, 0.04316985366470745]], {-11.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"MilitaryConflict\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.9603267270590103, 0.5591336352950514, 0.10711783694067224`]], {-0.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"immediately\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[
      0.8168067340273636, 0.3521386531945273, 0.3761554432877274]], {77.5, 56.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"notebooks\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0525336732233284],
     FontColor->RGBColor[0.5407932311309059, 0.715, 0.09762679674248334]], {-80.5, 57.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"querystate\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[
      0.9637822400302223, 0.5764112001511111, 0.0977879519184]], {-93.5, 22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Technology\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.26512246998569167`, 0.6229020240114467, 0.73314696398283]], {70.5, 68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"knowledge\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8774935098648088, 0.34000129802703827`, 0.2750108168919853]], {1.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"languages\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.8781534541180211, 0.4921023027453475, 0.04333810870621905]], {-61.5, 76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"things\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.048399875986082884`],
     FontColor->RGBColor[0.7748409210981391, 0.358, 0.4444755060028629]], {-92.5, 36.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Mathematica\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.845266573755366, 0.437100139366951, 0.03816643438841502]], {57.5, 89.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"open\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054600571841951155`],
     FontColor->RGBColor[
      0.8439466852489265, 0.3467106629502147, 0.3309221912517893]], {-94.5, -21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"possible\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[
      0.9052934053395919, 0.510195603559728, 0.06776406480563275]], {61.5, -81.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"understand\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[0.47929071933511125`, 0.715, 0.1759027208462221]], {-0.5, 107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"word\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0618347170071308],
     FontColor->RGBColor[0.915, 0.3325, 0.2125]], {-98.5, -36.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"Example\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.7658565873730018, 0.358, 0.4582975578876895]], {91.5, 41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"sometimes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.8335801463353031, 0.3487839707329394, 0.3481997561078282]], {-0.5, -108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"November\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[0.6897400905885174, 0.358, 0.5753998606330502]], {-67.5, -87.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"notebook\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04219918013021461],
     FontColor->RGBColor[0.5472001045252132, 0.43417993728487203`, 0.85]], {-97.5, -54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Assuming\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03496503496503497],
     FontColor->RGBColor[
      0.9107287510704583, 0.33890687339431275`, 0.20182187767614543`]], {-67.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Students\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[0.7132613816472081, 0.358, 0.5392132590042952]], {51.5, 100.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"actually\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.7896667828057927, 0.3575666434388414, 0.4213886953236787]], {52.5, -95.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"ordinary\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.7042770479220728, 0.358, 0.5530353108891188]], {-48.5, 99.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"name\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054600571841951155`],
     FontColor->RGBColor[0.8996399512215667, 0.7463488834690629, 0.]], {-55.5, -97.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Express\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.15725938678540247`, 0.715, 0.5857607804549424]], {107.5, -38.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"planets\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8633598745697435, 0.40996018814538476`, 0.08339968642435877]], {44.5, -106.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"writing\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[0.38354466123747527`, 0.5323732032575149, 0.85]], {98.5, -63.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"just\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.05046677460470564],
     FontColor->RGBColor[
      0.8857244243136628, 0.3764133635295058, 0.1393110607841571]], {111.5, 19.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"History\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.6102054708420535, 0.39696347534213544`, 0.7619863228948663]], {-88.5, -76.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Civil\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.060801267697819426`],
     FontColor->RGBColor[
      0.9728288904374106, 0.621644452187053, 0.07336199581899142]], {-42.5, -111.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"output\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[0.9307395679624266, 0.7498043964402695, 0.]], {-0.5, 117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"query\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[
      0.35558897405758294`, 0.5505288207539337, 0.8417067688690995]], {-0.5, -117.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"War\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.06286816631644218],
     FontColor->RGBColor[0.571589, 0.586483, 0.]], {-41.5, 111.5}, Center, 
    Automatic], InsetBox[
    StyleBox["\<\"code\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.053567122532639774`],
     FontColor->RGBColor[
      0.9324333565611593, 0.5282889043741062, 0.0921900209050434]], {43.5, 113.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CloseCurlyQuote]s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.10317268937958593`],
     FontColor->RGBColor[0.922526, 0.385626, 0.209179]], {93.5, -82.5}, 
    Center, Automatic], InsetBox[
    StyleBox["\<\"People\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.4177882075393331, 0.715, 0.25417864494993975`]], {-102.5, 68.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"RowBox\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[0.7175796237092107, 0.7261199581899123, 0.]], {-101.5, -65.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Science\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[0.7513196300394465, 0.358, 0.48066210763162087`]], {34.5, -120.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Entity\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.19193353076984873`, 0.681453175384121, 0.6453202369238185]], {95.5, 75.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Way\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04426607874883737],
     FontColor->RGBColor[
      0.6184987019729621, 0.39212575718243875`, 0.7412532450675947]], {121.5, -23.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"write\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04943332529539426],
     FontColor->RGBColor[
      0.9874666782805795, 0.6948333914028977, 0.033839968642435214`]], {115.5, -50.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"years\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.969373377466199, 0.6043668873309952, 0.08269188084126262]], {119.5, 29.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"boxes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[
      0.8878600487784333, 0.33792799024431336`, 0.2577332520359445]], {-21.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"desc\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.0525336732233284],
     FontColor->RGBColor[
      0.6753413537738198, 0.3589675436319385, 0.5991466155654507]], {10.5, 127.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"true\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.054600571841951155`],
     FontColor->RGBColor[
      0.28240003484173815`, 0.6090799721266095, 0.7538800418100857]], {-82.5, 98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"using\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8949268664259606, 0.5032845776173072, 0.05843417978336459]], {-125.5, -22.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"point\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.9986489531525362, 0.7507447657626809, 0.0036478264881522893`]], {-30.5, -124.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"like\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.057700919769885284`],
     FontColor->RGBColor[
      0.838355547812947, 0.44746667828057946`, 0.0208888695323676]], {85.5, -98.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"human\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.3103557220216354, 0.5867154223826917, 0.7874268664259625]], {9.5, -129.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"instead\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.7989994773739094, 0.735166608597101, 0.]], {-106.5, 77.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"easy\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[
      0.9784200278733908, 0.649600139366954, 0.058265924741844846`]], {-70.5, 108.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Gogh\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8510135028964549, 0.47400900193096995`, 0.018912152606809424`]], {-124.5, 32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Makes\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.9492067688690977, 0.5394711792460651, 0.10728609198218791`]], {-76.5, -107.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"story\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.2198892179497479, 0.6590886256402017, 0.6788670615396974]], {-121.5, 45.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"New\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04633297736746013],
     FontColor->RGBColor[
      0.16397784358994957`, 0.7038177251280403, 0.6117734123079395]], {125.5, 37.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"course\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.5788038738141875, 0.715, 0.049249615145579635`]], {58.5, 78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"make\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[
      0.23716678280579248`, 0.645266573755366, 0.699600139366951]], {40.5, 125.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Want\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[0.2187618985811806, 0.715, 0.5074848563512248]], {101.5, 84.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cloud\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[0.428777913273419, 0.5052332520359486, 0.85]], {122.5, 48.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"book\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04013228151159186],
     FontColor->RGBColor[
      0.9038177251280404, 0.3492734123079395, 0.18454431282010084`]], {90.5, 96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"world\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.6672593867853922, 0.7205288207539324, 0.]], {-51.5, 123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"don\[CloseCurlyQuote]t\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8926354502560807, 0.366046824615879, 0.15658862564020168`]], {73.5, 110.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Good\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.8607200975568693, 0.34335598048862614`, 0.30296650407188447`]], {75.5, -112.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Form\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[0.8493197142977551, 0.7407577460330839, 0.]], {-92.5, -96.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"use\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04943332529539426],
     FontColor->RGBColor[0.47401116530937026`, 0.47809330081437784`, 0.85]], {-54.5, -123.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"say\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[
      0.6536293927965667, 0.37163285420200276`, 0.6534265180085832]], {-129.5, -32.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Work\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.6453361616656581, 0.37647057236169945`, 0.6741595958358548]], {-17.5, 133.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2023\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.8342400905885153, 0.4628267270590103, 0.0038160815296638794`]], {18.5, 135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Data\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04219918013021461],
     FontColor->RGBColor[
      0.8564488486273256, 0.42032672705901153`, 0.06612212156831418]], {123.5, 59.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"Let\[CloseCurlyQuote]s\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.3383114092015346, 0.5643508726387724, 0.8209736910418415]], {-103.5, 86.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"start\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.9046334610863751, 0.334573307782725, 0.22977756485604156`]], {-20.5, -135.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"cells\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03909883220228048],
     FontColor->RGBColor[
      0.596786740995709, 0.404791067752503, 0.7955331475107271]], {65.5, -40.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2017\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[0.5019668524892619, 0.46131988850644284`, 0.85]], {40.5, -131.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"read\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.6319174318193065, 0.38429816477207124`, 0.7077064204517338]], {115.5, -74.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"text\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04219918013021461],
     FontColor->RGBColor[0.9810598048862722, 0.7553955338762525, 0.]], {-126.5, 54.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\:2715\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.060801267697819426`],
     FontColor->RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85]], {-112.5, -78.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"pm\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[0.529922539669161, 0.44454647619850335`, 0.85]], {-41.5, -41.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"idea\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[0.31827505306025683`, 0.715, 0.3808317506505822]], {-129.5, -44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CloseCurlyQuote]re\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.043232629439525994`],
     FontColor->RGBColor[0.37977756485605163`, 0.715, 0.3025558265468435]], {62.5, -121.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CloseCurlyQuote]ve\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.04116573082090324],
     FontColor->RGBColor[0.6361597700445392, 0.7170733077827265, 0.]], {64.5, 119.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"run\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.8064401951137368, 0.3542119609772526, 0.39343300814377197`]], {-82.5, 44.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"\[CloseCurlyQuote]m\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.922066817647527, 0.5213778784316846, 0.08286013588277422]], {-134.5, 21.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"6\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03599848427434634],
     FontColor->RGBColor[
      0.6670481226429111, 0.3638052617916352, 0.6198796933927223]], {-121.5, 0.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"2\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[0.7277983389807635, 0.358, 0.5168487092603637]], {115.5, 69.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"4\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.9930578157165594, 0.7227890785827968, 0.01874389756528967]], {-69.5, 116.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"1\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.038065382892969096`],
     FontColor->RGBColor[
      0.8745421494417032, 0.39318677583744527`, 0.11135537360425793`]], {129.5, -37.5},
     Center, Automatic], InsetBox[
    StyleBox["\<\"n\"\>",
     StripOnInput->False,
     FontSize->Scaled[0.03703193358365772],
     FontColor->RGBColor[
      0.5750747800184488, 0.4174563783225715, 0.8498130499538777]], {-37.5, -50.5},
     Center, Automatic]},
  DefaultBaseStyle->{"Graphics", FontFamily -> "Source Sans Pro"},
  ImageSize->Large,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRange->{{-143., 143.}, {-143., 139.}}]], "Output",
 CellChangeTimes->{3.9104862709319477`*^9, 3.9106805741410446`*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"e53136df-890a-4e4f-b9bd-138f06a9f35a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Resource Functions", "Title",
 CellChangeTimes->{
  3.910680257862111*^9},ExpressionUUID->"41bbe1c0-a3f5-4412-bb15-\
af540507245d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<ReadabilityScore\>\"", "]"}], "[", 
  "webpage", "]"}]], "Input",
 CellLabel->
  "In[319]:=",ExpressionUUID->"d750286b-24a8-49a0-9093-2119389f0047"],

Cell[BoxData["11.654771759339742`"], "Output",
 CellChangeTimes->{{3.910680611686552*^9, 3.9106806160972557`*^9}},
 CellLabel->
  "Out[319]=",ExpressionUUID->"f72d9189-b3f7-42f5-8d34-386dd60e2fd8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<SynonymGraph\>\"", "]"}], "[", 
  RowBox[{"\"\<compute\>\"", ",", "1", ",", 
   RowBox[{"ImageSize", "->", "Full"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9104883965896215`*^9, 3.9104883975000424`*^9}, {
  3.910680623807249*^9, 3.9106806391470776`*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"e1199366-36bf-42d8-bfd1-f381cbaedd19"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{
      "compute", "calculate", "cipher", "cypher", "figure", "reckon", 
       "work out"}, {{{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {2, 
       3}, {2, 1}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {3, 2}, {3, 1}, {3, 4}, {3,
        5}, {3, 6}, {3, 7}, {4, 2}, {4, 3}, {4, 1}, {4, 5}, {4, 6}, {4, 7}, {
       5, 2}, {5, 3}, {5, 1}, {5, 4}, {5, 6}, {5, 7}, {6, 2}, {6, 3}, {6, 
       1}, {6, 4}, {6, 5}, {6, 7}, {7, 2}, {7, 3}, {7, 1}, {7, 4}, {7, 5}, {7,
        6}}, Null}, {ImageSize -> Full, VertexLabels -> {"Name"}}]]}, 
    TagBox[GraphicsGroupBox[{
       {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
        ArrowBox[
         BezierCurveBox[{{-0.7818314824680302, 
          0.6234898018587343}, {-0.45282935953842945`, 
          0.9403098540776956}, {-7.044813998280222*^-16, 1.}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.7818314824680302, 0.6234898018587343}, {
          2.459777872603388*^-15, 0.8806197081553856}, {0.7818314824680294, 
          0.6234898018587326}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.7818314824680302, 0.6234898018587343}, {
          0.2356668523792619, 0.4893672614283907}, {
          0.9749279121818237, -0.2225209339563155}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.7818314824680302, 0.6234898018587343}, {
          0.0767092510300695, 0.0611735863775789}, {
          0.43388373911755884`, -0.9009688679024196}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.7818314824680302, 
          0.6234898018587343}, {-0.3571744880874902, -0.08152274612460811}, \
{-0.43388373911755757`, -0.9009688679024187}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.7818314824680302, 
          0.6234898018587343}, {-0.7392610598025614, 
          0.16873151277067913`}, {-0.9749279121818235, \
-0.22252093395631342`}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-7.044813998280222*^-16, 1.}, {-0.3290021229296055, 
          0.6831799477810372}, {-0.7818314824680302, 0.6234898018587343}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-7.044813998280222*^-16, 1.}, {0.45282935953843384`,
           0.9403098540776919}, {0.7818314824680294, 0.6234898018587326}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-7.044813998280222*^-16, 1.}, {0.6884962119176877, 
          0.5490574073506984}, {0.9749279121818237, -0.2225209339563155}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-7.044813998280222*^-16, 1.}, {0.529538610568497, 
          0.12086373229988458`}, {
          0.43388373911755884`, -0.9009688679024196}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-7.044813998280222*^-16, 1.}, {
          0.09565487145093808, -0.021832600202307047`}, \
{-0.43388373911755757`, -0.9009688679024187}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-7.044813998280222*^-16, 1.}, {-0.286431700264135, 
          0.22842165869298753`}, {-0.9749279121818235, \
-0.22252093395631342`}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.7818314824680294, 0.6234898018587326}, {
          4.1627010151749695`*^-15, 
          0.36635989556208043`}, {-0.7818314824680302, 0.6234898018587343}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.7818314824680294, 0.6234898018587326}, {
          0.32900212292959924`, 0.683179947781042}, {-7.044813998280222*^-16, 
          1.}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.7818314824680294, 0.6234898018587326}, {
          1.0174983348472917`, 0.23223735513173438`}, {
          0.9749279121818237, -0.2225209339563155}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.7818314824680294, 0.6234898018587326}, {
          0.858540733498098, -0.19595631991907375`}, {
          0.43388373911755884`, -0.9009688679024196}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.7818314824680294, 0.6234898018587326}, {
          0.42465699438054083`, -0.33865265242126363`}, \
{-0.43388373911755757`, -0.9009688679024187}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.7818314824680294, 0.6234898018587326}, {
          0.04257042266546708, -0.08839839352597016}, {-0.9749279121818235, \
-0.22252093395631342`}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{
          0.9749279121818237, -0.2225209339563155}, {-0.04257042266547126, \
-0.08839839352597031}, {-0.7818314824680302, 0.6234898018587343}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.9749279121818237, -0.2225209339563155}, {
          0.2864317002641365, 0.2284216586929835}, {-7.044813998280222*^-16, 
          1.}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.9749279121818237, -0.2225209339563155}, {
          0.7392610598025631, 0.16873151277067933`}, {0.7818314824680294, 
          0.6234898018587326}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.9749279121818237, -0.2225209339563155}, {
          0.8159703108326303, -0.6507146090071272}, {
          0.43388373911755884`, -0.9009688679024196}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.9749279121818237, -0.2225209339563155}, {
          0.38208657171507215`, -0.7934109415093157}, {-0.43388373911755757`, \
-0.9009688679024187}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{
          0.9749279121818237, -0.2225209339563155}, {-4.502311739671247*^-15, \
-0.543156682614025}, {-0.9749279121818235, -0.22252093395631342`}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{
          0.43388373911755884`, -0.9009688679024196}, {-0.42465699438054055`, \
-0.33865265242126247`}, {-0.7818314824680302, 0.6234898018587343}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{
          0.43388373911755884`, -0.9009688679024196}, {-0.09565487145093898, \
-0.021832600202305888`}, {-7.044813998280222*^-16, 1.}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.43388373911755884`, -0.9009688679024196}, {
          0.35717448808748925`, -0.08152274612461502}, {0.7818314824680294, 
          0.6234898018587326}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{0.43388373911755884`, -0.9009688679024196}, {
          0.5928413404667515, -0.47277519285160996`}, {
          0.9749279121818237, -0.2225209339563155}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{
          0.43388373911755884`, -0.9009688679024196}, \
{-3.0718648392379756`*^-16, -1.0436652004046116`}, {-0.43388373911755757`, \
-0.9009688679024187}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{
          0.43388373911755884`, -0.9009688679024196}, {-0.3820865717150698, \
-0.7934109415093168}, {-0.9749279121818235, -0.22252093395631342`}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.43388373911755757`, -0.9009688679024187}, \
{-0.8585407334980958, -0.19595631991907456`}, {-0.7818314824680302, 
          0.6234898018587343}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.43388373911755757`, -0.9009688679024187}, \
{-0.5295386105684982, 0.12086373229988297`}, {-7.044813998280222*^-16, 1.}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.43388373911755757`, -0.9009688679024187}, \
{-0.07670925103006852, 0.06117358637757707}, {0.7818314824680294, 
          0.6234898018587326}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.43388373911755757`, -0.9009688679024187}, {
          0.15895760134919742`, -0.3300788603494148}, {
          0.9749279121818237, -0.2225209339563155}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.43388373911755757`, -0.9009688679024187}, \
{-8.294035065942534*^-15, -0.7582725354002287}, {
          0.43388373911755884`, -0.9009688679024196}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.43388373911755757`, -0.9009688679024187}, \
{-0.8159703108326319, -0.6507146090071223}, {-0.9749279121818235, \
-0.22252093395631342`}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.9749279121818235, -0.22252093395631342`}, \
{-1.0174983348472895`, 0.23223735513174015`}, {-0.7818314824680302, 
          0.6234898018587343}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.9749279121818235, -0.22252093395631342`}, \
{-0.6884962119176867, 0.5490574073507006}, {-7.044813998280222*^-16, 1.}}], 
         0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.9749279121818235, -0.22252093395631342`}, \
{-0.23566685237926463`, 0.4893672614283894}, {0.7818314824680294, 
          0.6234898018587326}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.9749279121818235, -0.22252093395631342`}, \
{-1.0038938338456148`*^-15, 0.09811481470139562}, {
          0.9749279121818237, -0.2225209339563155}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.9749279121818235, -0.22252093395631342`}, \
{-0.1589576013491947, -0.3300788603494162}, {
          0.43388373911755884`, -0.9009688679024196}}], 0.02220329551621769], 
        ArrowBox[
         BezierCurveBox[{{-0.9749279121818235, -0.22252093395631342`}, \
{-0.5928413404667509, -0.47277519285160513`}, {-0.43388373911755757`, \
-0.9009688679024187}}], 0.02220329551621769]}, 
       {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
        0.7]}], {
         DiskBox[{-0.7818314824680302, 0.6234898018587343}, 
          0.02220329551621769], 
         InsetBox["\<\"compute\"\>", 
          Offset[{2, 2}, {-0.7596281869518126, 0.645693097374952}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-7.044813998280222*^-16, 1.}, 0.02220329551621769], 
         InsetBox["\<\"calculate\"\>", 
          Offset[{2, 2}, {0.022203295516216987, 1.0222032955162177}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.7818314824680294, 0.6234898018587326}, 
          0.02220329551621769], 
         InsetBox["\<\"cipher\"\>", 
          Offset[{2, 2}, {0.804034777984247, 0.6456930973749503}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.9749279121818237, -0.2225209339563155}, 
          0.02220329551621769], 
         InsetBox["\<\"cypher\"\>", 
          Offset[{2, 2}, {0.9971312076980414, -0.2003176384400978}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{0.43388373911755884`, -0.9009688679024196}, 
          0.02220329551621769], 
         InsetBox["\<\"figure\"\>", 
          Offset[{2, 2}, {0.45608703463377653, -0.8787655723862019}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.43388373911755757`, -0.9009688679024187}, 
          0.02220329551621769], 
         InsetBox["\<\"reckon\"\>", 
          Offset[{2, 2}, {-0.4116804436013399, -0.878765572386201}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}, {
         DiskBox[{-0.9749279121818235, -0.22252093395631342`}, 
          0.02220329551621769], 
         InsetBox["\<\"work out\"\>", 
          Offset[{2, 2}, {-0.9527246166656058, -0.20031763844009573}], 
          ImageScaled[{0, 0}],
          BaseStyle->"Graphics"]}}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Full]], "Output",
 CellChangeTimes->{
  3.9106805792382193`*^9, {3.910680626477107*^9, 3.9106806394763584`*^9}},
 CellLabel->
  "Out[321]=",ExpressionUUID->"57f05b44-721a-46f9-a157-f4d1316ed9aa"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 741.75},
WindowMargins->{{-6, Automatic}, {Automatic, -6}},
Magnification:>1.1 Inherited,
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1fe5995c-71d5-46c5-9158-53a323060b73"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 96, 0, 107, "Title",ExpressionUUID->"c8e2aa31-185a-442d-837a-f909475acdac"],
Cell[679, 24, 75, 0, 58, "Subtitle",ExpressionUUID->"edfcb7a1-6f85-47f0-a57a-29c4e1dab6a4"],
Cell[757, 26, 401, 10, 31, "Input",ExpressionUUID->"43d4ef48-5e30-4476-891c-d2982427656e"],
Cell[CellGroupData[{
Cell[1183, 40, 193, 4, 31, "Input",ExpressionUUID->"50f1df36-f208-4c8d-9e68-a63729686596"],
Cell[1379, 46, 24372, 572, 409, "Output",ExpressionUUID->"a5d57228-26c3-4bc6-853b-303bee3d335c"]
}, Open  ]],
Cell[25766, 621, 244, 4, 38, "Text",ExpressionUUID->"76fe2f39-6bbb-4d99-8c07-c246abc3290a"],
Cell[26013, 627, 280, 8, 31, "Input",ExpressionUUID->"e25964a0-26b2-44a5-8cc1-4c0a13cb3b3f"],
Cell[CellGroupData[{
Cell[26318, 639, 357, 9, 31, "Input",ExpressionUUID->"366cd052-0544-4e22-9ef8-b3834a034c1d"],
Cell[26678, 650, 80184, 1486, 681, "Output",ExpressionUUID->"46d9f1aa-d20b-482d-962d-c8f53560f212"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106899, 2141, 185, 3, 31, "Input",ExpressionUUID->"8cc4ae2f-537c-4bef-aef0-0744fd6f5c31"],
Cell[107087, 2146, 314388, 5564, 976, "Output",ExpressionUUID->"a90037dc-c6e4-4041-810f-a9d84b490650"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421512, 7715, 483, 13, 31, "Input",ExpressionUUID->"173f7ccc-181a-438d-a2ec-65df5c525b0a"],
Cell[421998, 7730, 4886, 115, 81, "Output",ExpressionUUID->"7d05d3d8-2499-41a5-8660-4492fc5d915f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426921, 7850, 431, 11, 31, "Input",ExpressionUUID->"c9c71694-d149-40f3-95b4-6b64e11c901d"],
Cell[427355, 7863, 2379, 55, 238, "Output",ExpressionUUID->"3baa2648-bb92-4851-824c-679d0b37174c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[429771, 7923, 243, 6, 31, "Input",ExpressionUUID->"38805031-ef57-4140-bccd-a99cbbd7bd1a"],
Cell[430017, 7931, 3782, 87, 236, "Output",ExpressionUUID->"6161b5e2-7aaf-4adf-89a3-c4795b3a4906"]
}, Open  ]],
Cell[CellGroupData[{
Cell[433836, 8023, 181, 4, 31, "Input",ExpressionUUID->"e8dc86b1-690f-4d28-9d7f-0c1e1a42d54c"],
Cell[434020, 8029, 9775, 227, 301, "Output",ExpressionUUID->"ca5a4b87-9ac3-400c-a369-a67b17a80761"]
}, Open  ]],
Cell[CellGroupData[{
Cell[443832, 8261, 431, 13, 31, "Input",ExpressionUUID->"b9e76c39-e84c-4859-8968-15ed5d6e0927"],
Cell[444266, 8276, 192, 4, 35, "Output",ExpressionUUID->"b6fdfb4e-4a19-4dd6-988a-417cb2ca29b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444495, 8285, 211, 5, 31, "Input",ExpressionUUID->"84849310-183a-444f-8048-97f477818aec"],
Cell[444709, 8292, 622, 15, 567, "Output",ExpressionUUID->"c097062a-8244-443e-980d-477e01856668"]
}, Open  ]],
Cell[CellGroupData[{
Cell[445368, 8312, 505, 15, 31, "Input",ExpressionUUID->"159ffcf2-f3d1-43e3-b22e-793e15737364"],
Cell[445876, 8329, 622, 15, 651, "Output",ExpressionUUID->"9280e870-21d9-41be-992d-2af2ce58b41b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446535, 8349, 86, 0, 74, "Section",ExpressionUUID->"56f19cdb-c27b-4580-9105-2538e2e9a06a"],
Cell[CellGroupData[{
Cell[446646, 8353, 163, 3, 59, "Subsection",ExpressionUUID->"313dab99-5de5-4faa-87d7-bba705f129db"],
Cell[446812, 8358, 5596, 143, 366, "Input",ExpressionUUID->"cce8930c-cdfa-4720-9c41-6b271b3a9829"]
}, Closed]],
Cell[CellGroupData[{
Cell[452445, 8506, 160, 3, 41, "Subsection",ExpressionUUID->"dad596c4-3977-4a82-bae5-d2f6cc71e93d"],
Cell[CellGroupData[{
Cell[452630, 8513, 882, 19, 52, "Input",ExpressionUUID->"f7e3f02d-03ca-4339-8c40-54717109a5d2"],
Cell[453515, 8534, 148452, 2661, 575, "Output",ExpressionUUID->"25f3b938-8800-4a1b-be38-52b773d6ca87"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[602028, 11202, 85, 0, 74, "Section",ExpressionUUID->"37a7719d-84e5-4940-921a-329efc134af6"],
Cell[CellGroupData[{
Cell[602138, 11206, 161, 3, 59, "Subsection",ExpressionUUID->"9136715a-2578-4106-83d1-201945e3c2ec"],
Cell[602302, 11211, 5583, 157, 534, "Input",ExpressionUUID->"a86c7859-b4f0-4540-9612-19ea9520581b"]
}, Closed]],
Cell[CellGroupData[{
Cell[607922, 11373, 152, 3, 41, "Subsection",ExpressionUUID->"93ed5c3a-2a22-4539-a45b-2e39ddea45ae"],
Cell[CellGroupData[{
Cell[608099, 11380, 775, 22, 73, "Input",ExpressionUUID->"02146935-423a-436b-8145-90d9b87b46c6"],
Cell[608877, 11404, 149007, 2576, 409, "Output",ExpressionUUID->"b72af82c-171a-451c-9e60-0673b672f311"]
}, Open  ]],
Cell[757899, 13983, 155, 3, 52, "Input",ExpressionUUID->"75a27f09-020c-4ff8-bbcc-6ea8ab443d0d"],
Cell[CellGroupData[{
Cell[758079, 13990, 1206, 34, 73, "Input",ExpressionUUID->"16960c6d-4dbd-436c-ac05-6554abec1862"],
Cell[759288, 14026, 708593, 12075, 409, "Output",ExpressionUUID->"e908528b-a0f8-45d6-8211-bcc0619255b2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1467918, 26106, 254, 6, 31, "Input",ExpressionUUID->"00f1b415-b9af-4307-8657-569072808cfb"],
Cell[1468175, 26114, 24370, 572, 643, "Output",ExpressionUUID->"e53136df-890a-4e4f-b9bd-138f06a9f35a"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1492618, 26694, 137, 3, 107, "Title",ExpressionUUID->"41bbe1c0-a3f5-4412-bb15-af540507245d"],
Cell[CellGroupData[{
Cell[1492780, 26701, 212, 5, 31, "Input",ExpressionUUID->"d750286b-24a8-49a0-9093-2119389f0047"],
Cell[1492995, 26708, 197, 3, 35, "Output",ExpressionUUID->"f72d9189-b3f7-42f5-8d34-386dd60e2fd8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1493229, 26716, 403, 8, 31, "Input",ExpressionUUID->"e1199366-36bf-42d8-bfd1-f381cbaedd19"],
Cell[1493635, 26726, 12159, 243, 1350, "Output",ExpressionUUID->"57f05b44-721a-46f9-a157-f4d1316ed9aa"]
}, Open  ]]
}, Open  ]]
}
]
*)

